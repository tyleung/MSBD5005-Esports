{"version":3,"sources":["webpack:///./node_modules/axios/lib/utils.js","webpack:///./node_modules/core-js/modules/_global.js","webpack:///./node_modules/core-js/modules/_hide.js","webpack:///./node_modules/core-js/modules/_wks.js","webpack:///./node_modules/core-js/modules/_export.js","webpack:///./node_modules/core-js/modules/_core.js","webpack:///./node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/core-js/modules/_fails.js","webpack:///./node_modules/core-js/modules/_has.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/core-js/modules/_an-object.js","webpack:///./node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/core-js/modules/_uid.js","webpack:///./node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/core-js/modules/_strict-method.js","webpack:///./node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/core-js/modules/_object-keys.js","webpack:///./node_modules/core-js/modules/_shared-key.js","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/core-js/modules/_array-methods.js","webpack:///./node_modules/core-js/modules/_iobject.js","webpack:///./node_modules/core-js/modules/_cof.js","webpack:///./node_modules/core-js/modules/_defined.js","webpack:///./node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/core-js/modules/_shared.js","webpack:///./node_modules/core-js/modules/_library.js","webpack:///./node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/core-js/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/datamaps/dist/datamaps.all.js","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/is-buffer/index.js","webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/axios/lib/helpers/btoa.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///./node_modules/core-js/modules/es6.array.for-each.js","webpack:///./node_modules/core-js/modules/_ie8-dom-define.js","webpack:///./node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/core-js/modules/_array-species-create.js","webpack:///./node_modules/core-js/modules/_array-species-constructor.js","webpack:///./node_modules/core-js/modules/_is-array.js","webpack:///./node_modules/core-js/modules/es6.array.index-of.js","webpack:///./node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/modules/web.dom.iterable.js","webpack:///./node_modules/core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/modules/_iter-step.js","webpack:///./node_modules/core-js/modules/_iter-define.js","webpack:///./node_modules/core-js/modules/_iter-create.js","webpack:///./node_modules/core-js/modules/_object-create.js","webpack:///./node_modules/core-js/modules/_object-dps.js","webpack:///./node_modules/core-js/modules/_object-keys-internal.js","webpack:///./node_modules/core-js/modules/_html.js","webpack:///./node_modules/core-js/modules/_object-gpo.js","webpack:///./node_modules/core-js/modules/es6.object.keys.js","webpack:///./node_modules/core-js/modules/_object-sap.js","webpack:///./node_modules/core-js/modules/es6.array.map.js","webpack:///./node_modules/datamaps/node_modules/d3/d3.js","webpack:///./node_modules/datamaps/node_modules/topojson/build/topojson.js","webpack:///./node_modules/d3/dist/package.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-axis/src/array.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/clone.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-selection/src/local.js","webpack:///./node_modules/d3-drag/src/event.js","webpack:///./node_modules/d3-drag/src/drag.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/quantize.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-ease/src/poly.js","webpack:///./node_modules/d3-ease/src/sin.js","webpack:///./node_modules/d3-ease/src/back.js","webpack:///./node_modules/d3-ease/src/elastic.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-brush/src/brush.js","webpack:///./node_modules/d3-chord/src/math.js","webpack:///./node_modules/d3-chord/src/array.js","webpack:///./node_modules/d3-chord/src/chord.js","webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-contour/src/array.js","webpack:///./node_modules/d3-contour/src/density.js","webpack:///./node_modules/d3-dsv/src/dsv.js","webpack:///./node_modules/d3-dsv/src/csv.js","webpack:///./node_modules/d3-dsv/src/tsv.js","webpack:///./node_modules/d3-fetch/src/text.js","webpack:///./node_modules/d3-fetch/src/dsv.js","webpack:///./node_modules/d3-fetch/src/xml.js","webpack:///./node_modules/d3-quadtree/src/add.js","webpack:///./node_modules/d3-quadtree/src/cover.js","webpack:///./node_modules/d3-quadtree/src/quad.js","webpack:///./node_modules/d3-quadtree/src/x.js","webpack:///./node_modules/d3-quadtree/src/y.js","webpack:///./node_modules/d3-quadtree/src/quadtree.js","webpack:///./node_modules/d3-quadtree/src/data.js","webpack:///./node_modules/d3-quadtree/src/extent.js","webpack:///./node_modules/d3-quadtree/src/find.js","webpack:///./node_modules/d3-quadtree/src/remove.js","webpack:///./node_modules/d3-quadtree/src/root.js","webpack:///./node_modules/d3-quadtree/src/size.js","webpack:///./node_modules/d3-quadtree/src/visit.js","webpack:///./node_modules/d3-quadtree/src/visitAfter.js","webpack:///./node_modules/d3-force/src/simulation.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/formatTrim.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-geo/src/adder.js","webpack:///./node_modules/d3-geo/src/math.js","webpack:///./node_modules/d3-geo/src/noop.js","webpack:///./node_modules/d3-geo/src/area.js","webpack:///./node_modules/d3-geo/src/cartesian.js","webpack:///./node_modules/d3-geo/src/bounds.js","webpack:///./node_modules/d3-geo/src/rotation.js","webpack:///./node_modules/d3-geo/src/circle.js","webpack:///./node_modules/d3-geo/src/clip/buffer.js","webpack:///./node_modules/d3-geo/src/pointEqual.js","webpack:///./node_modules/d3-geo/src/clip/rejoin.js","webpack:///./node_modules/d3-geo/src/polygonContains.js","webpack:///./node_modules/d3-geo/src/clip/index.js","webpack:///./node_modules/d3-geo/src/clip/antimeridian.js","webpack:///./node_modules/d3-geo/src/length.js","webpack:///./node_modules/d3-geo/src/path/area.js","webpack:///./node_modules/d3-geo/src/path/context.js","webpack:///./node_modules/d3-geo/src/path/measure.js","webpack:///./node_modules/d3-geo/src/path/string.js","webpack:///./node_modules/d3-geo/src/transform.js","webpack:///./node_modules/d3-geo/src/projection/resample.js","webpack:///./node_modules/d3-geo/src/projection/index.js","webpack:///./node_modules/d3-geo/src/projection/azimuthal.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/mercator.js","webpack:///./node_modules/d3-geo/src/projection/equirectangular.js","webpack:///./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/equalEarth.js","webpack:///./node_modules/d3-geo/src/projection/gnomonic.js","webpack:///./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///./node_modules/d3-geo/src/projection/orthographic.js","webpack:///./node_modules/d3-geo/src/projection/stereographic.js","webpack:///./node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack:///./node_modules/d3-hierarchy/src/array.js","webpack:///./node_modules/d3-hierarchy/src/treemap/round.js","webpack:///./node_modules/d3-hierarchy/src/treemap/dice.js","webpack:///./node_modules/d3-hierarchy/src/tree.js","webpack:///./node_modules/d3-hierarchy/src/treemap/slice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack:///./node_modules/d3-hierarchy/src/treemap/resquarify.js","webpack:///./node_modules/d3-polygon/src/hull.js","webpack:///./node_modules/d3-random/src/defaultSource.js","webpack:///./node_modules/d3-random/src/normal.js","webpack:///./node_modules/d3-random/src/uniform.js","webpack:///./node_modules/d3-random/src/irwinHall.js","webpack:///./node_modules/d3-random/src/logNormal.js","webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-random/src/bates.js","webpack:///./node_modules/d3-random/src/exponential.js","webpack:///./node_modules/d3-time/src/interval.js","webpack:///./node_modules/d3-time/src/millisecond.js","webpack:///./node_modules/d3-time/src/duration.js","webpack:///./node_modules/d3-time/src/second.js","webpack:///./node_modules/d3-time/src/minute.js","webpack:///./node_modules/d3-time/src/hour.js","webpack:///./node_modules/d3-time/src/day.js","webpack:///./node_modules/d3-time/src/week.js","webpack:///./node_modules/d3-time/src/month.js","webpack:///./node_modules/d3-time/src/year.js","webpack:///./node_modules/d3-time/src/utcMinute.js","webpack:///./node_modules/d3-time/src/utcHour.js","webpack:///./node_modules/d3-time/src/utcDay.js","webpack:///./node_modules/d3-time/src/utcWeek.js","webpack:///./node_modules/d3-time/src/utcMonth.js","webpack:///./node_modules/d3-time/src/utcYear.js","webpack:///./node_modules/d3-time-format/src/locale.js","webpack:///./node_modules/d3-time-format/src/defaultLocale.js","webpack:///./node_modules/d3-time-format/src/isoFormat.js","webpack:///./node_modules/d3-time-format/src/isoParse.js","webpack:///./node_modules/d3-scale-chromatic/src/colors.js","webpack:///./node_modules/d3-scale-chromatic/src/ramp.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack:///./node_modules/d3-shape/src/math.js","webpack:///./node_modules/d3-shape/src/curve/linear.js","webpack:///./node_modules/d3-shape/src/curve/radial.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-shape/src/symbol/diamond.js","webpack:///./node_modules/d3-shape/src/symbol/circle.js","webpack:///./node_modules/d3-shape/src/symbol/star.js","webpack:///./node_modules/d3-shape/src/noop.js","webpack:///./node_modules/d3-shape/src/symbol/triangle.js","webpack:///./node_modules/d3-shape/src/symbol/wye.js","webpack:///./node_modules/d3-shape/src/curve/basis.js","webpack:///./node_modules/d3-shape/src/curve/basisClosed.js","webpack:///./node_modules/d3-shape/src/curve/basisOpen.js","webpack:///./node_modules/d3-shape/src/curve/bundle.js","webpack:///./node_modules/d3-shape/src/curve/cardinal.js","webpack:///./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack:///./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack:///./node_modules/d3-shape/src/curve/catmullRom.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack:///./node_modules/d3-shape/src/curve/linearClosed.js","webpack:///./node_modules/d3-shape/src/curve/monotone.js","webpack:///./node_modules/d3-shape/src/curve/natural.js","webpack:///./node_modules/d3-shape/src/curve/step.js","webpack:///./node_modules/d3-voronoi/src/RedBlackTree.js","webpack:///./node_modules/d3-voronoi/src/Edge.js","webpack:///./node_modules/d3-voronoi/src/Cell.js","webpack:///./node_modules/d3-voronoi/src/Circle.js","webpack:///./node_modules/d3-voronoi/src/Beach.js","webpack:///./node_modules/d3-voronoi/src/Diagram.js","webpack:///./node_modules/d3-zoom/src/transform.js","webpack:///./node_modules/topojson-client/src/bisect.js","webpack:///./node_modules/topojson-server/src/hash/point-hash.js","webpack:///./node_modules/topojson-simplify/src/spherical.js"],"names":["bind","__webpack_require__","isBuffer","toString","Object","prototype","isArray","val","call","isObject","isFunction","forEach","obj","fn","i","l","length","key","hasOwnProperty","module","exports","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","arguments","extend","a","b","thisArg","trim","str","replace","global","Math","self","Function","__g","dP","createDesc","object","value","f","store","uid","Symbol","USE_SYMBOL","name","core","hide","redefine","ctx","$export","type","source","own","out","exp","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","target","expProto","undefined","U","W","R","version","__e","it","defineProperty","get","exec","e","process","utils","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","headers","defaults","adapter","XMLHttpRequest","getDefaultAdapter","transformRequest","data","JSON","stringify","transformResponse","parse","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","Accept","method","anObject","IE8_DOM_DEFINE","toPrimitive","O","Attributes","TypeError","has","SRC","$toString","TPL","split","inspectSource","safe","join","String","this","id","px","random","concat","defined","fails","arg","IObject","$keys","enumBugKeys","keys","shared","args","Array","apply","settle","buildURL","parseHeaders","isURLSameOrigin","createError","btoa","config","Promise","resolve","reject","requestData","requestHeaders","request","loadEvent","xDomain","XDomainRequest","url","onprogress","ontimeout","auth","username","password","Authorization","open","toUpperCase","params","paramsSerializer","readyState","responseURL","indexOf","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onerror","cookies","xsrfValue","withCredentials","read","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","enhanceError","message","code","error","Error","__CANCEL__","Cancel","is","createElement","bitmap","enumerable","configurable","writable","aFunction","that","c","toObject","toLength","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","create","$this","callbackfn","res","index","push","cof","propertyIsEnumerable","slice","toInteger","min","ceil","floor","isNaN","mode","copyright","toIObject","toAbsoluteIndex","IS_INCLUDES","el","fromIndex","addToUnscopables","step","Iterators","iterated","kind","_t","_i","_k","Arguments","def","TAG","tag","stat","d3","topojson","defaultOptions","scope","responsive","aspectRatio","setProjection","element","options","projection","path","width","offsetWidth","height","offsetHeight","svg","geo","albersUsa","scale","translate","PI","append","datum","attr","clipAngle","rotate","projectionConfig","rotation","dataType","done","fills","defaultFill","filters","geographyConfig","dataUrl","hideAntarctica","hideHawaiiAndAlaska","borderWidth","borderOpacity","borderColor","popupTemplate","geography","properties","popupOnHover","highlightOnHover","highlightFillColor","highlightBorderColor","highlightBorderWidth","highlightBorderOpacity","bubblesConfig","radius","fillOpacity","animate","highlightFillOpacity","exitDelay","arcConfig","strokeColor","strokeWidth","arcSharpness","animationSpeed","origin","destination","latitude","longitude","datumValue","optionsValue","context","optionsValues","fnContext","addLegend","layer","html","label","fillKey","legendTitle","defaultFillName","labels","select","addGraticule","graticule","insert","handleArcs","arcs","selectAll","enter","style","originXY","destXY","latLngToXY","centroid","midXY","greatArc","d","sharpness","on","updatePopup","transition","delay","getTotalLength","WebkitTransition","strokeDasharray","strokeDashoffset","getBoundingClientRect","exit","remove","handleLabels","labelStartCoodinates","x","y","center","xOffset","yOffset","smallStateIndex","yStart","fontSize","labelColor","lineWidth","fontFamily","text","customLabelText","handleBubbles","fillData","filterData","bubbles","datumHasCoords","latLng","centered","filterKey","previousAttributes","fill","stroke","stroke-width","fill-opacity","duration","prop","Datamap","position","padding-bottom","addPlugin","disableDefaultStyles","empty","draw","resize","newsize","clientWidth","oldsize","pathAndProjection","json","results","customTopo","dataJson","tmpData","Datamaps","updateChoropleth","colorCodeData","geoConfig","subunits","addLayer","geoData","feature","objects","features","filter","fillColor","test","userAgent","parentNode","appendChild","hoverover","worldTopo","world","geometries","transform","abwTopo","afgTopo","agoTopo","aiaTopo","albTopo","aldTopo","andTopo","areTopo","argTopo","armTopo","asmTopo","ataTopo","atcTopo","atfTopo","atgTopo","ausTopo","autTopo","azeTopo","bdiTopo","belTopo","benTopo","bfaTopo","bgdTopo","bgrTopo","bhrTopo","bhsTopo","bihTopo","bjnTopo","blmTopo","blrTopo","blzTopo","bmuTopo","bolTopo","braTopo","brbTopo","brnTopo","btnTopo","norTopo","bwaTopo","cafTopo","canTopo","cheTopo","chlTopo","chnTopo","civTopo","clpTopo","cmrTopo","codTopo","cogTopo","cokTopo","colTopo","comTopo","cpvTopo","criTopo","csiTopo","cubTopo","cuwTopo","cymTopo","cynTopo","cypTopo","czeTopo","deuTopo","djiTopo","dmaTopo","dnkTopo","domTopo","dzaTopo","ecuTopo","egyTopo","eriTopo","esbTopo","espTopo","estTopo","ethTopo","finTopo","fjiTopo","flkTopo","fraTopo","froTopo","fsmTopo","gabTopo","psxTopo","gbrTopo","geoTopo","ggyTopo","ghaTopo","gibTopo","ginTopo","gmbTopo","gnbTopo","gnqTopo","grcTopo","grdTopo","grlTopo","gtmTopo","gumTopo","guyTopo","hkgTopo","hmdTopo","hndTopo","hrvTopo","htiTopo","hunTopo","idnTopo","imnTopo","indTopo","ioaTopo","iotTopo","irlTopo","irnTopo","irqTopo","islTopo","isrTopo","itaTopo","jamTopo","jeyTopo","jorTopo","jpnTopo","kabTopo","kasTopo","kazTopo","kenTopo","kgzTopo","khmTopo","kirTopo","knaTopo","korTopo","kosTopo","kwtTopo","laoTopo","lbnTopo","lbrTopo","lbyTopo","lcaTopo","lieTopo","lkaTopo","lsoTopo","ltuTopo","luxTopo","lvaTopo","macTopo","mafTopo","marTopo","mcoTopo","mdaTopo","mdgTopo","mdvTopo","mexTopo","mhlTopo","mkdTopo","mliTopo","mltTopo","mmrTopo","mneTopo","mngTopo","mnpTopo","mozTopo","mrtTopo","msrTopo","musTopo","mwiTopo","mysTopo","namTopo","nclTopo","nerTopo","nfkTopo","ngaTopo","nicTopo","niuTopo","nldTopo","nplTopo","nruTopo","nulTopo","nzlTopo","omnTopo","pakTopo","panTopo","pcnTopo","perTopo","pgaTopo","phlTopo","plwTopo","pngTopo","polTopo","priTopo","prkTopo","prtTopo","pryTopo","pyfTopo","qatTopo","rouTopo","rusTopo","rwaTopo","sahTopo","sauTopo","scrTopo","sdnTopo","sdsTopo","senTopo","serTopo","sgpTopo","sgsTopo","shnTopo","slbTopo","sleTopo","slvTopo","smrTopo","solTopo","somTopo","spmTopo","srbTopo","stpTopo","surTopo","svkTopo","svnTopo","sweTopo","swzTopo","sxmTopo","sycTopo","syrTopo","tcaTopo","tcdTopo","tgoTopo","thaTopo","tjkTopo","tkmTopo","tlsTopo","tonTopo","ttoTopo","tunTopo","turTopo","tuvTopo","twnTopo","tzaTopo","ugaTopo","ukrTopo","umiTopo","uryTopo","usaTopo","usa","usgTopo","uzbTopo","vatTopo","vctTopo","venTopo","vgbTopo","virTopo","vnmTopo","vutTopo","wlfTopo","wsbTopo","wsmTopo","yemTopo","zafTopo","zmbTopo","zweTopo","lat","lng","className","first","subunit","reset","color","subunitData","mouse","pluginFn","callback","createNewLayer","jQuery","datamaps","datamap","Axios","createInstance","defaultConfig","instance","axios","instanceConfig","CancelToken","isCancel","all","promises","spread","default","constructor","readFloatLE","isSlowBuffer","_isBuffer","InterceptorManager","dispatchRequest","interceptors","chain","interceptor","unshift","fulfilled","rejected","shift","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","versions","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","normalizedName","encode","encodeURIComponent","serializedParams","parts","v","toISOString","ignoreDuplicateOf","parsed","line","substr","originURL","msie","urlParsingNode","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","location","requestURL","chars","E","input","block","charCode","output","idx","map","charCodeAt","write","expires","domain","secure","cookie","Date","toGMTString","match","RegExp","decodeURIComponent","now","handlers","use","eject","h","transformData","isAbsoluteURL","combineURLs","throwIfCancellationRequested","throwIfRequested","baseURL","reason","fns","relativeURL","executor","resolvePromise","token","arr","$forEach","STRICT","valueOf","speciesConstructor","original","SPECIES","C","$indexOf","$native","NEGATIVE_ZERO","searchElement","max","$iterators","getKeys","wks","ITERATOR","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","NAME","explicit","Collection","proto","UNSCOPABLES","ArrayProto","LIBRARY","$iterCreate","setToStringTag","getPrototypeOf","BUGGY","returnThis","Base","Constructor","next","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","DEF_VALUES","VALUES_BUG","$default","$entries","$anyNative","entries","values","descriptor","dPs","IE_PROTO","Empty","createDict","iframeDocument","iframe","display","src","contentWindow","lt","close","Properties","defineProperties","arrayIndexOf","names","documentElement","ObjectProto","KEY","$map","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_arraySlice","d3_array","list","d3_document","d3_documentElement","node","ownerDocument","d3_window","defaultView","childNodes","nodeType","setProperty","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","d3_style_setProperty","space","local","priority","d3_ascending","NaN","d3_number","d3_numeric","d3_bisector","compare","left","lo","hi","mid","right","ascending","descending","n","extent","sum","s","mean","j","quantile","p","H","median","numbers","sort","variance","m","deviation","sqrt","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","t","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","arrays","merged","abs","d3_class","ctor","d3_Map","_","range","start","stop","Infinity","k","d3_range_integerScale","set","o","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","d3_vendorSymbol","d3_vendorPrefixes","prefixName","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","order","add","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","listenerByName","event","z","listener","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","requote","d3_requote_re","d3_subclass","__proto__","property","d3_selection","groups","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","selection","d3_selection_selector","selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","__data__","d3_nsXhtml","d3_nsPrefix","xhtml","xlink","xml","xmlns","d3_selection_attr","ns","qualify","removeAttributeNS","removeAttribute","d3_collapse","d3_selection_classedRe","d3_selection_classes","d3_selection_classed","d3_selection_classedName","re","classList","getAttribute","lastIndex","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","parent","removeChild","d3_selection_dataNode","d3_selection_filter","d3_selection_each","d3_selection_enter","d3_selection_enterPrototype","prefix","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","textContent","innerHTML","before","insertBefore","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","update","nextSibling","comparator","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","removeEventListener","$","d3_selection_onFilter","upgroup","j0","d3_selection_enterInsertBefore","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","w","suppressClick","container","d3_mousePoint","d3_mouse_bug44083","changedTouches","ownerSVGElement","createSVGPoint","point","scrollX","scrollY","ctm","top","margin","padding","border","getScreenCTM","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","mousedown","dragstart","touchstart","subject","move","end","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","dx","dy","position1","position0","dragRestore","ε","ε2","π","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","ux0","uy0","w0","ux1","uy1","w1","d2","log","d1","b0","b1","r0","r1","coshr0","u","d3_tanh","d3_sinh","zoom","translate0","center0","mousewheelTimer","touchtime","x0","x1","y0","y1","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","g","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","scaleTo","translateTo","zoomTo","__chart__","pow","rescale","invert","zoomstarted","zoomed","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","moved","ended","changed","LN2","q","l0","l1","distance1","scale1","d3_behavior_zoomDelta","shiftKey","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","cx","cy","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","rgb","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","r","brighter","darker","hcl","d3_hclPrototype","d3_hcl_lab","cos","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","format","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","mimeType","d3_xhr","xhr","respond","d3_xhrHasResponse","load","onload","onreadystatechange","progress","header","overrideMimeType","beforesend","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","typedResponse","formatRow","formatValue","parseRows","eol","EOL","EOF","rows","N","I","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","time","d3_format_precision","LN10","flush","d3_formatPrefixes","symbol","formatPrefix","precision","d3_format_re","d3_format_types","fromCharCode","X","toPrecision","toExponential","toFixed","d3_format_typeDefault","d3_time","d3_date","d3_date_utc","UTC","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","number","date","d0","offset","dt","times","utc","d3_time_interval_utc","year","day","years","days","dayOfYear","interval","week","sunday","weeks","weekOfYear","sundayOfYear","d3_time_formatPads","-","0","d3_time_numberRe","d3_time_percentRe","d3_time_formatPad","sign","string","d3_time_formatRe","d3_time_formatLookup","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberSunday","d3_time_parseWeekNumberMonday","d3_time_parseFullYear","d3_time_parseYear","d3_time_expandYear","d3_time_parseZone","Z","d3_time_parseMonthNumber","d3_time_parseDay","d3_time_parseDayOfYear","d3_time_parseHour24","d3_time_parseMinutes","M","d3_time_parseSeconds","d3_time_parseMilliseconds","L","d3_time_zone","zs","zh","zm","d3_time_parseLiteralPercent","d3_time_formatMulti","formats","locale","numberFormat","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","specifier","align","zfill","comma","suffix","integer","exponent","zcomma","fullSuffix","negative","unit","after","lastIndexOf","d3_locale_numberFormat","timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","d3_time_formats","d3_time_parse","localZ","d3_time_parsers","multi","d3_time_periodLookup","d3_time_dayRe","d3_time_dayLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","A","mondayOfYear","Y","%","d3_locale_timeFormat","d3_locale_enUS","d3_adder","d3_adderSum","d3_adderTemp","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","FeatureCollection","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","angle","compareRanges","withinRange","best","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","arc","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","d3_geo_clipSegmentLength1","lines","rejoin","d3_geo_clipAntimeridian","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","ρ0","forward","ρ0_y","clipExtent","valid","conicEqualArea","raw","albers","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBufferCircle","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","x2","y2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","point2","point1","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","projectStream","contextStream","cacheStream","pointRadius","d3_geo_pathProjectStream","pointCircle","pointLineStart","lineEndPolygon","moveTo","lineTo","closePath","projectionMutator","equirectangular","circle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_interpolate","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","d3_geo_mercator","d3_geo_conicEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiCreateBeach","site","beach","d3_geom_voronoiRedBlackNode","edge","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","disappearing","lArc","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","newArc","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","splice","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","root","visit","d3_geom_quadtreeVisit","sx","sy","children","find","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","linear","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","ease","d3_ease_clamp","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","as","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","py","d3_layout_forceMouseout","interpolateTransform","layout","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","pie","Number","d3_layout_pieSortByValue","padAngle","da","pa","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","bottom","tops","bottoms","silhouette","wiggle","s2","s3","o0","expand","zero","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","span","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","ticks","tickFormat","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","identity","d3_scale_identity","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","equals","curve","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","count","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","subnodes","nameNS","attrNull","attrNullNS","attrTween","styleNull","styleTween","inheritId","id0","id1","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","responseXML","transformAbsolute","feature$1","topology","absolute","geometryType","stitchArcs","stitchedArcs","fragmentByStart","fragmentByEnd","fragments","emptyIndex","dp","ends","fg","gf","meshArcs","geomsByArc","geoms","cartesianTriangleArea","triangle","mergeArcs","polygonsByArc","components","register","ring$$","component","ki","compareArea","mesh","indexesByArc","ij","ik","presimplify","triangleArea","relative","transformRelative","heap","up","down","removed","minAreaHeap","maxArea","factory","ascendingComparator","ascendingBisect","array_array","src_merge","Dispatch","typename","T","typenames","types","parseTypenames","src_dispatch","namespaces","creator","fullname","uri","none","src_selector","selectorAll_empty","selectorAll","matcher","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","sparse","EnterNode","_next","_parent","keyPrefix","bindIndex","groupLength","dataLength","bindKey","sort_ascending","src_window","styleValue","classArray","ClassList","_node","_names","classedAdd","classedRemove","textRemove","htmlRemove","raise","previousSibling","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","filterContextListener","contextListener","event1","event0","__on","onAdd","dispatchEvent","CustomEvent","createEvent","initEvent","cancelable","selection_root","Selection","parents","_groups","_parents","selection_selection","src_constant","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","clone","deep","on_parseTypenames","src_selection","nextId","Local","DragEvent","define","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","color_color","Rgb","rgbn","rgba","hsla","rgbConvert","opacity","color_rgb","hex","Hsl","hslConvert","hsl2rgb","displayable","deg2rad","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","labConvert","Lab","Hcl","rgb2lrgb","xyz2lab","lab2xyz","lrgb2rgb","hclConvert","cubehelix_D","cubehelix_E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","cubehelixConvert","v1","v2","v3","cosh","sinh","d3_interpolate_src_constant","color_hue","gamma","nogamma","exponential","src_rgb","rgbGamma","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","cssNode","cssRoot","cssView","svgNode","src_string","one","string_zero","degrees","decompose_identity","translateX","translateY","skewX","scaleX","scaleY","decompose","pxComma","pxParen","degParen","xa","ya","xb","yb","interpolateTransformCss","interpolateTransformSvg","hsl_hsl","hue","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","cubehelixLong","taskHead","taskTail","timer_frame","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","restart","wake","timerFlush","sleep","nap","poke","clearInterval","setInterval","src_timeout","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","state","schedule_create","schedule_init","schedule","schedule_get","schedule_set","tweenValue","_id","transition_interpolate","selection_Selection","transition_id","Transition","_name","newId","selection_prototype","on0","on1","sit","every","on_start","onFunction","value00","value10","interpolate0","value0","value1","_value","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","removeFunction","tween0","tween1","easeConstant","custom","polyIn","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","tau","defaultTiming","elasticIn","amplitude","period","elasticOut","elasticInOut","transition_inherit","brush_type","path_pi","path_tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","quadraticCurveTo","bezierCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","ccw","Map","map_map","src_map","Set","set_set","QUOTE","NEWLINE","RETURN","objectConverter","columns","DELIMITER","eof","convert","customConverter","columnSet","column","inferColumns","csvParse","tsvParse","ok","src_text","init","fetch","dsvParse","parser","DOMParser","parseFromString","add_add","xp","yp","_root","_x","_y","src_quad","x_defaultX","y_defaultY","Quadtree","addAll","leaf_copy","treeProto","cover","xz","yz","quads","retainer","removeAll","visitAfter","formatDecimal","coefficient","src_exponent","formatSpecifier","FormatSpecifier","prefixExponent","defaultLocale_locale","formatTrim","formatRounded","formatTypes","d3_format_src_identity","prefixes","src_locale","numerals","formatNumerals","percent","newFormat","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","defaultLocale","adder","Adder","adder_add","temp","math_epsilon","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","radians","math_cos","math_sin","noop_noop","cartesian_cartesian","lambda","phi","cosPhi","cartesianCross","cartesianNormalizeInPlace","rotationIdentity","clip_buffer","pointEqual","Intersection","compareIntersection","startInside","rejoin_link","polygonContains_sum","polygonContains","sinPhi","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","phi1","delta","absDelta","phiArc","src_clip","sink","ringBuffer","ringSink","clip_compareIntersection","validSegment","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","PathContext","_context","_radius","_line","_point","PathString","_string","string_circle","_circle","transformer","TransformStream","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","equirectangularRaw","A1","A2","A3","A4","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi2","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","count_count","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","eachAfter","leastCommonAncestor","descendants","leaves","dice","TreeNode","treemap_slice","squarify_phi","squarifyRatio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","resquarify","_squarify","src_defaultSource","src_normal","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","sourceRandomLogNormal","randomLogNormal","sourceRandomIrwinHall","randomIrwinHall","d3_scale_src_array_array","sourceRandomBates","randomBates","sourceRandomExponential","randomExponential","interval_t0","interval_t1","newInterval","floori","offseti","millisecond_millisecond","durationMinute","durationWeek","second_second","minute_minute","hour_hour","day_day","src_day","weekday","monday","tuesday","wednesday","thursday","friday","saturday","month_month","year_year","src_year","utcMinute","utcHour","utcDay","src_utcDay","utcWeekday","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","utcYear","src_utcYear","localDate","utcDate","newYear","src_defaultLocale_locale","utcFormat","utcParse","pads","numberRe","percentRe","requoteRe","formatRe","formatLookup","parseWeekdayNumberSunday","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","V","parseWeekNumberMonday","parseFullYear","parseYear","parseZone","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_weekdays","locale_shortWeekdays","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","utcFormats","parses","parseSpecifier","newParse","newDate","formatLocale","defaultLocale_defaultLocale","src_colors","ramp","scheme","viridis_ramp","src_math_epsilon","d3_shape_src_math_pi","d3_shape_src_math_tau","Linear","areaStart","areaEnd","curve_linear","curveRadial","Radial","_curve","kr","d3_shape_src_noop","basis_point","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","_basis","_beta","cardinal_point","Cardinal","CardinalClosed","_x5","_y5","CardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","monotone_sign","slope3","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","Step","RedBlackTree","RedBlackNode","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","src_RedBlackTree","createEdge","Diagram_edges","setEdgeEnd","halfedges","createBorderEdge","clipEdge","connectEdge","cellHalfedgeAngle","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","Diagram_epsilon2","Diagram_circles","detachCircle","beachPool","createBeach","detachBeach","beaches","removeBeach","Diagram_epsilon","addBeach","leftBreakPoint","rightBreakPoint","createCell","lexicographic","Diagram","sortCellHalfedges","clipEdges","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v01","v11","v10","clipCells","_found","vx","vy","Transform","applyX","applyY","invertX","invertY","rescaleX","rescaleY","Float64Array","Uint32Array"],"mappings":"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4E,GAAA,MACAmN,QACA,0BAGAzR,KAAA,UACAiP,YACAvP,KAAA,aAEA4E,GAAA,MACAmN,OACA,uBAGAzR,KAAA,UACAiP,YACAvP,KAAA,WAEA4E,GAAA,MACAmN,OACA,uBAGAzR,KAAA,eACAiP,YACAvP,KAAA,WAEA4E,GAAA,MACAmN,QAEA,QAGA,SAIAzR,KAAA,UACAiP,YACAvP,KAAA,aAEA4E,GAAA,MACAmN,QACA,aAGAzR,KAAA,UACAiP,YACAvP,KAAA,SAEA4E,GAAA,MACAmN,OACA,kBAGAzR,KAAA,UACAiP,YACAvP,KAAA,gBAEA4E,GAAA,MACAmN,QACA,mCACA,QAGAzR,KAAA,UACAiP,YACAvP,KAAA,UAEA4E,GAAA,MACAmN,QACA,wCAGAzR,KAAA,UACAiP,YACAvP,KAAA,YAEA4E,GAAA,MACAmN,QACA,yBAKAA,QAEA,YACA,SACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,SAGA,YACA,QACA,WAGA,YACA,OACA,QACA,QACA,OACA,QACA,MACA,OACA,QACA,UACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,QACA,SAGA,YACA,UAGA,aACA,SACA,UACA,SACA,UACA,SACA,QACA,SACA,SACA,SACA,SACA,OACA,UACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,QACA,UACA,SACA,UACA,QACA,SACA,QACA,SACA,UAGA,YACA,SACA,QACA,SACA,QACA,OACA,SACA,OACA,OACA,UAGA,YACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,WAGA,aACA,UACA,QACA,SACA,UACA,QACA,SACA,QACA,UACA,WAGA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,SAGA,YACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,SACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,SACA,QACA,MACA,QACA,OACA,UAGA,aACA,SAGA,YACA,QACA,OACA,WAGA,aACA,UACA,SACA,SACA,SAGA,aACA,QACA,QACA,WAGA,YACA,SACA,QACA,SACA,WAGA,aACA,MACA,QACA,SACA,OACA,OACA,QACA,SAGA,aACA,OACA,QACA,QACA,QAGA,YACA,QACA,OACA,UAGA,YACA,MACA,QACA,OACA,QACA,QACA,QACA,QACA,UAGA,YACA,UAGA,YACA,UAGA,aACA,QACA,QACA,QACA,SACA,SACA,SACA,UAGA,aACA,SACA,SACA,SACA,SAGA,aACA,QACA,OACA,UAGA,YACA,SACA,SACA,SACA,UACA,UACA,SACA,UAGA,YACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,SAGA,YACA,QACA,UACA,SACA,UACA,UACA,UACA,WAGA,aACA,SACA,QACA,SACA,SACA,UAGA,aACA,QACA,UACA,QACA,UACA,SACA,UACA,UACA,UACA,OACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,UACA,SACA,SACA,QACA,UACA,QACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,QACA,UACA,SAGA,aACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,QACA,QACA,OACA,QACA,SACA,OACA,SACA,QACA,QACA,SACA,SACA,OACA,SACA,OACA,OACA,OACA,SACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,SACA,OACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,SACA,SAGA,YACA,QACA,SACA,SACA,QACA,QACA,UAGA,YACA,SAGA,YACA,QACA,UACA,QACA,UACA,QACA,SACA,SACA,UAGA,aACA,UAGA,aACA,QACA,QACA,SACA,QACA,SAGA,aACA,SACA,QACA,QACA,SAGA,YACA,SACA,SACA,QACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,WAGA,WACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,SACA,UAGA,WACA,SACA,SACA,QACA,SACA,UACA,UACA,UACA,UACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WAGA,WACA,QACA,SACA,UACA,UACA,QACA,QACA,OACA,WAGA,WACA,UACA,QACA,QACA,QACA,QACA,WAGA,WACA,QACA,OACA,UACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,UAGA,WACA,SACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,OACA,OACA,OACA,QACA,OACA,SACA,QACA,SACA,SACA,UAGA,aaACA,SACA,OACA,SACA,UAGA,aACA,SACA,SACA,UACA,SAGA,aACA,SACA,QACA,UACA,SACA,SAGA,aACA,QACA,QACA,QACA,SAGA,YACA,MACA,SACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,UAGA,YACA,SACA,QACA,OACA,SACA,OACA,WAGA,aACA,OACA,UAGA,aACA,QACA,SACA,SAGA,YACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,UAGA,aACA,QACA,QACA,SACA,QACA,SACA,WAGA,YACA,OACA,SACA,QACA,OACA,QACA,QAGA,YACA,OACA,SACA,QACA,OACA,UAGA,aACA,QACA,SAGA,YACA,QACA,OACA,UAGA,YACA,QACA,QACA,SACA,SACA,UACA,UACA,UAGA,YACA,QACA,QACA,SACA,WAGA,aACA,UAGA,aACA,QACA,UAGA,aACA,SACA,SACA,SACA,SACA,QACA,SAGA,YACA,UAGA,aACA,UAGA,aACA,OACA,SACA,QACA,QACA,SACA,OACA,SAGA,YACA,OACA,OACA,OACA,SAGA,YACA,QACA,OACA,WAGA,aACA,QACA,SACA,QACA,SACA,UACA,SACA,QACA,SACA,UAGA,aACA,SACA,SACA,UACA,SACA,QACA,UAGA,aACA,OACA,QACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,SAGA,aACA,QACA,QACA,SACA,QACA,UACA,UAGA,aACA,SAGA,YACA,QACA,QACA,QACA,SACA,QACA,UAGA,YACA,SACA,OACA,UAGA,aACA,QACA,QACA,QACA,SACA,OACA,SACA,SACA,SACA,SACA,OACA,SAGA,aACA,QACA,QACA,QACA,QACA,OACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,OACA,UACA,UACA,SACA,QACA,SACA,OACA,MACA,WAGA,YACA,QACA,OACA,QACA,QACA,QACA,QACA,SACA,UAGA,aACA,UACA,SACA,UAGA,aACA,QACA,WAGA,YACA,SACA,SACA,SACA,UACA,SAGA,aACA,QACA,UAGA,YACA,OACA,MACA,OACA,SACA,SACA,OACA,SAGA,aACA,QACA,QACA,QACA,OACA,OACA,SACA,UAGA,aACA,UACA,OACA,OACA,QACA,UAGA,aACA,SACA,MACA,QACA,QACA,MACA,WAGA,YACA,QACA,QACA,UACA,SACA,SAGA,aACA,QACA,SACA,UAGA,aACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,SACA,OACA,OACA,SACA,OACA,WAGA,YACA,OACA,QACA,OACA,SACA,SAGA,YACA,QACA,UAGA,YACA,SACA,QACA,OACA,SACA,SACA,QACA,SACA,UACA,QACA,SACA,SACA,UACA,QACA,OACA,QACA,UAGA,aACA,SACA,SACA,SACA,QACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,UACA,UAGA,aACA,QACA,OACA,QACA,QACA,QACA,SAGA,aACA,MACA,MACA,OACA,QACA,QAGA,YACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,UAGA,aACA,MACA,OACA,SAGA,aACA,SACA,SACA,QACA,QACA,SACA,QACA,UAGA,YACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,QACA,UAGA,YACA,QACA,OACA,OACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,OACA,SACA,QACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,UAGA,aACA,QACA,SACA,QACA,UACA,UACA,SACA,WAGA,YACA,OACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,QACA,QACA,SAGA,aACA,UACA,OACA,QACA,UACA,QACA,SACA,OACA,QACA,SACA,QACA,OACA,OACA,SACA,OACA,OACA,OACA,QACA,QACA,MACA,UAGA,YACA,SACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QAGA,YACA,SACA,OACA,OACA,QACA,QACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,MACA,QACA,SACA,OACA,OACA,QACA,SACA,SAGA,YACA,OACA,SACA,QACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,OACA,QACA,QAGA,YACA,QACA,QACA,OACA,OACA,QACA,OACA,WAGA,YACA,SACA,OACA,OACA,QACA,OACA,QACA,OACA,UAGA,YACA,MACA,QACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,UACA,QACA,QACA,SACA,OACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,UACA,UACA,UACA,UACA,QACA,QACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,UACA,UACA,UACA,UACA,UACA,QACA,SACA,SACA,SACA,UACA,WACA,UACA,UACA,UACA,WAGA,aACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,UAGA,YACA,QACA,UAGA,aACA,SACA,SACA,QACA,SACA,UAGA,YACA,UACA,SACA,SACA,QACA,SACA,SACA,SAGA,YACA,QACA,QACA,SACA,QACA,WAGA,aACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,QACA,UACA,SACA,UACA,UACA,SACA,OACA,QACA,SACA,QAGA,YACA,QACA,OACA,QACA,OACA,QACA,SACA,QACA,MACA,UAGA,YACA,SAGA,YACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,WAGA,YACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,OACA,MACA,QACA,QACA,QACA,QACA,UAGA,YACA,QACA,SACA,SACA,QACA,QACA,WAGA,YACA,WAGA,YACA,SACA,QACA,SACA,SACA,QACA,SACA,UAGA,aACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,UACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,UACA,UACA,UAGA,aACA,QACA,SACA,UACA,WAGA,aACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,OACA,OACA,OACA,UAGA,YACA,QACA,QACA,UACA,SACA,SACA,OACA,QACA,WAGA,aACA,SACA,SACA,QACA,OACA,SACA,SACA,UAGA,aACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,SACA,SACA,WAGA,aACA,SACA,QACA,UACA,SACA,SACA,QACA,UACA,QACA,QACA,QACA,SACA,UACA,SACA,QACA,QACA,OACA,UACA,OACA,SACA,SACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,WAGA,YACA,QACA,QACA,UACA,QACA,SACA,SACA,SACA,OACA,OACA,UAGA,aACA,UACA,QACA,OACA,MACA,QACA,QACA,UAGA,aACA,UACA,QACA,OACA,QACA,OACA,UAGA,YACA,QACA,OACA,SACA,SACA,SACA,QACA,OACA,UACA,UACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,OACA,UAGA,aACA,SACA,OACA,QACA,OACA,SACA,SACA,QACA,WAGA,aACA,UACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,WAGA,aACA,QACA,QACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,QACA,SACA,QACA,QACA,UACA,UACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,UACA,SACA,UACA,OACA,QACA,MACA,MACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,QACA,QACA,MACA,OACA,OACA,QACA,SACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAGA,aACA,OACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,SAGA,YACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,OACA,QACA,UAGA,YACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,OACA,UACA,SACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,OACA,OACA,SACA,SACA,OACA,SACA,OACA,SACA,OACA,QACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,UACA,SACA,UACA,QACA,QACA,UACA,QACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,SACA,UACA,UACA,UACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,OACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,QACA,SACA,UACA,UACA,UACA,SACA,OACA,QACA,QACA,OACA,UACA,SACA,QACA,QACA,SACA,OACA,QACA,QACA,UACA,UACA,UACA,UACA,UACA,QACA,OACA,SACA,SACA,UAGA,aACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,OACA,QACA,SACA,SACA,QACA,SACA,UACA,SACA,QACA,UACA,SACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,WAGA,aaACA,UACA,QACA,QACA,OACA,QACA,QACA,QACA,UACA,UACA,WAGA,aACA,UACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,UACA,UACA,UACA,SACA,UAGA,aACA,UACA,QACA,QACA,QACA,QACA,SACA,WAGA,YACA,SACA,SACA,UACA,SACA,QACA,QACA,SACA,OACA,QACA,QACA,QACA,QAGA,YACA,SACA,QACA,QACA,SACA,UACA,UACA,UACA,SACA,OACA,SACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,UAGA,YACA,SACA,OACA,UACA,QACA,SACA,SACA,QACA,QACA,QACA,OACA,QACA,SACA,SACA,UACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,UAGA,aACA,SACA,UACA,SACA,UACA,SACA,QACA,QACA,QACA,QACA,SAGA,aACA,SACA,QACA,OACA,QACA,UACA,SAGA,aACA,UACA,QACA,QACA,OACA,UACA,UAGA,aACA,UACA,OACA,MACA,QACA,QACA,WAGA,aaACA,SACA,UACA,QACA,SACA,SACA,QACA,UACA,SACA,UAGA,aACA,SACA,QACA,OACA,SACA,OACA,QACA,SAGA,YACA,QACA,OACA,WAGA,aACA,UACA,UACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,OACA,QACA,UAGA,aACA,QACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,OACA,OACA,QACA,SACA,QACA,OACA,OACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,SACA,QACA,SAGA,YACA,QACA,SAGA,aACA,UACA,QACA,OACA,QACA,QACA,QACA,SACA,UACA,UAGA,aACA,SACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,WAGA,aACA,UACA,UACA,SACA,SACA,OACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,UACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,SACA,OACA,QACA,SACA,UAGA,aACA,SACA,QACA,QACA,SACA,SACA,UACA,SACA,QACA,WAGA,aACA,QACA,SACA,QACA,SAGA,aACA,QACA,UACA,SACA,QACA,QACA,SACA,QACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,UAGA,aACA,OACA,QACA,SACA,UACA,SACA,UACA,UACA,UAGA,aACA,QACA,WAGA,aACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,WAGA,aACA,SACA,SACA,OACA,QACA,QACA,QACA,QACA,UAGA,aACA,SACA,QACA,UAGA,aACA,OACA,QACA,SACA,QACA,SAGA,YACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,SAGA,aACA,OACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,OACA,OACA,UAGA,YACA,SAGA,YACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,OACA,SACA,OACA,QACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,OACA,QACA,UAGA,YACA,SACA,SACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,UACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,UAGA,aACA,SACA,SACA,SACA,UACA,UACA,UACA,QAGA,YACA,OACA,OACA,QACA,SACA,OACA,OACA,QACA,OACA,SAGA,YACA,MACA,QACA,OACA,MACA,QACA,QACA,OACA,OACA,QAGA,YACA,MACA,OACA,QACA,OACA,OACA,MACA,QACA,MACA,SAGA,YACA,SACA,UACA,QACA,UACA,UAGA,aACA,OACA,SACA,QACA,UAGA,aACA,SAGA,YACA,QACA,SACA,SACA,QACA,MACA,SAGA,YACA,OACA,QACA,MACA,QACA,OACA,SACA,QACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,UAGA,YACA,OACA,QAGA,YACA,SACA,SACA,QACA,UACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,UAGA,aACA,SACA,SACA,SACA,SAGA,aACA,QACA,SACA,SACA,UACA,UACA,SACA,SACA,QACA,UAGA,aACA,SACA,SACA,QACA,UAGA,YACA,SACA,QACA,QACA,SACA,WAGA,aACA,QACA,UACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,OACA,SACA,QACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,QACA,SACA,QACA,QAGA,aACA,SAGA,YACA,OACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,SAGA,YACA,SACA,QACA,OACA,QACA,QACA,QACA,WAGA,aACA,UAGA,YACA,SACA,QACA,QACA,OACA,OACA,SACA,QACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,OACA,SAGA,aACA,SACA,SACA,QACA,QACA,QACA,QACA,UAGA,aACA,OACA,QACA,OACA,OACA,OACA,QACA,SACA,QACA,QACA,OACA,QACA,QACA,UAGA,YACA,OACA,OACA,QACA,OACA,QAGA,YACA,QACA,QACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,SACA,UAGA,aACA,UACA,SACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,QACA,SACA,OACA,QACA,OACA,UACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,UAGA,aACA,SACA,MACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,QACA,SACA,SAGA,aACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,SACA,QACA,OACA,OACA,OACA,QACA,MACA,SAGA,YACA,MACA,SACA,MACA,OACA,QACA,OACA,SAGA,YACA,QACA,SACA,WAGA,aACA,QACA,QACA,QACA,OACA,SACA,SACA,UAGA,YACA,QACA,OACA,SACA,SACA,OACA,SACA,SACA,SACA,MACA,UACA,QACA,QACA,UACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,UACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,QACA,OACA,QAGA,YACA,MACA,OACA,QACA,SACA,SACA,UAGA,aACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,QAGA,YACA,QACA,UACA,QACA,OACA,SAGA,aACA,SACA,SACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,SAGA,YACA,SACA,SACA,QACA,SACA,OACA,QACA,QACA,QACA,WAGA,aACA,OACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,UAGA,YACA,QACA,UACA,QACA,QACA,QACA,SACA,WAGA,YACA,SACA,QACA,SACA,SACA,QACA,WAGA,YACA,OACA,SACA,SACA,UAGA,YACA,QACA,SAGA,aACA,OACA,OACA,OACA,QACA,SAGA,YACA,OACA,OACA,QACA,SACA,QACA,SAGA,YACA,QACA,SAGA,YACA,SACA,SACA,SACA,WAGA,aACA,WAGA,aACA,QACA,QACA,OACA,QACA,OACA,OACA,UAGA,YACA,QACA,SAGA,aACA,UACA,SACA,OACA,QACA,UAGA,aACA,SACA,OACA,OACA,OACA,OACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,OACA,SACA,UAGA,YACA,OACA,OACA,SACA,MACA,QACA,QACA,QACA,QACA,UACA,UACA,SACA,SACA,OACA,SACA,SACA,QACA,SACA,UACA,QACA,SAGA,YACA,QACA,OACA,OACA,QACA,SAGA,aACA,WACA,WACA,WAGA,aACA,QACA,QACA,SACA,SACA,QACA,UACA,WAGA,aACA,YAGA,YACA,OACA,QAGA,YACA,OACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,QACA,OACA,QACA,QACA,SACA,QACA,UAGA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,SACA,SAGA,aACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,YAGA,YACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,WAGA,YACA,SACA,QACA,UACA,QACA,QACA,OACA,MACA,OACA,SACA,OACA,QACA,UAGA,YACA,SACA,SACA,UACA,UACA,UACA,SACA,UACA,SACA,QACA,SACA,OACA,QACA,SAGA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,SACA,SACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,UAGA,aACA,SACA,SACA,UAGA,YACA,QACA,SACA,OACA,QACA,OACA,UAGA,YACA,OACA,SACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,SACA,QACA,UAGA,YACA,YAGA,aACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,UACA,SACA,SACA,UAGA,aACA,OACA,QACA,OACA,OACA,QACA,UAGA,YACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,WAGA,YACA,QACA,QACA,QACA,SACA,OACA,SACA,OACA,UAGA,YACA,SACA,SACA,QACA,SACA,SAGA,YACA,SACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,UACA,SACA,QACA,UACA,UACA,QACA,SACA,QACA,SAGA,aACA,OACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,MACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,WAGA,YACA,QACA,SACA,SACA,OACA,QACA,OACA,SACA,SAGA,YACA,SACA,SACA,SACA,WAGA,aACA,QACA,SACA,QACA,WAGA,aACA,QACA,SACA,SACA,SACA,SACA,SAGA,aACA,WACA,SACA,UACA,SACA,UAGA,aACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,UAGA,aACA,SACA,SACA,QACA,SACA,OACA,OACA,OACA,SAGA,YACA,SAGA,YACA,OACA,QACA,OACA,QACA,QACA,QACA,SAGA,aACA,QACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,UACA,UACA,WAGA,aACA,SACA,UACA,UACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,UAGA,aACA,QACA,QACA,SACA,UAGA,YACA,QACA,SACA,OACA,SACA,QACA,QACA,QACA,UACA,WAGA,YACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,SAGA,SACA,YACA,UACA,OACA,QACA,OACA,YAGA,SACA,UAGA,SACA,OACA,SACA,SAGA,YACA,QACA,SACA,QACA,UACA,SACA,UACA,SACA,UACA,UAGA,aACA,SACA,SACA,OACA,OACA,QACA,UAGA,YACA,OACA,QAGA,aACA,QACA,SACA,SACA,QACA,SACA,UAGA,aACA,UACA,SACA,UACA,UAGA,YACA,QACA,SACA,SACA,SACA,SACA,OACA,QACA,UACA,OACA,SACA,QACA,OACA,UAGA,YACA,OACA,SAGA,YACA,QACA,UAGA,aACA,OACA,UAGA,YACA,OACA,SACA,SACA,UAGA,aACA,SACA,SACA,QACA,OACA,OACA,OACA,SAGA,YACA,OACA,QACA,SAGA,aACA,SACA,QACA,QACA,SAGA,YACA,OACA,UACA,WAGA,aACA,SACA,OACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,QACA,UACA,SACA,SACA,UACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,QACA,QACA,SACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,QACA,QACA,OACA,SACA,OACA,SACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,SAGA,YACA,QACA,QACA,SACA,QACA,UAGA,YACA,MACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,WAGA,aACA,SACA,UAGA,aACA,UACA,UACA,UACA,UAGA,YACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,UAGA,aACA,OACA,SACA,OACA,OACA,QACA,SACA,QACA,SAGA,aACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,WAGA,aACA,SACA,SACA,OACA,QACA,QACA,QACA,SAGA,YACA,QACA,OACA,OACA,MACA,OACA,OACA,MACA,SAGA,YACA,QACA,SACA,MACA,MACA,QACA,QAGA,YACA,QACA,MACA,MACA,OACA,QACA,QACA,OACA,MACA,MACA,OACA,QACA,QACA,UACA,SACA,QACA,MACA,QACA,QACA,UAGA,YACA,SAGA,YACA,OACA,OACA,MACA,SACA,OACA,OACA,SACA,UACA,QACA,SACA,UACA,QACA,QACA,SAGA,aACA,SACA,QACA,OACA,OACA,QACA,SAGA,YACA,QACA,OACA,MACA,UAGA,aACA,MACA,UAGA,YACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,SAGA,aACA,QACA,QACA,SACA,UACA,UACA,QACA,SACA,QACA,QACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,SACA,SAGA,YACA,OACA,QACA,QACA,OACA,QAGA,YACA,UACA,SACA,SAGA,YACA,QACA,QACA,QACA,OACA,SACA,WACA,UACA,UACA,SACA,SACA,OACA,SACA,QACA,UACA,SACA,QACA,SACA,SACA,UACA,WACA,UACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,SACA,SACA,SACA,QACA,UACA,QACA,UACA,SACA,UACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,SACA,QACA,UACA,SACA,QACA,SACA,UACA,UACA,UACA,QACA,UACA,UACA,UACA,SACA,UACA,UACA,SACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,SACA,SACA,OACA,QACA,OACA,UACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,UACA,QACA,OACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,QACA,SACA,QACA,UACA,QACA,SAGA,aACA,SACA,QACA,SACA,UAGA,YACA,OACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,SACA,QACA,OACA,OACA,OACA,SAGA,YACA,SACA,MACA,SAGA,aACA,UACA,UACA,QACA,SACA,UAGA,aACA,OACA,QACA,QACA,SACA,SAGA,YACA,SACA,SACA,QACA,QACA,SACA,WAGA,aACA,SACA,SACA,SACA,QACA,SACA,OACA,QACA,WAGA,aACA,QACA,OACA,OACA,QACA,QACA,QACA,OACA,UAGA,aACA,QACA,QAGA,YACA,QACA,OACA,OACA,SACA,OACA,QACA,QACA,QAGA,YACA,OACA,OACA,MACA,OACA,MACA,QACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,QACA,OACA,QACA,QACA,QACA,UAGA,aACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,QACA,SACA,MACA,SACA,UACA,QACA,QACA,QACA,SACA,OACA,OACA,SACA,OACA,SACA,SAGA,YACA,QACA,SACA,WAGA,aACA,UAGA,aACA,SACA,SACA,SACA,QACA,OACA,SACA,QACA,SACA,SACA,OACA,OACA,QAGA,YACA,QACA,MACA,OACA,QACA,OACA,OACA,OACA,UAGA,YACA,OACA,SACA,SACA,SAGA,aACA,SACA,SACA,QACA,UACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,OACA,OACA,QACA,UAGA,YACA,SACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,SACA,QAGA,YACA,SACA,UAGA,aACA,UACA,UACA,UACA,WAGA,aACA,QACA,WAGA,aACA,QACA,QAGA,aACA,SACA,QACA,QACA,SACA,UACA,UAGA,YACA,QACA,UAGA,aACA,UACA,UACA,MACA,OACA,QACA,UAGA,YACA,SACA,OACA,SACA,UACA,SACA,OACA,QACA,OACA,SAGA,aACA,SACA,UACA,OACA,OACA,QACA,SACA,OACA,UAGA,YACA,QACA,OACA,SACA,SACA,SACA,UACA,UACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,UAGA,aACA,UACA,OACA,OACA,OACA,SACA,UAGA,aACA,UACA,SACA,OACA,OACA,UAGA,YACA,UACA,SACA,QACA,SACA,OACA,OACA,OACA,WAGA,YACA,SACA,WAGA,aACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,SACA,WAGA,aACA,UACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,UACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,SACA,QACA,OACA,QACA,UAGA,aACA,SACA,QACA,QACA,UACA,QACA,SACA,OACA,OACA,OACA,QACA,QACA,UAGA,YACA,QACA,SACA,QACA,QACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,OACA,WAGA,aACA,SACA,UACA,QACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,UAGA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,UACA,SACA,UAGA,aACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,OACA,QACA,OACA,SAGA,YACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,QACA,SACA,WAGA,aACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,UACA,SACA,SACA,UACA,UACA,SACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,UACA,OACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,UAGA,YACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,OACA,UAGA,YACA,SACA,UACA,UACA,OACA,SACA,QACA,QACA,UAGA,YACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,UAGA,YACA,SACA,SACA,SACA,QACA,SACA,SACA,UACA,WAGA,aACA,SACA,SACA,QACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,WAGA,aACA,QACA,QACA,MACA,QACA,SACA,SACA,QACA,OACA,SACA,QACA,SACA,UAGA,aACA,QACA,QACA,OACA,UAGA,YACA,QACA,SACA,SACA,SACA,QACA,SAGA,aACA,SAGA,aACA,QACA,WAGA,aACA,QACA,UACA,SACA,UAGA,aACA,UAGA,YACA,QACA,SACA,OACA,QACA,UAGA,YACA,OACA,QACA,SACA,UAGA,aACA,QACA,UACA,UACA,UACA,UACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,OACA,SACA,QACA,SACA,QACA,UAGA,aACA,UAGA,aACA,QACA,QACA,QACA,QACA,QACA,SAGA,YACA,SACA,WAGA,YACA,QACA,MACA,OACA,OACA,OACA,QAGA,YACA,MACA,OACA,QAGA,YACA,SACA,OACA,QAGA,aACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,QACA,OACA,SAGA,YACA,UACA,SACA,QACA,UACA,SACA,QACA,OACA,QACA,UAGA,aACA,QACA,UAGA,aACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,OACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,UACA,QACA,OACA,OACA,QACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,UACA,UAGA,YACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,OACA,OACA,SAGA,YACA,SACA,UAGA,aACA,QACA,SACA,UACA,SACA,SACA,SACA,SACA,UACA,UAGA,aACA,QAGA,YACA,OACA,SAGA,YACA,SACA,UACA,SACA,UACA,SACA,QACA,OACA,QACA,QACA,QACA,WAGA,aACA,SACA,SACA,UACA,UACA,SACA,UACA,SACA,QACA,UACA,UACA,QACA,UACA,WACA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,OACA,QACA,QACA,UACA,SACA,SACA,UAGA,YACA,SACA,QACA,SACA,UACA,UACA,SACA,UACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,WAGA,aACA,UACA,UACA,UACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,SACA,WAGA,aACA,SACA,SACA,SACA,UACA,WAGA,aACA,OACA,QACA,QACA,SACA,SACA,SACA,OACA,QACA,OACA,OACA,QACA,QACA,QACA,SACA,SACA,UACA,WAGA,aACA,OACA,QACA,SACA,SACA,QACA,SACA,OACA,QACA,SACA,OACA,QACA,OACA,SACA,SACA,QACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,OACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,OACA,SACA,SACA,SACA,UACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,OACA,WAGA,aACA,QACA,SACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,UAGA,aACA,UACA,SACA,SACA,SACA,SACA,SACA,WAGA,aACA,SACA,QACA,WACA,QAGA,YACA,OACA,OACA,QACA,SACA,SACA,QACA,UAGA,YACA,QACA,UAGA,aACA,SACA,SACA,WAGA,aACA,SACA,SACA,QACA,OACA,SACA,UAGA,YACA,QACA,SACA,SACA,UACA,QACA,SACA,QAGA,aACA,OACA,QACA,QACA,UAGA,YACA,SACA,QACA,WAGA,YACA,SACA,SACA,SACA,UACA,SACA,WAGA,aACA,QACA,SACA,UAGA,YACA,SACA,QACA,SACA,UACA,UACA,UACA,SACA,OACA,QACA,QACA,SACA,UAGA,YACA,MACA,QACA,QACA,OACA,OACA,SAGA,YACA,SAGA,YACA,MACA,OACA,MACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,OACA,SAGA,aACA,QACA,SACA,SACA,QAGA,YACA,SACA,QACA,UAGA,aACA,SACA,QACA,SAGA,YACA,OACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,OACA,QACA,QACA,QACA,UAGA,YACA,OACA,UAGA,YACA,SACA,SACA,OACA,UACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,UAGA,YACA,QACA,QACA,QAGA,YACA,QACA,SACA,UACA,UAGA,aACA,OACA,SACA,SACA,SACA,UAGA,YACA,OACA,OACA,QACA,UAGA,aACA,UACA,SACA,UAGA,YACA,QACA,QACA,OACA,QACA,OACA,QACA,SAGA,YACA,SACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,OACA,OACA,QACA,OACA,SACA,SACA,OACA,QACA,QACA,UAGA,YACA,UACA,OACA,UAGA,aACA,WACA,WACA,WAGA,aACA,SACA,UACA,UACA,SACA,OACA,QACA,SACA,SACA,WAGA,YACA,UACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,WAGA,aACA,OACA,QACA,SACA,UAGA,aACA,SAGA,YACA,QACA,QACA,OACA,QACA,QACA,WAGA,aACA,QACA,SAGA,YACA,OACA,QACA,QACA,SACA,OACA,SAGA,YACA,SACA,QACA,UAGA,aACA,MACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,UACA,UACA,SACA,UACA,SACA,UAGA,YACA,OACA,QACA,QACA,OACA,QACA,QACA,MACA,OACA,OACA,QACA,QACA,QACA,MACA,QACA,OACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,UAGA,YACA,MACA,OACA,SACA,QACA,UACA,QACA,QACA,QACA,SACA,OACA,QACA,QACA,QACA,OACA,OACA,SACA,SACA,SACA,SAGA,aACA,OACA,QACA,QACA,SACA,QACA,QACA,QAGA,YACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,UACA,WACA,UACA,UACA,UACA,UACA,SACA,SACA,QACA,QACA,SACA,OACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,WAGA,aACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,QACA,SAGA,aACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,OACA,OACA,OACA,OACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,OACA,QACA,MACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,SACA,UACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,MACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,UAGA,YACA,OACA,QACA,QACA,SACA,SACA,OACA,OACA,OACA,OACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,SAGA,YACA,MACA,SAGA,YACA,QACA,OACA,MACA,SACA,QACA,QACA,OACA,QACA,QACA,OACA,UACA,SACA,SAGA,YACA,UACA,UACA,SACA,SACA,SACA,UACA,UAGA,YACA,QACA,QACA,SACA,QACA,SAGA,aACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UAGA,aACA,UACA,UACA,SACA,UACA,SACA,SACA,SACA,UACA,UACA,QACA,QACA,SACA,QACA,QACA,UACA,UACA,WAGA,aACA,OACA,QACA,UAGA,YACA,QACA,OACA,OACA,UACA,SAGA,YACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,SACA,SACA,OACA,SACA,QACA,OACA,QACA,QACA,SACA,SAGA,YACA,OACA,SACA,MACA,OACA,QACA,QACA,QACA,UAGA,YACA,SACA,QACA,QACA,QACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,QACA,SACA,QACA,QACA,OACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,SACA,QACA,QACA,UAGA,aACA,SAGA,aACA,QACA,SAGA,aACA,OACA,QACA,QACA,UAGA,YACA,QACA,OACA,MACA,QACA,OACA,OACA,OACA,QACA,SACA,QACA,QACA,SACA,SACA,SAGA,aACA,OACA,UAGA,YACA,SACA,MACA,SACA,SACA,QACA,QACA,SACA,OACA,SACA,QACA,SACA,SACA,SACA,OACA,SAGA,aACA,SACA,SACA,SACA,SACA,SACA,UACA,QACA,WAGA,aACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,UAGA,YACA,OACA,UACA,OACA,OACA,QACA,QACA,QACA,SAGA,aACA,QACA,OACA,QACA,OACA,OACA,QACA,QACA,UAGA,YACA,SACA,QACA,SACA,UAGA,YACA,OACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,QACA,SAGA,YACA,OACA,SACA,QACA,OACA,SAGA,YACA,SACA,QACA,OACA,QACA,QACA,QACA,UAGA,YACA,QACA,QACA,OACA,SACA,QACA,SACA,UACA,SACA,QACA,SACA,WAGA,aACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,SAGA,YACA,QACA,QACA,SACA,SAGA,YACA,UACA,UACA,SACA,SACA,QACA,QACA,SACA,WAGA,YACA,SACA,UACA,UACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,UAGA,YACA,QACA,SACA,QACA,UACA,SACA,WACA,SACA,UACA,SACA,SACA,QACA,SACA,UAGA,aACA,QACA,SACA,OACA,UACA,SACA,QACA,QACA,QACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,UAGA,aACA,UACA,QACA,UACA,QACA,SACA,QACA,SACA,SACA,SAGA,aACA,SACA,SACA,QACA,SACA,QACA,MACA,OACA,QAGA,aACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,SAGA,YACA,QACA,QACA,QACA,UAGA,aACA,UACA,UAGA,aACA,SACA,SACA,QACA,SACA,QACA,UACA,UACA,SACA,UACA,UACA,QACA,SACA,QACA,UACA,SACA,UACA,WAGA,aACA,SACA,UACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,WAGA,aACA,UACA,QACA,SACA,QACA,QACA,SACA,WAGA,YACA,UACA,UACA,UACA,UACA,UACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,OACA,QACA,OACA,WAGA,YACA,UACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,WAGA,YACA,QACA,QACA,QACA,SACA,UACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,UAGA,YACA,SACA,OACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,UACA,UACA,UACA,QACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,OACA,SACA,SACA,UAGA,aACA,QACA,UAGA,YACA,QACA,UACA,UAGA,YACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,UACA,SACA,UACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,UACA,SACA,SACA,QACA,SACA,SACA,UACA,QACA,UACA,UAGA,YACA,OACA,QACA,SACA,UAGA,aACA,SACA,QACA,SACA,UACA,SACA,UAGA,aACA,QACA,OACA,QACA,OACA,QACA,SACA,SACA,SACA,UACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,OACA,QACA,QACA,OACA,QACA,SACA,QAGA,YACA,UACA,QACA,QACA,MACA,QACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,SACA,WAGA,aACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,UACA,UACA,SACA,QACA,SACA,QACA,QACA,QACA,OACA,UAGA,YACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,QACA,UACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,OACA,SACA,QACA,UAGA,aACA,UACA,SACA,SACA,QACA,OACA,OACA,OACA,QACA,QACA,SACA,UAGA,aACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,WAGA,YACA,SACA,OACA,SACA,UACA,UACA,OACA,QACA,SAGA,YACA,SACA,QACA,QACA,SACA,UACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,UAGA,aACA,SACA,SACA,QACA,QACA,WAGA,YACA,SACA,OACA,SACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,SAGA,aACA,QACA,SACA,SACA,OACA,MACA,QACA,QACA,SACA,UACA,UAGA,aACA,SACA,SACA,UACA,UACA,QACA,SACA,QACA,OACA,QACA,OACA,OACA,MACA,QACA,OACA,OACA,SACA,OACA,OACA,QACA,SACA,UAGA,YACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,UACA,QACA,UACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,UACA,QACA,SAGA,aACA,SACA,QACA,QACA,SACA,SACA,QACA,OACA,SACA,QACA,SACA,SACA,SACA,UAGA,YACA,QACA,QACA,QACA,SACA,QACA,UAGA,YACA,QACA,SAGA,YACA,UACA,SACA,SACA,SACA,SACA,QAGA,aACA,SACA,SACA,QACA,UACA,SACA,SACA,QAGA,YACA,QACA,SACA,SACA,QACA,SACA,OACA,MACA,UAGA,YACA,UAGA,aACA,QACA,UACA,QACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,OACA,QACA,WAGA,aACA,SACA,SACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,UAGA,aACA,UACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,OACA,QACA,QACA,QACA,SAGA,aACA,OACA,OACA,MACA,QACA,SACA,UAGA,aACA,QACA,SAGA,YACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,SAGA,YACA,SACA,OACA,WAGA,YACA,SACA,UACA,OACA,UAGA,aACA,OACA,QACA,OACA,SACA,SACA,QACA,SACA,QACA,UAGA,YACA,WACA,SACA,SACA,UACA,SACA,SACA,UACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,UACA,QACA,WAGA,YACA,OACA,UAGA,SACA,SACA,UACA,QACA,UACA,OACA,QACA,UACA,UACA,QACA,SACA,UACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,WAGA,SACA,UAGA,SACA,YACA,SACA,QACA,YAGA,SACA,MACA,OACA,UACA,QACA,UACA,QACA,SAGA,aACA,SACA,QACA,MACA,QACA,OACA,SACA,UAGA,aACA,UACA,QACA,QACA,OACA,QACA,WAGA,aACA,UACA,SACA,UACA,QACA,QACA,QACA,QACA,YAGA,aaACA,UACA,UACA,SACA,UACA,QACA,WAGA,aaAGA,aACA,UACA,QACA,OACA,QACA,UACA,UAGA,aACA,SACA,SACA,SACA,UACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,UACA,UAGA,aACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,UACA,UAGA,YACA,UACA,SACA,SAGA,YACA,OACA,UAGA,YACA,SAGA,aACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,OACA,OACA,OACA,SAGA,YACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,UAGA,YACA,UAGA,aACA,UACA,UACA,UACA,UACA,QACA,SACA,QACA,OACA,SACA,QACA,SACA,QACA,SACA,WAGA,aACA,MACA,QACA,QACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,QACA,QACA,UACA,OACA,SACA,QACA,SACA,SACA,SACA,UACA,SAGA,aACA,QAGA,YACA,QACA,SACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,QACA,SACA,UAGA,YACA,SACA,QACA,QACA,SACA,SACA,WAGA,YACA,SAGA,YACA,UAGA,aACA,UACA,QACA,UACA,SACA,WAGA,aACA,UAGA,aACA,SACA,QACA,QACA,QACA,SAGA,aACA,SAGA,YACA,SACA,QACA,QACA,SACA,SAGA,aACA,SACA,QACA,MACA,OACA,QACA,QACA,UAGA,aACA,SACA,SACA,OACA,MACA,SACA,WAGA,YACA,SACA,SACA,SACA,QACA,MACA,SACA,SACA,UAGA,aACA,QACA,SACA,QACA,OACA,SACA,WAGA,aACA,OACA,SACA,SACA,QACA,SAGA,aACA,SACA,QACA,QACA,SACA,QACA,SAGA,YACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,QACA,SAGA,YACA,OACA,QACA,QACA,SACA,UACA,WAGA,YACA,MACA,OACA,OACA,QACA,OACA,SACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UAGA,YACA,SACA,OACA,OACA,WAGA,YACA,UACA,UAGA,aACA,SACA,UAGA,YACA,QAGA,aACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,QACA,UACA,SACA,QACA,SACA,UAGA,aACA,SACA,SACA,QACA,OACA,OACA,OACA,MACA,WAGA,aACA,OACA,SAGA,YACA,OACA,OACA,OACA,QACA,QACA,SACA,OACA,QACA,QACA,SAGA,aACA,WAGA,aACA,SACA,QACA,QACA,QACA,SACA,UACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,WAGA,aACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,SAGA,YACA,SACA,QACA,QACA,OACA,QACA,QACA,OACA,SACA,QACA,QACA,SAGA,aACA,OACA,QACA,QACA,QACA,OACA,OACA,SACA,SACA,SACA,QACA,UACA,SACA,SAGA,YACA,QACA,OACA,QACA,QACA,SACA,QACA,SACA,OACA,QACA,SACA,SACA,SACA,SACA,UACA,UAGA,YACA,OACA,QACA,OACA,MACA,SACA,UACA,UACA,WAGA,YACA,OACA,QACA,SACA,SACA,MACA,QACA,SAGA,YACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,UAGA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,SACA,SACA,OACA,QACA,UAGA,YACA,QACA,UACA,SACA,SACA,UACA,UACA,OACA,SAGA,aACA,UACA,UACA,SACA,OACA,QACA,QACA,UACA,UAGA,aACA,SACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,WAGA,aACA,SACA,SACA,SACA,UAGA,YACA,OACA,QACA,SAGA,aACA,SACA,UACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,SACA,QACA,SACA,QACA,SACA,UACA,WAGA,aACA,UACA,UACA,SACA,SACA,SACA,SACA,UAGA,YACA,SACA,MACA,QACA,OACA,MACA,QACA,OACA,MACA,OACA,SACA,OACA,OACA,SACA,QACA,UACA,SAGA,YACA,QACA,QACA,MACA,MACA,MACA,OACA,QACA,SAGA,YACA,QACA,OACA,MACA,UAGA,YACA,QACA,OACA,OACA,QACA,MACA,MACA,OACA,UAGA,YACA,QACA,OACA,MACA,MACA,OACA,UAGA,YACA,SACA,UACA,UACA,UACA,UACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,UACA,OACA,OACA,QACA,QACA,SACA,UACA,QACA,OACA,OACA,QACA,QACA,SACA,SACA,UACA,MACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,SACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,QACA,QACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,UACA,OACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,QACA,QACA,QACA,UAGA,aACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,SACA,SACA,QACA,QACA,SAGA,YACA,UACA,SACA,OACA,QACA,OACA,QACA,UACA,WAGA,YACA,SACA,SACA,QACA,QACA,QACA,UAGA,WACA,SACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,SACA,MACA,SAGA,aaACA,SACA,QACA,QACA,SACA,SACA,SACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,QACA,SACA,QACA,OACA,OACA,SACA,QACA,QACA,OACA,OACA,QACA,SACA,SACA,QACA,SACA,QACA,OACA,WAGA,aACA,UACA,UACA,QACA,SACA,SACA,SACA,SACA,WACA,UACA,UACA,UACA,UACA,UACA,QACA,QACA,UAGA,aACA,QACA,OACA,OACA,WAGA,YACA,SACA,OACA,QACA,OACA,OACA,WAGA,aACA,UACA,SACA,SACA,UACA,UACA,UACA,SACA,OACA,UACA,UACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,OACA,QACA,SAGA,YACA,OACA,SACA,MACA,UAGA,aACA,SACA,SACA,SACA,UACA,QACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,QACA,UACA,SACA,SACA,QACA,UACA,UACA,UACA,SACA,SACA,QACA,SACA,QACA,OACA,QACA,OACA,OACA,QACA,SACA,QACA,OACA,UAGA,aACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,OACA,QAGA0F,WACA1J,OAAA,yCACAC,YAAA,kBAIAoH,EAAAnZ,UAAAyb,QAAA,UACAtC,EAAAnZ,UAAA0b,QAAA,UACAvC,EAAAnZ,UAAA2b,QAAA,UACAxC,EAAAnZ,UAAA4b,QAAA,UACAzC,EAAAnZ,UAAA6b,QAAA,UACA1C,EAAAnZ,UAAA8b,QAAA,UACA3C,EAAAnZ,UAAA+b,QAAA,UACA5C,EAAAnZ,UAAAgc,QAAA,UACA7C,EAA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0d,ICAAD,GAAM,gECANA,GAAM,oDCANA,GAAM,oDCANA,GAAM,4ECANA,GAAM,0DCANA,GAAM,oDCANA,GAAM,0DCANA,GAAM,oDCANA,GAAM,4ETAN,SAAAE,GACf,OAAS1d,GAAmB0d,IAAA16G,OAAA,MUYby6G,GAZE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA8pB,IAAMuoF,KCESC,GAZE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA8pB,IAAMuoF,KCESC,GAZE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA8pB,IAAMuoF,KCESC,GAZE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA8pB,IAAMuoF,KCESC,GAZE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA8pB,IAAMuoF,KCESC,GAZE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA8pB,IAAMuoF,KCESC,GAZE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA8pB,IAAMuoF,KCESC,GAZE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA8pB,IAAMuoF,KCESC,GAZE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA8pB,IAAMuoF,KCASC,GAVE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA8pB,IAAMuoF,KCESC,GAVE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA8pB,IAAMuoF,KCESC,GAVE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA8pB,IAAMuoF,KCESC,GAVE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA8pB,IAAMuoF,KCESC,GAVE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA8pB,IAAMuoF,KCESC,GAVE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA8pB,IAAMuoF,KCESC,GAVE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA8pB,IAAMuoF,KCESC,GAVE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA8pB,IAAMuoF,KCESC,GAVE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA8pB,IAAMuoF,KCESC,GAVE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA8pB,IAAMuoF,KCESC,GAVE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA8pB,IAAMuoF,KCESC,GAVE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA8pB,IAAMuoF,KCESC,GAVE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA8pB,IAAMuoF,KCESC,GAVE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA8pB,IAAMuoF,KCESC,GAVE,IAAA5xG,MAAA,GAAAV,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA8pB,IAAMuoF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","file":"js/1.9183ac03.chunk.js","sourcesContent":["'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","module.exports = {};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n","module.exports = false;\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","(function() {\n  var svg;\n\n  // Save off default references\n  var d3 = window.d3, topojson = window.topojson;\n\n  var defaultOptions = {\n    scope: 'world',\n    responsive: false,\n    aspectRatio: 0.5625,\n    setProjection: setProjection,\n    projection: 'equirectangular',\n    dataType: 'json',\n    data: {},\n    done: function() {},\n    fills: {\n      defaultFill: '#ABDDA4'\n    },\n    filters: {},\n    geographyConfig: {\n        dataUrl: null,\n        hideAntarctica: true,\n        hideHawaiiAndAlaska : false,\n        borderWidth: 1,\n        borderOpacity: 1,\n        borderColor: '#FDFDFD',\n        popupTemplate: function(geography, data) {\n          return '<div class=\"hoverinfo\"><strong>' + geography.properties.name + '</strong></div>';\n        },\n        popupOnHover: true,\n        highlightOnHover: true,\n        highlightFillColor: '#FC8D59',\n        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n        highlightBorderWidth: 2,\n        highlightBorderOpacity: 1\n    },\n    projectionConfig: {\n      rotation: [97, 0]\n    },\n    bubblesConfig: {\n        borderWidth: 2,\n        borderOpacity: 1,\n        borderColor: '#FFFFFF',\n        popupOnHover: true,\n        radius: null,\n        popupTemplate: function(geography, data) {\n          return '<div class=\"hoverinfo\"><strong>' + data.name + '</strong></div>';\n        },\n        fillOpacity: 0.75,\n        animate: true,\n        highlightOnHover: true,\n        highlightFillColor: '#FC8D59',\n        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n        highlightBorderWidth: 2,\n        highlightBorderOpacity: 1,\n        highlightFillOpacity: 0.85,\n        exitDelay: 100,\n        key: JSON.stringify\n    },\n    arcConfig: {\n      strokeColor: '#DD1C77',\n      strokeWidth: 1,\n      arcSharpness: 1,\n      animationSpeed: 600,\n      popupOnHover: false,\n      popupTemplate: function(geography, data) {\n        // Case with latitude and longitude\n        if ( ( data.origin && data.destination ) && data.origin.latitude && data.origin.longitude && data.destination.latitude && data.destination.longitude ) {\n          return '<div class=\"hoverinfo\"><strong>Arc</strong><br>Origin: ' + JSON.stringify(data.origin) + '<br>Destination: ' + JSON.stringify(data.destination) + '</div>';\n        }\n        // Case with only country name\n        else if ( data.origin && data.destination ) {\n          return '<div class=\"hoverinfo\"><strong>Arc</strong><br>' + data.origin + ' -> ' + data.destination + '</div>';\n        }\n        // Missing information\n        else {\n          return '';\n        }\n      }\n    }\n  };\n\n  /*\n    Getter for value. If not declared on datumValue, look up the chain into optionsValue\n  */\n  function val( datumValue, optionsValue, context ) {\n    if ( typeof context === 'undefined' ) {\n      context = optionsValue;\n      optionsValues = undefined;\n    }\n    var value = typeof datumValue !== 'undefined' ? datumValue : optionsValue;\n\n    if (typeof value === 'undefined') {\n      return  null;\n    }\n\n    if ( typeof value === 'function' ) {\n      var fnContext = [context];\n      if ( context.geography ) {\n        fnContext = [context.geography, context.data];\n      }\n      return value.apply(null, fnContext);\n    }\n    else {\n      return value;\n    }\n  }\n\n  function addContainer( element, height, width ) {\n    this.svg = d3.select( element ).append('svg')\n      .attr('width', width || element.offsetWidth)\n      .attr('data-width', width || element.offsetWidth)\n      .attr('class', 'datamap')\n      .attr('height', height || element.offsetHeight)\n      .style('overflow', 'hidden'); // IE10+ doesn't respect height/width when map is zoomed in\n\n    if (this.options.responsive) {\n      d3.select(this.options.element).style({'position': 'relative', 'padding-bottom': (this.options.aspectRatio*100) + '%'});\n      d3.select(this.options.element).select('svg').style({'position': 'absolute', 'width': '100%', 'height': '100%'});\n      d3.select(this.options.element).select('svg').select('g').selectAll('path').style('vector-effect', 'non-scaling-stroke');\n\n    }\n\n    return this.svg;\n  }\n\n  // setProjection takes the svg element and options\n  function setProjection( element, options ) {\n    var width = options.width || element.offsetWidth;\n    var height = options.height || element.offsetHeight;\n    var projection, path;\n    var svg = this.svg;\n\n    if ( options && typeof options.scope === 'undefined') {\n      options.scope = 'world';\n    }\n\n    if ( options.scope === 'usa' ) {\n      projection = d3.geo.albersUsa()\n        .scale(width)\n        .translate([width / 2, height / 2]);\n    }\n    else if ( options.scope === 'world' ) {\n      projection = d3.geo[options.projection]()\n        .scale((width + 1) / 2 / Math.PI)\n        .translate([width / 2, height / (options.projection === \"mercator\" ? 1.45 : 1.8)]);\n    }\n\n    if ( options.projection === 'orthographic' ) {\n\n      svg.append(\"defs\").append(\"path\")\n        .datum({type: \"Sphere\"})\n        .attr(\"id\", \"sphere\")\n        .attr(\"d\", path);\n\n      svg.append(\"use\")\n          .attr(\"class\", \"stroke\")\n          .attr(\"xlink:href\", \"#sphere\");\n\n      svg.append(\"use\")\n          .attr(\"class\", \"fill\")\n          .attr(\"xlink:href\", \"#sphere\");\n      projection.scale(250).clipAngle(90).rotate(options.projectionConfig.rotation)\n    }\n\n    path = d3.geo.path()\n      .projection( projection );\n\n    return {path: path, projection: projection};\n  }\n\n  function addStyleBlock() {\n    if ( d3.select('.datamaps-style-block').empty() ) {\n      d3.select('head').append('style').attr('class', 'datamaps-style-block')\n      .html('.datamap path.datamaps-graticule { fill: none; stroke: #777; stroke-width: 0.5px; stroke-opacity: .5; pointer-events: none; } .datamap .labels {pointer-events: none;} .datamap path:not(.datamaps-arc), .datamap circle, .datamap line {stroke: #FFFFFF; vector-effect: non-scaling-stroke; stroke-width: 1px;} .datamaps-legend dt, .datamaps-legend dd { float: left; margin: 0 3px 0 0;} .datamaps-legend dd {width: 20px; margin-right: 6px; border-radius: 3px;} .datamaps-legend {padding-bottom: 20px; z-index: 1001; position: absolute; left: 4px; font-size: 12px; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;} .datamaps-hoverover {display: none; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; } .hoverinfo {padding: 4px; border-radius: 1px; background-color: #FFF; box-shadow: 1px 1px 5px #CCC; font-size: 12px; border: 1px solid #CCC; } .hoverinfo hr {border:1px dotted #CCC; }');\n    }\n  }\n\n  function drawSubunits( data ) {\n    var fillData = this.options.fills,\n        colorCodeData = this.options.data || {},\n        geoConfig = this.options.geographyConfig;\n\n    var subunits = this.svg.select('g.datamaps-subunits');\n    if ( subunits.empty() ) {\n      subunits = this.addLayer('datamaps-subunits', null, true);\n    }\n\n    var geoData = topojson.feature( data, data.objects[ this.options.scope ] ).features;\n    if ( geoConfig.hideAntarctica ) {\n      geoData = geoData.filter(function(feature) {\n        return feature.id !== \"ATA\";\n      });\n    }\n\n    if ( geoConfig.hideHawaiiAndAlaska ) {\n      geoData = geoData.filter(function(feature) {\n        return feature.id !== \"HI\" && feature.id !== 'AK';\n      });\n    }\n\n    var geo = subunits.selectAll('path.datamaps-subunit').data( geoData );\n\n    geo.enter()\n      .append('path')\n      .attr('d', this.path)\n      .attr('class', function(d) {\n        return 'datamaps-subunit ' + d.id;\n      })\n      .attr('data-info', function(d) {\n        return JSON.stringify( colorCodeData[d.id]);\n      })\n      .style('fill', function(d) {\n        // If fillKey - use that\n        // Otherwise check 'fill'\n        // Otherwise check 'defaultFill'\n        var fillColor;\n\n        var datum = colorCodeData[d.id];\n        if ( datum && datum.fillKey ) {\n          fillColor = fillData[ val(datum.fillKey, {data: colorCodeData[d.id], geography: d}) ];\n        }\n\n        if ( typeof fillColor === 'undefined' ) {\n          fillColor = val(datum && datum.fillColor, fillData.defaultFill, {data: colorCodeData[d.id], geography: d});\n        }\n\n        return fillColor;\n      })\n      .style('stroke-width', geoConfig.borderWidth)\n      .style('stroke-opacity', geoConfig.borderOpacity)\n      .style('stroke', geoConfig.borderColor);\n  }\n\n  function handleGeographyConfig () {\n    var hoverover;\n    var svg = this.svg;\n    var self = this;\n    var options = this.options.geographyConfig;\n\n    if ( options.highlightOnHover || options.popupOnHover ) {\n      svg.selectAll('.datamaps-subunit')\n        .on('mouseover', function(d) {\n          var $this = d3.select(this);\n          var datum = self.options.data[d.id] || {};\n          if ( options.highlightOnHover ) {\n            var previousAttributes = {\n              'fill':  $this.style('fill'),\n              'stroke': $this.style('stroke'),\n              'stroke-width': $this.style('stroke-width'),\n              'fill-opacity': $this.style('fill-opacity')\n            };\n\n            $this\n              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n              .style('stroke-opacity', val(datum.highlightBorderOpacity, options.highlightBorderOpacity, datum))\n              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n\n            // As per discussion on https://github.com/markmarkoh/datamaps/issues/19\n            if ( ! /((MSIE)|(Trident))/.test(navigator.userAgent) ) {\n             moveToFront.call(this);\n            }\n          }\n\n          if ( options.popupOnHover ) {\n            self.updatePopup($this, d, options, svg);\n          }\n        })\n        .on('mouseout', function() {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            // Reapply previous attributes\n            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n            for ( var attr in previousAttributes ) {\n              $this.style(attr, previousAttributes[attr]);\n            }\n          }\n          $this.on('mousemove', null);\n          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n        });\n    }\n\n    function moveToFront() {\n      this.parentNode.appendChild(this);\n    }\n  }\n\n  // Plugin to add a simple map legend\n  function addLegend(layer, data, options) {\n    data = data || {};\n    if ( !this.options.fills ) {\n      return;\n    }\n\n    var html = '<dl>';\n    var label = '';\n    if ( data.legendTitle ) {\n      html = '<h2>' + data.legendTitle + '</h2>' + html;\n    }\n    for ( var fillKey in this.options.fills ) {\n\n      if ( fillKey === 'defaultFill') {\n        if (! data.defaultFillName ) {\n          continue;\n        }\n        label = data.defaultFillName;\n      } else {\n        if (data.labels && data.labels[fillKey]) {\n          label = data.labels[fillKey];\n        } else {\n          label= fillKey + ': ';\n        }\n      }\n      html += '<dt>' + label + '</dt>';\n      html += '<dd style=\"background-color:' +  this.options.fills[fillKey] + '\">&nbsp;</dd>';\n    }\n    html += '</dl>';\n\n    var hoverover = d3.select( this.options.element ).append('div')\n      .attr('class', 'datamaps-legend')\n      .html(html);\n  }\n\n    function addGraticule ( layer, options ) {\n      var graticule = d3.geo.graticule();\n      this.svg.insert(\"path\", '.datamaps-subunits')\n        .datum(graticule)\n        .attr(\"class\", \"datamaps-graticule\")\n        .attr(\"d\", this.path);\n  }\n\n  function handleArcs (layer, data, options) {\n    var self = this,\n        svg = this.svg;\n\n    if ( !data || (data && !data.slice) ) {\n      throw \"Datamaps Error - arcs must be an array\";\n    }\n\n    // For some reason arc options were put in an `options` object instead of the parent arc\n    // I don't like this, so to match bubbles and other plugins I'm moving it\n    // This is to keep backwards compatability\n    for ( var i = 0; i < data.length; i++ ) {\n      data[i] = defaults(data[i], data[i].options);\n      delete data[i].options;\n    }\n\n    if ( typeof options === \"undefined\" ) {\n      options = defaultOptions.arcConfig;\n    }\n\n    var arcs = layer.selectAll('path.datamaps-arc').data( data, JSON.stringify );\n\n    var path = d3.geo.path()\n        .projection(self.projection);\n\n    arcs\n      .enter()\n        .append('svg:path')\n        .attr('class', 'datamaps-arc')\n        .style('stroke-linecap', 'round')\n        .style('stroke', function(datum) {\n          return val(datum.strokeColor, options.strokeColor, datum);\n        })\n        .style('fill', 'none')\n        .style('stroke-width', function(datum) {\n            return val(datum.strokeWidth, options.strokeWidth, datum);\n        })\n        .attr('d', function(datum) {\n\n            var originXY, destXY;\n\n            if (typeof datum.origin === \"string\") {\n              switch (datum.origin) {\n                   case \"CAN\":\n                       originXY = self.latLngToXY(56.624472, -114.665293);\n                       break;\n                   case \"CHL\":\n                       originXY = self.latLngToXY(-33.448890, -70.669265);\n                       break;\n                   case \"IDN\":\n                       originXY = self.latLngToXY(-6.208763, 106.845599);\n                       break;\n                   case \"JPN\":\n                       originXY = self.latLngToXY(35.689487, 139.691706);\n                       break;\n                   case \"MYS\":\n                       originXY = self.latLngToXY(3.139003, 101.686855);\n                       break;\n                   case \"NOR\":\n                       originXY = self.latLngToXY(59.913869, 10.752245);\n                       break;\n                   case \"USA\":\n                       originXY = self.latLngToXY(41.140276, -100.760145);\n                       break;\n                   case \"VNM\":\n                       originXY = self.latLngToXY(21.027764, 105.834160);\n                       break;\n                   default:\n                       originXY = self.path.centroid(svg.select('path.' + datum.origin).data()[0]);\n               }\n            } else {\n              originXY = self.latLngToXY(val(datum.origin.latitude, datum), val(datum.origin.longitude, datum))\n            }\n\n            if (typeof datum.destination === 'string') {\n              switch (datum.destination) {\n                     case \"CAN\":\n                        destXY = self.latLngToXY(56.624472, -114.665293);\n                        break;\n                    case \"CHL\":\n                        destXY = self.latLngToXY(-33.448890, -70.669265);\n                        break;\n                    case \"IDN\":\n                        destXY = self.latLngToXY(-6.208763, 106.845599);\n                        break;\n                    case \"JPN\":\n                        destXY = self.latLngToXY(35.689487, 139.691706);\n                        break;\n                    case \"MYS\":\n                        destXY = self.latLngToXY(3.139003, 101.686855);\n                        break;\n                    case \"NOR\":\n                        destXY = self.latLngToXY(59.913869, 10.752245);\n                        break;\n                    case \"USA\":\n                        destXY = self.latLngToXY(41.140276, -100.760145);\n                        break;\n                    case \"VNM\":\n                        destXY = self.latLngToXY(21.027764, 105.834160);\n                        break;\n                    default:\n                        destXY = self.path.centroid(svg.select('path.' + datum.destination).data()[0]);\n              }\n            } else {\n              destXY = self.latLngToXY(val(datum.destination.latitude, datum), val(datum.destination.longitude, datum));\n            }\n            var midXY = [ (originXY[0] + destXY[0]) / 2, (originXY[1] + destXY[1]) / 2];\n            if (options.greatArc) {\n                  // TODO: Move this to inside `if` clause when setting attr `d`\n              var greatArc = d3.geo.greatArc()\n                  .source(function(d) { return [val(d.origin.longitude, d), val(d.origin.latitude, d)]; })\n                  .target(function(d) { return [val(d.destination.longitude, d), val(d.destination.latitude, d)]; });\n\n              return path(greatArc(datum))\n            }\n            var sharpness = val(datum.arcSharpness, options.arcSharpness, datum);\n            return \"M\" + originXY[0] + ',' + originXY[1] + \"S\" + (midXY[0] + (50 * sharpness)) + \",\" + (midXY[1] - (75 * sharpness)) + \",\" + destXY[0] + \",\" + destXY[1];\n        })\n        .attr('data-info', function(datum) {\n          return JSON.stringify(datum);\n        })\n        .on('mouseover', function ( datum ) {\n          var $this = d3.select(this);\n\n          if (options.popupOnHover) {\n            self.updatePopup($this, datum, options, svg);\n          }\n        })\n        .on('mouseout', function ( datum ) {\n          var $this = d3.select(this);\n\n          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n        })\n        .transition()\n          .delay(100)\n          .style('fill', function(datum) {\n            /*\n              Thank you Jake Archibald, this is awesome.\n              Source: http://jakearchibald.com/2013/animated-line-drawing-svg/\n            */\n            var length = this.getTotalLength();\n            this.style.transition = this.style.WebkitTransition = 'none';\n            this.style.strokeDasharray = length + ' ' + length;\n            this.style.strokeDashoffset = length;\n            this.getBoundingClientRect();\n            this.style.transition = this.style.WebkitTransition = 'stroke-dashoffset ' + val(datum.animationSpeed, options.animationSpeed, datum) + 'ms ease-out';\n            this.style.strokeDashoffset = '0';\n            return 'none';\n          })\n\n    arcs.exit()\n      .transition()\n      .style('opacity', 0)\n      .remove();\n  }\n\n  function handleLabels ( layer, options ) {\n    var self = this;\n    options = options || {};\n    var labelStartCoodinates = this.projection([-67.707617, 42.722131]);\n    this.svg.selectAll(\".datamaps-subunit\")\n      .attr(\"data-foo\", function(d) {\n        var center = self.path.centroid(d);\n        var xOffset = 7.5, yOffset = 5;\n\n        if ( [\"FL\", \"KY\", \"MI\"].indexOf(d.id) > -1 ) xOffset = -2.5;\n        if ( d.id === \"NY\" ) xOffset = -1;\n        if ( d.id === \"MI\" ) yOffset = 18;\n        if ( d.id === \"LA\" ) xOffset = 13;\n\n        var x,y;\n\n        x = center[0] - xOffset;\n        y = center[1] + yOffset;\n\n        var smallStateIndex = [\"VT\", \"NH\", \"MA\", \"RI\", \"CT\", \"NJ\", \"DE\", \"MD\", \"DC\"].indexOf(d.id);\n        if ( smallStateIndex > -1) {\n          var yStart = labelStartCoodinates[1];\n          x = labelStartCoodinates[0];\n          y = yStart + (smallStateIndex * (2+ (options.fontSize || 12)));\n          layer.append(\"line\")\n            .attr(\"x1\", x - 3)\n            .attr(\"y1\", y - 5)\n            .attr(\"x2\", center[0])\n            .attr(\"y2\", center[1])\n            .style(\"stroke\", options.labelColor || \"#000\")\n            .style(\"stroke-width\", options.lineWidth || 1)\n        }\n\n          layer.append(\"text\")\n              .attr(\"x\", x)\n              .attr(\"y\", y)\n              .style(\"font-size\", (options.fontSize || 10) + 'px')\n              .style(\"font-family\", options.fontFamily || \"Verdana\")\n              .style(\"fill\", options.labelColor || \"#000\")\n              .text(function() {\n                  if (options.customLabelText && options.customLabelText[d.id]) {\n                      return options.customLabelText[d.id]\n                  } else {\n                      return d.id\n                  }\n              });\n\n        return \"bar\";\n      });\n  }\n\n\n  function handleBubbles (layer, data, options ) {\n    var self = this,\n        fillData = this.options.fills,\n        filterData = this.options.filters,\n        svg = this.svg;\n\n    if ( !data || (data && !data.slice) ) {\n      throw \"Datamaps Error - bubbles must be an array\";\n    }\n\n    var bubbles = layer.selectAll('circle.datamaps-bubble').data( data, options.key );\n\n    bubbles\n      .enter()\n        .append('svg:circle')\n        .attr('class', 'datamaps-bubble')\n        .attr('cx', function ( datum ) {\n          var latLng;\n          if ( datumHasCoords(datum) ) {\n            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n          }\n          else if ( datum.centered ) {\n            if ( datum.centered === 'USA' ) {\n              latLng = self.projection([-98.58333, 39.83333])\n            } else {\n              latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n            }\n          }\n          if ( latLng ) return latLng[0];\n        })\n        .attr('cy', function ( datum ) {\n          var latLng;\n          if ( datumHasCoords(datum) ) {\n            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n          }\n          else if ( datum.centered ) {\n            if ( datum.centered === 'USA' ) {\n              latLng = self.projection([-98.58333, 39.83333])\n            } else {\n              latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n            }\n          }\n          if ( latLng ) return latLng[1];\n        })\n        .attr('r', function(datum) {\n          // If animation enabled start with radius 0, otherwise use full size.\n          return options.animate ? 0 : val(datum.radius, options.radius, datum);\n        })\n        .attr('data-info', function(datum) {\n          return JSON.stringify(datum);\n        })\n        .attr('filter', function (datum) {\n          var filterKey = filterData[ val(datum.filterKey, options.filterKey, datum) ];\n\n          if (filterKey) {\n            return filterKey;\n          }\n        })\n        .style('stroke', function ( datum ) {\n          return val(datum.borderColor, options.borderColor, datum);\n        })\n        .style('stroke-width', function ( datum ) {\n          return val(datum.borderWidth, options.borderWidth, datum);\n        })\n        .style('stroke-opacity', function ( datum ) {\n          return val(datum.borderOpacity, options.borderOpacity, datum);\n        })\n        .style('fill-opacity', function ( datum ) {\n          return val(datum.fillOpacity, options.fillOpacity, datum);\n        })\n        .style('fill', function ( datum ) {\n          var fillColor = fillData[ val(datum.fillKey, options.fillKey, datum) ];\n          return fillColor || fillData.defaultFill;\n        })\n        .on('mouseover', function ( datum ) {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            // Save all previous attributes for mouseout\n            var previousAttributes = {\n              'fill':  $this.style('fill'),\n              'stroke': $this.style('stroke'),\n              'stroke-width': $this.style('stroke-width'),\n              'fill-opacity': $this.style('fill-opacity')\n            };\n\n            $this\n              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n              .style('stroke-opacity', val(datum.highlightBorderOpacity, options.highlightBorderOpacity, datum))\n              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n          }\n\n          if (options.popupOnHover) {\n            self.updatePopup($this, datum, options, svg);\n          }\n        })\n        .on('mouseout', function ( datum ) {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            // Reapply previous attributes\n            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n            for ( var attr in previousAttributes ) {\n              $this.style(attr, previousAttributes[attr]);\n            }\n          }\n\n          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n        })\n\n    bubbles.transition()\n      .duration(400)\n      .attr('r', function ( datum ) {\n        return val(datum.radius, options.radius, datum);\n      })\n    .transition()\n      .duration(0)\n      .attr('data-info', function(d) {\n        return JSON.stringify(d);\n      });\n\n    bubbles.exit()\n      .transition()\n        .delay(options.exitDelay)\n        .attr(\"r\", 0)\n        .remove();\n\n    function datumHasCoords (datum) {\n      return typeof datum !== 'undefined' && typeof datum.latitude !== 'undefined' && typeof datum.longitude !== 'undefined';\n    }\n  }\n\n  function defaults(obj) {\n    Array.prototype.slice.call(arguments, 1).forEach(function(source) {\n      if (source) {\n        for (var prop in source) {\n          // Deep copy if property not set\n          if (obj[prop] == null) {\n            if (typeof source[prop] == 'function') {\n              obj[prop] = source[prop];\n            }\n            else {\n              obj[prop] = JSON.parse(JSON.stringify(source[prop]));\n            }\n          }\n        }\n      }\n    });\n    return obj;\n  }\n  /**************************************\n             Public Functions\n  ***************************************/\n\n  function Datamap( options ) {\n\n    if ( typeof d3 === 'undefined' || typeof topojson === 'undefined' ) {\n      throw new Error('Include d3.js (v3.0.3 or greater) and topojson on this page before creating a new map');\n   }\n    // Set options for global use\n    this.options = defaults(options, defaultOptions);\n    this.options.geographyConfig = defaults(options.geographyConfig, defaultOptions.geographyConfig);\n    this.options.projectionConfig = defaults(options.projectionConfig, defaultOptions.projectionConfig);\n    this.options.bubblesConfig = defaults(options.bubblesConfig, defaultOptions.bubblesConfig);\n    this.options.arcConfig = defaults(options.arcConfig, defaultOptions.arcConfig);\n\n    // Add the SVG container\n    if ( d3.select( this.options.element ).select('svg').length > 0 ) {\n      addContainer.call(this, this.options.element, this.options.height, this.options.width );\n    }\n\n    // Add core plugins to this instance\n    this.addPlugin('bubbles', handleBubbles);\n    this.addPlugin('legend', addLegend);\n    this.addPlugin('arc', handleArcs);\n    this.addPlugin('labels', handleLabels);\n    this.addPlugin('graticule', addGraticule);\n\n    // Append style block with basic hoverover styles\n    if ( ! this.options.disableDefaultStyles ) {\n      addStyleBlock();\n    }\n\n    return this.draw();\n  }\n\n  // Resize map\n  Datamap.prototype.resize = function () {\n\n    var self = this;\n    var options = self.options;\n\n    if (options.responsive) {\n      var newsize = options.element.clientWidth,\n          oldsize = d3.select( options.element).select('svg').attr('data-width');\n\n      d3.select(options.element).select('svg').selectAll('g').attr('transform', 'scale(' + (newsize / oldsize) + ')');\n    }\n  }\n\n  // Actually draw the features(states & countries)\n  Datamap.prototype.draw = function() {\n    // Save off in a closure\n    var self = this;\n    var options = self.options;\n\n    // Set projections and paths based on scope\n    var pathAndProjection = options.setProjection.apply(this, [options.element, options] );\n\n    this.path = pathAndProjection.path;\n    this.projection = pathAndProjection.projection;\n\n    // If custom URL for topojson data, retrieve it and render\n    if ( options.geographyConfig.dataUrl ) {\n      d3.json( options.geographyConfig.dataUrl, function(error, results) {\n        if ( error ) throw new Error(error);\n        self.customTopo = results;\n        draw( results );\n      });\n    }\n    else {\n      draw( this[options.scope + 'Topo'] || options.geographyConfig.dataJson);\n    }\n\n    return this;\n\n      function draw (data) {\n        // If fetching remote data, draw the map first then call `updateChoropleth`\n        if ( self.options.dataUrl ) {\n          // Allow for csv or json data types\n          d3[self.options.dataType](self.options.dataUrl, function(data) {\n            // In the case of csv, transform data to object\n            if ( self.options.dataType === 'csv' && (data && data.slice) ) {\n              var tmpData = {};\n              for(var i = 0; i < data.length; i++) {\n                tmpData[data[i].id] = data[i];\n              }\n              data = tmpData;\n            }\n            Datamaps.prototype.updateChoropleth.call(self, data);\n          });\n        }\n        drawSubunits.call(self, data);\n        handleGeographyConfig.call(self);\n\n        if ( self.options.geographyConfig.popupOnHover || self.options.bubblesConfig.popupOnHover) {\n          hoverover = d3.select( self.options.element ).append('div')\n            .attr('class', 'datamaps-hoverover')\n            .style('z-index', 10001)\n            .style('position', 'absolute');\n        }\n\n        // Fire off finished callback\n        self.options.done(self);\n      }\n  };\n  /**************************************\n                TopoJSON\n  ***************************************/\n  Datamap.prototype.worldTopo = {\n    \"type\": \"Topology\",\n    \"objects\": {\n        \"world\": {\n            \"type\": \"GeometryCollection\",\n            \"geometries\": [{\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Afghanistan\"\n                },\n                \"id\": \"AFG\",\n                \"arcs\": [\n                    [0, 1, 2, 3, 4, 5]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Angola\"\n                },\n                \"id\": \"AGO\",\n                \"arcs\": [\n                    [\n                        [6, 7, 8, 9]\n                    ],\n                    [\n                        [10, 11, 12]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Albania\"\n                },\n                \"id\": \"ALB\",\n                \"arcs\": [\n                    [13, 14, 15, 16, 17]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"United Arab Emirates\"\n                },\n                \"id\": \"ARE\",\n                \"arcs\": [\n                    [18, 19, 20, 21, 22]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Argentina\"\n                },\n                \"id\": \"ARG\",\n                \"arcs\": [\n                    [\n                        [23, 24]\n                    ],\n                    [\n                        [25, 26, 27, 28, 29, 30]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Armenia\"\n                },\n                \"id\": \"ARM\",\n                \"arcs\": [\n                    [31, 32, 33, 34, 35]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Antarctica\"\n                },\n                \"id\": \"ATA\",\n                \"arcs\": [\n                    [\n                        [36]\n                    ],\n                    [\n                        [37]\n                    ],\n                    [\n                        [38]\n                    ],\n                    [\n                        [39]\n                    ],\n                    [\n                        [40]\n                    ],\n                    [\n                        [41]\n                    ],\n                    [\n                        [42]\n                    ],\n                    [\n                        [43]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"French Southern and Antarctic Lands\"\n                },\n                \"id\": \"ATF\",\n                \"arcs\": [\n                    [44]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Australia\"\n                },\n                \"id\": \"AUS\",\n                \"arcs\": [\n                    [\n                        [45]\n                    ],\n                    [\n                        [46]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Austria\"\n                },\n                \"id\": \"AUT\",\n                \"arcs\": [\n                    [47, 48, 49, 50, 51, 52, 53]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Azerbaijan\"\n                },\n                \"id\": \"AZE\",\n                \"arcs\": [\n                    [\n                        [54, -35]\n                    ],\n                    [\n                        [55, 56, -33, 57, 58]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Burundi\"\n                },\n                \"id\": \"BDI\",\n                \"arcs\": [\n                    [59, 60, 61]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Belgium\"\n                },\n                \"id\": \"BEL\",\n                \"arcs\": [\n                    [62, 63, 64, 65, 66]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Benin\"\n                },\n                \"id\": \"BEN\",\n                \"arcs\": [\n                    [67, 68, 69, 70, 71]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Burkina Faso\"\n                },\n                \"id\": \"BFA\",\n                \"arcs\": [\n                    [72, 73, 74, -70, 75, 76]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bangladesh\"\n                },\n                \"id\": \"BGD\",\n                \"arcs\": [\n                    [77, 78, 79]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bulgaria\"\n                },\n                \"id\": \"BGR\",\n                \"arcs\": [\n                    [80, 81, 82, 83, 84, 85]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"The Bahamas\"\n                },\n                \"id\": \"BHS\",\n                \"arcs\": [\n                    [\n                        [86]\n                    ],\n                    [\n                        [87]\n                    ],\n                    [\n                        [88]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bosnia and Herzegovina\"\n                },\n                \"id\": \"BIH\",\n                \"arcs\": [\n                    [89, 90, 91]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Belarus\"\n                },\n                \"id\": \"BLR\",\n                \"arcs\": [\n                    [92, 93, 94, 95, 96]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Belize\"\n                },\n                \"id\": \"BLZ\",\n                \"arcs\": [\n                    [97, 98, 99]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bolivia\"\n                },\n                \"id\": \"BOL\",\n                \"arcs\": [\n                    [100, 101, 102, 103, -31]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Brazil\"\n                },\n                \"id\": \"BRA\",\n                \"arcs\": [\n                    [-27, 104, -103, 105, 106, 107, 108, 109, 110, 111, 112]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Brunei\"\n                },\n                \"id\": \"BRN\",\n                \"arcs\": [\n                    [113, 114]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bhutan\"\n                },\n                \"id\": \"BTN\",\n                \"arcs\": [\n                    [115, 116]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Botswana\"\n                },\n                \"id\": \"BWA\",\n                \"arcs\": [\n                    [117, 118, 119, 120]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Central African Republic\"\n                },\n                \"id\": \"CAF\",\n                \"arcs\": [\n                    [121, 122, 123, 124, 125, 126, 127]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Canada\"\n                },\n                \"id\": \"CAN\",\n                \"arcs\": [\n                    [\n                        [128]\n                    ],\n                    [\n                        [129]\n                    ],\n                    [\n                        [130]\n                    ],\n                    [\n                        [131]\n                    ],\n                    [\n                        [132]\n                    ],\n                    [\n                        [133]\n                    ],\n                    [\n                        [134]\n                    ],\n                    [\n                        [135]\n                    ],\n                    [\n                        [136]\n                    ],\n                    [\n                        [137]\n                    ],\n                    [\n                        [138, 139, 140, 141]\n                    ],\n                    [\n                        [142]\n                    ],\n                    [\n                        [143]\n                    ],\n                    [\n                        [144]\n                    ],\n                    [\n                        [145]\n                    ],\n                    [\n                        [146]\n                    ],\n                    [\n                        [147]\n                    ],\n                    [\n                        [148]\n                    ],\n                    [\n                        [149]\n                    ],\n                    [\n                        [150]\n                    ],\n                    [\n                        [151]\n                    ],\n                    [\n                        [152]\n                    ],\n                    [\n                        [153]\n                    ],\n                    [\n                        [154]\n                    ],\n                    [\n                        [155]\n                    ],\n                    [\n                        [156]\n                    ],\n                    [\n                        [157]\n                    ],\n                    [\n                        [158]\n                    ],\n                    [\n                        [159]\n                    ],\n                    [\n                        [160]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Switzerland\"\n                },\n                \"id\": \"CHE\",\n                \"arcs\": [\n                    [-51, 161, 162, 163]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Chile\"\n                },\n                \"id\": \"CHL\",\n                \"arcs\": [\n                    [\n                        [-24, 164]\n                    ],\n                    [\n                        [-30, 165, 166, -101]\n                    ]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"China\"\n                },\n                \"id\": \"CHN\",\n                \"arcs\": [\n                    [\n                        [167]\n                    ],\n                    [\n                        [168, 169, 170, 171, 172, 173, -117, 174, 175, 176, 177, -4, 178, 179, 180, 181, 182, 183]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ivory Coast\"\n                },\n                \"id\": \"CIV\",\n                \"arcs\": [\n                    [184, 185, 186, 187, -73, 188]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cameroon\"\n                },\n                \"id\": \"CMR\",\n                \"arcs\": [\n                    [189, 190, 191, 192, 193, 194, -128, 195]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Democratic Republic of the Congo\"\n                },\n                \"id\": \"COD\",\n                \"arcs\": [\n                    [196, 197, -60, 198, 199, -10, 200, -13, 201, -126, 202]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Republic of the Congo\"\n                },\n                \"id\": \"COG\",\n                \"arcs\": [\n                    [-12, 203, 204, -196, -127, -202]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Colombia\"\n                },\n                \"id\": \"COL\",\n                \"arcs\": [\n                    [205, 206, 207, 208, 209, -107, 210]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Costa Rica\"\n                },\n                \"id\": \"CRI\",\n                \"arcs\": [\n                    [211, 212, 213, 214]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cuba\"\n                },\n                \"id\": \"CUB\",\n                \"arcs\": [\n                    [215]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Northern Cyprus\"\n                },\n                \"id\": \"-99\",\n                \"arcs\": [\n                    [216, 217]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cyprus\"\n                },\n                \"id\": \"CYP\",\n                \"arcs\": [\n                    [218, -218]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Czech Republic\"\n                },\n                \"id\": \"CZE\",\n                \"arcs\": [\n                    [-53, 219, 220, 221]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Germany\"\n                },\n                \"id\": \"DEU\",\n                \"arcs\": [\n                    [222, 223, -220, -52, -164, 224, 225, -64, 226, 227, 228]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Djibouti\"\n                },\n                \"id\": \"DJI\",\n                \"arcs\": [\n                    [229, 230, 231, 232]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Denmark\"\n                },\n                \"id\": \"DNK\",\n                \"arcs\": [\n                    [\n                        [233]\n                    ],\n                    [\n                        [-229, 234]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Dominican Republic\"\n                },\n                \"id\": \"DOM\",\n                \"arcs\": [\n                    [235, 236]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Algeria\"\n                },\n                \"id\": \"DZA\",\n                \"arcs\": [\n                    [237, 238, 239, 240, 241, 242, 243, 244]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ecuador\"\n                },\n                \"id\": \"ECU\",\n                \"arcs\": [\n                    [245, -206, 246]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Egypt\"\n                },\n                \"id\": \"EGY\",\n                \"arcs\": [\n                    [247, 248, 249, 250, 251]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Eritrea\"\n                },\n                \"id\": \"ERI\",\n                \"arcs\": [\n                    [252, 253, 254, -233]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Spain\"\n                },\n                \"id\": \"ESP\",\n                \"arcs\": [\n                    [255, 256, 257, 258]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Estonia\"\n                },\n                \"id\": \"EST\",\n                \"arcs\": [\n                    [259, 260, 261]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ethiopia\"\n                },\n                \"id\": \"ETH\",\n                \"arcs\": [\n                    [-232, 262, 263, 264, 265, 266, 267, -253]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Finland\"\n                },\n                \"id\": \"FIN\",\n                \"arcs\": [\n                    [268, 269, 270, 271]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Fiji\"\n                },\n                \"id\": \"FJI\",\n                \"arcs\": [\n                    [\n                        [272]\n                    ],\n                    [\n                        [273, 274]\n                    ],\n                    [\n                        [275, -275]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Falkland Islands\"\n                },\n                \"id\": \"FLK\",\n                \"arcs\": [\n                    [276]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"France\"\n                },\n                \"id\": \"FRA\",\n                \"arcs\": [\n                    [\n                        [277]\n                    ],\n                    [\n                        [278, -225, -163, 279, 280, -257, 281, -66]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"French Guiana\"\n                },\n                \"id\": \"GUF\",\n                \"arcs\": [\n                    [282, 283, 284, 285, -111]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Gabon\"\n                },\n                \"id\": \"GAB\",\n                \"arcs\": [\n                    [286, 287, -190, -205]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"United Kingdom\"\n                },\n                \"id\": \"GBR\",\n                \"arcs\": [\n                    [\n                        [288, 289]\n                    ],\n                    [\n                        [290]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Georgia\"\n                },\n                \"id\": \"GEO\",\n                \"arcs\": [\n                    [291, 292, -58, -32, 293]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ghana\"\n                },\n                \"id\": \"GHA\",\n                \"arcs\": [\n                    [294, -189, -77, 295]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guinea\"\n                },\n                \"id\": \"GIN\",\n                \"arcs\": [\n                    [296, 297, 298, 299, 300, 301, -187]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Gambia\"\n                },\n                \"id\": \"GMB\",\n                \"arcs\": [\n                    [302, 303]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guinea Bissau\"\n                },\n                \"id\": \"GNB\",\n                \"arcs\": [\n                    [304, 305, -300]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Equatorial Guinea\"\n                },\n                \"id\": \"GNQ\",\n                \"arcs\": [\n                    [306, -191, -288]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Greece\"\n                },\n                \"id\": \"GRC\",\n                \"arcs\": [\n                    [\n                        [307]\n                    ],\n                    [\n                        [308, -15, 309, -84, 310]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Greenland\"\n                },\n                \"id\": \"GRL\",\n                \"arcs\": [\n                    [311]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guatemala\"\n                },\n                \"id\": \"GTM\",\n                \"arcs\": [\n                    [312, 313, -100, 314, 315, 316]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guyana\"\n                },\n                \"id\": \"GUY\",\n                \"arcs\": [\n                    [317, 318, -109, 319]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Honduras\"\n                },\n                \"id\": \"HND\",\n                \"arcs\": [\n                    [320, 321, -316, 322, 323]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Croatia\"\n                },\n                \"id\": \"HRV\",\n                \"arcs\": [\n                    [324, -92, 325, 326, 327, 328]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Haiti\"\n                },\n                \"id\": \"HTI\",\n                \"arcs\": [\n                    [-237, 329]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Hungary\"\n                },\n                \"id\": \"HUN\",\n                \"arcs\": [\n                    [-48, 330, 331, 332, 333, -329, 334]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Indonesia\"\n                },\n                \"id\": \"IDN\",\n                \"arcs\": [\n                    [\n                        [335]\n                    ],\n                    [\n                        [336, 337]\n                    ],\n                    [\n                        [338]\n                    ],\n                    [\n                        [339]\n                    ],\n                    [\n                        [340]\n                    ],\n                    [\n                        [341]\n                    ],\n                    [\n                        [342]\n                    ],\n                    [\n                        [343]\n                    ],\n                    [\n                        [344, 345]\n                    ],\n                    [\n                        [346]\n                    ],\n                    [\n                        [347]\n                    ],\n                    [\n                        [348, 349]\n                    ],\n                    [\n                        [350]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"India\"\n                },\n                \"id\": \"IND\",\n                \"arcs\": [\n                    [-177, 351, -175, -116, -174, 352, -80, 353, 354]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ireland\"\n                },\n                \"id\": \"IRL\",\n                \"arcs\": [\n                    [355, -289]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Iran\"\n                },\n                \"id\": \"IRN\",\n                \"arcs\": [\n                    [356, -6, 357, 358, 359, 360, -55, -34, -57, 361]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Iraq\"\n                },\n                \"id\": \"IRQ\",\n                \"arcs\": [\n                    [362, 363, 364, 365, 366, 367, -360]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Iceland\"\n                },\n                \"id\": \"ISL\",\n                \"arcs\": [\n                    [368]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Israel\"\n                },\n                \"id\": \"ISR\",\n                \"arcs\": [\n                    [369, 370, 371, -252, 372, 373, 374]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Italy\"\n                },\n                \"id\": \"ITA\",\n                \"arcs\": [\n                    [\n                        [375]\n                    ],\n                    [\n                        [376]\n                    ],\n                    [\n                        [377, 378, -280, -162, -50]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Jamaica\"\n                },\n                \"id\": \"JAM\",\n                \"arcs\": [\n                    [379]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Jordan\"\n                },\n                \"id\": \"JOR\",\n                \"arcs\": [\n                    [-370, 380, -366, 381, 382, -372, 383]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Japan\"\n                },\n                \"id\": \"JPN\",\n                \"arcs\": [\n                    [\n                        [384]\n                    ],\n                    [\n                        [385]\n                    ],\n                    [\n                        [386]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kazakhstan\"\n                },\n                \"id\": \"KAZ\",\n                \"arcs\": [\n                    [387, 388, 389, 390, -181, 391]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kenya\"\n                },\n                \"id\": \"KEN\",\n                \"arcs\": [\n                    [392, 393, 394, 395, -265, 396]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kyrgyzstan\"\n                },\n                \"id\": \"KGZ\",\n                \"arcs\": [\n                    [-392, -180, 397, 398]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cambodia\"\n                },\n                \"id\": \"KHM\",\n                \"arcs\": [\n                    [399, 400, 401, 402]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"South Korea\"\n                },\n                \"id\": \"KOR\",\n                \"arcs\": [\n                    [403, 404]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kosovo\"\n                },\n                \"id\": \"-99\",\n                \"arcs\": [\n                    [-18, 405, 406, 407]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kuwait\"\n                },\n                \"id\": \"KWT\",\n                \"arcs\": [\n                    [408, 409, -364]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Laos\"\n                },\n                \"id\": \"LAO\",\n                \"arcs\": [\n                    [410, 411, -172, 412, -401]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Lebanon\"\n                },\n                \"id\": \"LBN\",\n                \"arcs\": [\n                    [-374, 413, 414]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Liberia\"\n                },\n                \"id\": \"LBR\",\n                \"arcs\": [\n                    [415, 416, -297, -186]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Libya\"\n                },\n                \"id\": \"LBY\",\n                \"arcs\": [\n                    [417, -245, 418, 419, -250, 420, 421]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sri Lanka\"\n                },\n                \"id\": \"LKA\",\n                \"arcs\": [\n                    [422]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Lesotho\"\n                },\n                \"id\": \"LSO\",\n                \"arcs\": [\n                    [423]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Lithuania\"\n                },\n                \"id\": \"LTU\",\n                \"arcs\": [\n                    [424, 425, 426, -93, 427]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Luxembourg\"\n                },\n                \"id\": \"LUX\",\n                \"arcs\": [\n                    [-226, -279, -65]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Latvia\"\n                },\n                \"id\": \"LVA\",\n                \"arcs\": [\n                    [428, -262, 429, -94, -427]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Morocco\"\n                },\n                \"id\": \"MAR\",\n                \"arcs\": [\n                    [-242, 430, 431]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Moldova\"\n                },\n                \"id\": \"MDA\",\n                \"arcs\": [\n                    [432, 433]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Madagascar\"\n                },\n                \"id\": \"MDG\",\n                \"arcs\": [\n                    [434]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mexico\"\n                },\n                \"id\": \"MEX\",\n                \"arcs\": [\n                    [435, -98, -314, 436, 437]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Macedonia\"\n                },\n                \"id\": \"MKD\",\n                \"arcs\": [\n                    [-408, 438, -85, -310, -14]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mali\"\n                },\n                \"id\": \"MLI\",\n                \"arcs\": [\n                    [439, -239, 440, -74, -188, -302, 441]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Myanmar\"\n                },\n                \"id\": \"MMR\",\n                \"arcs\": [\n                    [442, -78, -353, -173, -412, 443]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Montenegro\"\n                },\n                \"id\": \"MNE\",\n                \"arcs\": [\n                    [444, -326, -91, 445, -406, -17]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mongolia\"\n                },\n                \"id\": \"MNG\",\n                \"arcs\": [\n                    [446, -183]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mozambique\"\n                },\n                \"id\": \"MOZ\",\n                \"arcs\": [\n                    [447, 448, 449, 450, 451, 452, 453, 454]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mauritania\"\n                },\n                \"id\": \"MRT\",\n                \"arcs\": [\n                    [455, 456, 457, -240, -440]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Malawi\"\n                },\n                \"id\": \"MWI\",\n                \"arcs\": [\n                    [-455, 458, 459]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Malaysia\"\n                },\n                \"id\": \"MYS\",\n                \"arcs\": [\n                    [\n                        [460, 461]\n                    ],\n                    [\n                        [-349, 462, -115, 463]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Namibia\"\n                },\n                \"id\": \"NAM\",\n                \"arcs\": [\n                    [464, -8, 465, -119, 466]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"New Caledonia\"\n                },\n                \"id\": \"NCL\",\n                \"arcs\": [\n                    [467]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Niger\"\n                },\n                \"id\": \"NER\",\n                \"arcs\": [\n                    [-75, -441, -238, -418, 468, -194, 469, -71]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Nigeria\"\n                },\n                \"id\": \"NGA\",\n                \"arcs\": [\n                    [470, -72, -470, -193]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Nicaragua\"\n                },\n                \"id\": \"NIC\",\n                \"arcs\": [\n                    [471, -324, 472, -213]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Netherlands\"\n                },\n                \"id\": \"NLD\",\n                \"arcs\": [\n                    [-227, -63, 473]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Norway\"\n                },\n                \"id\": \"NOR\",\n                \"arcs\": [\n                    [\n                        [474, -272, 475, 476]\n                    ],\n                    [\n                        [477]\n                    ],\n                    [\n                        [478]\n                    ],\n                    [\n                        [479]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Nepal\"\n                },\n                \"id\": \"NPL\",\n                \"arcs\": [\n                    [-352, -176]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"New Zealand\"\n                },\n                \"id\": \"NZL\",\n                \"arcs\": [\n                    [\n                        [480]\n                    ],\n                    [\n                        [481]\n                    ]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Oman\"\n                },\n                \"id\": \"OMN\",\n                \"arcs\": [\n                    [\n                        [482, 483, -22, 484]\n                    ],\n                    [\n                        [-20, 485]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Pakistan\"\n                },\n                \"id\": \"PAK\",\n                \"arcs\": [\n                    [-178, -355, 486, -358, -5]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Panama\"\n                },\n                \"id\": \"PAN\",\n                \"arcs\": [\n                    [487, -215, 488, -208]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Peru\"\n                },\n                \"id\": \"PER\",\n                \"arcs\": [\n                    [-167, 489, -247, -211, -106, -102]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Philippines\"\n                },\n                \"id\": \"PHL\",\n                \"arcs\": [\n                    [\n                        [490]\n                    ],\n                    [\n                        [491]\n                    ],\n                    [\n                        [492]\n                    ],\n                    [\n                        [493]\n                    ],\n                    [\n                        [494]\n                    ],\n                    [\n                        [495]\n                    ],\n                    [\n                        [496]\n                    ]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Papua New Guinea\"\n                },\n                \"id\": \"PNG\",\n                \"arcs\": [\n                    [\n                        [497]\n                    ],\n                    [\n                        [498]\n                    ],\n                    [\n                        [-345, 499]\n                    ],\n                    [\n                        [500]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Poland\"\n                },\n                \"id\": \"POL\",\n                \"arcs\": [\n                    [-224, 501, 502, -428, -97, 503, 504, -221]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Puerto Rico\"\n                },\n                \"id\": \"PRI\",\n                \"arcs\": [\n                    [505]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"North Korea\"\n                },\n                \"id\": \"PRK\",\n                \"arcs\": [\n                    [506, 507, -405, 508, -169]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Portugal\"\n                },\n                \"id\": \"PRT\",\n                \"arcs\": [\n                    [-259, 509]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Paraguay\"\n                },\n                \"id\": \"PRY\",\n                \"arcs\": [\n                    [-104, -105, -26]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Qatar\"\n                },\n                \"id\": \"QAT\",\n                \"arcs\": [\n                    [510, 511]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Romania\"\n                },\n                \"id\": \"ROU\",\n                \"arcs\": [\n                    [512, -434, 513, 514, -81, 515, -333]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Russia\"\n                },\n                \"id\": \"RUS\",\n                \"arcs\": [\n                    [\n                        [516]\n                    ],\n                    [\n                        [-503, 517, -425]\n                    ],\n                    [\n                        [518, 519]\n                    ],\n                    [\n                        [520]\n                    ],\n                    [\n                        [521]\n                    ],\n                    [\n                        [522]\n                    ],\n                    [\n                        [523]\n                    ],\n                    [\n                        [524]\n                    ],\n                    [\n                        [525]\n                    ],\n                    [\n                        [526, -507, -184, -447, -182, -391, 527, -59, -293, 528, 529, -95, -430, -261, 530, -269, -475, 531, -520]\n                    ],\n                    [\n                        [532]\n                    ],\n                    [\n                        [533]\n                    ],\n                    [\n                        [534]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Rwanda\"\n                },\n                \"id\": \"RWA\",\n                \"arcs\": [\n                    [535, -61, -198, 536]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Western Sahara\"\n                },\n                \"id\": \"ESH\",\n                \"arcs\": [\n                    [-241, -458, 537, -431]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Saudi Arabia\"\n                },\n                \"id\": \"SAU\",\n                \"arcs\": [\n                    [538, -382, -365, -410, 539, -512, 540, -23, -484, 541]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sudan\"\n                },\n                \"id\": \"SDN\",\n                \"arcs\": [\n                    [542, 543, -123, 544, -421, -249, 545, -254, -268, 546]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"South Sudan\"\n                },\n                \"id\": \"SSD\",\n                \"arcs\": [\n                    [547, -266, -396, 548, -203, -125, 549, -543]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Senegal\"\n                },\n                \"id\": \"SEN\",\n                \"arcs\": [\n                    [550, -456, -442, -301, -306, 551, -304]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Solomon Islands\"\n                },\n                \"id\": \"SLB\",\n                \"arcs\": [\n                    [\n                        [552]\n                    ],\n                    [\n                        [553]\n                    ],\n                    [\n                        [554]\n                    ],\n                    [\n                        [555]\n                    ],\n                    [\n                        [556]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sierra Leone\"\n                },\n                \"id\": \"SLE\",\n                \"arcs\": [\n                    [557, -298, -417]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"El Salvador\"\n                },\n                \"id\": \"SLV\",\n                \"arcs\": [\n                    [558, -317, -322]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Somaliland\"\n                },\n                \"id\": \"-99\",\n                \"arcs\": [\n                    [-263, -231, 559, 560]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Somalia\"\n                },\n                \"id\": \"SOM\",\n                \"arcs\": [\n                    [-397, -264, -561, 561]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Republic of Serbia\"\n                },\n                \"id\": \"SRB\",\n                \"arcs\": [\n                    [-86, -439, -407, -446, -90, -325, -334, -516]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Suriname\"\n                },\n                \"id\": \"SUR\",\n                \"arcs\": [\n                    [562, -285, 563, -283, -110, -319]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Slovakia\"\n                },\n                \"id\": \"SVK\",\n                \"arcs\": [\n                    [-505, 564, -331, -54, -222]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Slovenia\"\n                },\n                \"id\": \"SVN\",\n                \"arcs\": [\n                    [-49, -335, -328, 565, -378]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sweden\"\n                },\n                \"id\": \"SWE\",\n                \"arcs\": [\n                    [-476, -271, 566]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Swaziland\"\n                },\n                \"id\": \"SWZ\",\n                \"arcs\": [\n                    [567, -451]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Syria\"\n                },\n                \"id\": \"SYR\",\n                \"arcs\": [\n                    [-381, -375, -415, 568, 569, -367]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Chad\"\n                },\n                \"id\": \"TCD\",\n                \"arcs\": [\n                    [-469, -422, -545, -122, -195]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Togo\"\n                },\n                \"id\": \"TGO\",\n                \"arcs\": [\n                    [570, -296, -76, -69]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Thailand\"\n                },\n                \"id\": \"THA\",\n                \"arcs\": [\n                    [571, -462, 572, -444, -411, -400]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Tajikistan\"\n                },\n                \"id\": \"TJK\",\n                \"arcs\": [\n                    [-398, -179, -3, 573]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Turkmenistan\"\n                },\n                \"id\": \"TKM\",\n                \"arcs\": [\n                    [-357, 574, -389, 575, -1]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"East Timor\"\n                },\n                \"id\": \"TLS\",\n                \"arcs\": [\n                    [576, -337]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Trinidad and Tobago\"\n                },\n                \"id\": \"TTO\",\n                \"arcs\": [\n                    [577]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Tunisia\"\n                },\n                \"id\": \"TUN\",\n                \"arcs\": [\n                    [-244, 578, -419]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Turkey\"\n                },\n                \"id\": \"TUR\",\n                \"arcs\": [\n                    [\n                        [-294, -36, -361, -368, -570, 579]\n                    ],\n                    [\n                        [-311, -83, 580]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Taiwan\"\n                },\n                \"id\": \"TWN\",\n                \"arcs\": [\n                    [581]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"United Republic of Tanzania\"\n                },\n                \"id\": \"TZA\",\n                \"arcs\": [\n                    [-394, 582, -448, -460, 583, -199, -62, -536, 584]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Uganda\"\n                },\n                \"id\": \"UGA\",\n                \"arcs\": [\n                    [-537, -197, -549, -395, -585]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ukraine\"\n                },\n                \"id\": \"UKR\",\n                \"arcs\": [\n                    [-530, 585, -514, -433, -513, -332, -565, -504, -96]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Uruguay\"\n                },\n                \"id\": \"URY\",\n                \"arcs\": [\n                    [-113, 586, -28]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"United States of America\"\n                },\n                \"id\": \"USA\",\n                \"arcs\": [\n                    [\n                        [587]\n                    ],\n                    [\n                        [588]\n                    ],\n                    [\n                        [589]\n                    ],\n                    [\n                        [590]\n                    ],\n                    [\n                        [591]\n                    ],\n                    [\n                        [592, -438, 593, -139]\n                    ],\n                    [\n                        [594]\n                    ],\n                    [\n                        [595]\n                    ],\n                    [\n                        [596]\n                    ],\n                    [\n                        [-141, 597]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Uzbekistan\"\n                },\n                \"id\": \"UZB\",\n                \"arcs\": [\n                    [-576, -388, -399, -574, -2]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Venezuela\"\n                },\n                \"id\": \"VEN\",\n                \"arcs\": [\n                    [598, -320, -108, -210]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Vietnam\"\n                },\n                \"id\": \"VNM\",\n                \"arcs\": [\n                    [599, -402, -413, -171]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Vanuatu\"\n                },\n                \"id\": \"VUT\",\n                \"arcs\": [\n                    [\n                        [600]\n                    ],\n                    [\n                        [601]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"West Bank\"\n                },\n                \"id\": \"PSE\",\n                \"arcs\": [\n                    [-384, -371]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Yemen\"\n                },\n                \"id\": \"YEM\",\n                \"arcs\": [\n                    [602, -542, -483]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"South Africa\"\n                },\n                \"id\": \"ZAF\",\n                \"arcs\": [\n                    [-467, -118, 603, -452, -568, -450, 604],\n                    [-424]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Zambia\"\n                },\n                \"id\": \"ZMB\",\n                \"arcs\": [\n                    [-459, -454, 605, -120, -466, -7, -200, -584]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Zimbabwe\"\n                },\n                \"id\": \"ZWE\",\n                \"arcs\": [\n                    [-604, -121, -606, -453]\n                ]\n            }]\n        }\n    },\n    \"arcs\": [\n        [\n            [6700, 7164],\n            [28, -23],\n            [21, 8],\n            [6, 27],\n            [22, 9],\n            [15, 18],\n            [6, 47],\n            [23, 11],\n            [5, 21],\n            [13, -15],\n            [8, -2]\n        ],\n        [\n            [6847, 7265],\n            [16, -1],\n            [20, -12]\n        ],\n        [\n            [6883, 7252],\n            [9, -7],\n            [20, 19],\n            [9, -12],\n            [9, 27],\n            [17, -1],\n            [4, 9],\n            [3, 24],\n            [12, 20],\n            [15, -13],\n            [-3, -18],\n            [9, -3],\n            [-3, -50],\n            [11, -19],\n            [10, 12],\n            [12, 6],\n            [17, 27],\n            [19, -5],\n            [29, 0]\n        ],\n        [\n            [7082, 7268],\n            [5, -17]\n        ],\n        [\n            [7087, 7251],\n            [-16, -6],\n            [-14, -11],\n            [-32, -7],\n            [-30, -13],\n            [-16, -25],\n            [6, -25],\n            [4, -30],\n            [-14, -25],\n            [1, -22],\n            [-8, -22],\n            [-26, 2],\n            [11, -39],\n            [-18, -15],\n            [-12, -35],\n            [2, -36],\n            [-11, -16],\n            [-10, 5],\n            [-22, -8],\n            [-3, -16],\n            [-20, 0],\n            [-16, -34],\n            [-1, -50],\n            [-36, -24],\n            [-19, 5],\n            [-6, -13],\n            [-16, 7],\n            [-28, -8],\n            [-47, 30]\n        ],\n        [\n            [6690, 6820],\n            [25, 53],\n            [-2, 38],\n            [-21, 10],\n            [-2, 38],\n            [-9, 47],\n            [12, 32],\n            [-12, 9],\n            [7, 43],\n            [12, 74]\n        ],\n        [\n            [5664, 4412],\n            [3, -18],\n            [-4, -29],\n            [5, -28],\n            [-4, -22],\n            [3, -20],\n            [-58, 1],\n            [-2, -188],\n            [19, -49],\n            [18, -37]\n        ],\n        [\n            [5644, 4022],\n            [-51, -24],\n            [-67, 9],\n            [-19, 28],\n            [-113, -3],\n            [-4, -4],\n            [-17, 27],\n            [-18, 2],\n            [-16, -10],\n            [-14, -12]\n        ],\n        [\n            [5325, 4035],\n            [-2, 38],\n            [4, 51],\n            [9, 55],\n            [2, 25],\n            [9, 53],\n            [6, 24],\n            [16, 39],\n            [9, 26],\n            [3, 44],\n            [-1, 34],\n            [-9, 21],\n            [-7, 36],\n            [-7, 35],\n            [2, 12],\n            [8, 24],\n            [-8, 57],\n            [-6, 39],\n            [-14, 38],\n            [3, 11]\n        ],\n        [\n            [5342, 4697],\n            [11, 8],\n            [8, -1],\n            [10, 7],\n            [82, -1],\n            [7, -44],\n            [8, -35],\n            [6, -19],\n            [11, -31],\n            [18, 5],\n            [9, 8],\n            [16, -8],\n            [4, 14],\n            [7, 35],\n            [17, 2],\n            [2, 10],\n            [14, 1],\n            [-3, -22],\n            [34, 1],\n            [1, -37],\n            [5, -23],\n            [-4, -36],\n            [2, -36],\n            [9, -22],\n            [-1, -70],\n            [7, 5],\n            [12, -1],\n            [17, 8],\n            [13, -3]\n        ],\n        [\n            [5338, 4715],\n            [-8, 45]\n        ],\n        [\n            [5330, 4760],\n            [12, 25],\n            [8, 10],\n            [10, -20]\n        ],\n        [\n            [5360, 4775],\n            [-10, -12],\n            [-4, -16],\n            [-1, -25],\n            [-7, -7]\n        ],\n        [\n            [5571, 7530],\n            [-3, -20],\n            [4, -25],\n            [11, -15]\n        ],\n        [\n            [5583, 7470],\n            [0, -15],\n            [-9, -9],\n            [-2, -19],\n            [-13, -29]\n        ],\n        [\n            [5559, 7398],\n            [-5, 5],\n            [0, 13],\n            [-15, 19],\n            [-3, 29],\n            [2, 40],\n            [4, 18],\n            [-4, 10]\n        ],\n        [\n            [5538, 7532],\n            [-2, 18],\n            [12, 29],\n            [1, -11],\n            [8, 6]\n        ],\n        [\n            [5557, 7574],\n            [6, -16],\n            [7, -6],\n            [1, -22]\n        ],\n        [\n            [6432, 6490],\n            [5, 3],\n            [1, -16],\n            [22, 9],\n            [23, -2],\n            [17, -1],\n            [19, 39],\n            [20, 38],\n            [18, 37]\n        ],\n        [\n            [6557, 6597],\n            [5, -20]\n        ],\n        [\n            [6562, 6577],\n            [4, -47]\n        ],\n        [\n            [6566, 6530],\n            [-14, 0],\n            [-3, -39],\n            [5, -8],\n            [-12, -12],\n            [0, -24],\n            [-8, -24],\n            [-1, -24]\n        ],\n        [\n            [6533, 6399],\n            [-6, -12],\n            [-83, 29],\n            [-11, 60],\n            [-1, 14]\n        ],\n        [\n            [3140, 1814],\n            [-17, 2],\n            [-30, 0],\n            [0, 132]\n        ],\n        [\n            [3093, 1948],\n            [11, -27],\n            [14, -45],\n            [36, -35],\n            [39, -15],\n            [-13, -30],\n            [-26, -2],\n            [-14, 20]\n        ],\n        [\n            [3258, 3743],\n            [51, -96],\n            [23, -9],\n            [34, -44],\n            [29, -23],\n            [4, -26],\n            [-28, -90],\n            [28, -16],\n            [32, -9],\n            [22, 10],\n            [25, 45],\n            [4, 52]\n        ],\n        [\n            [3482, 3537],\n            [14, 11],\n            [14, -34],\n            [-1, -47],\n            [-23, -33],\n            [-19, -24],\n            [-31, -57],\n            [-37, -81]\n        ],\n        [\n            [3399, 3272],\n            [-7, -47],\n            [-7, -61],\n            [0, -58],\n            [-6, -14],\n            [-2, -38]\n        ],\n        [\n            [3377, 3054],\n            [-2, -31],\n            [35, -50],\n            [-4, -41],\n            [18, -26],\n            [-2, -29],\n            [-26, -75],\n            [-42, -32],\n            [-55, -12],\n            [-31, 6],\n            [6, -36],\n            [-6, -44],\n            [5, -30],\n            [-16, -20],\n            [-29, -8],\n            [-26, 21],\n            [-11, -15],\n            [4, -59],\n            [18, -18],\n            [16, 19],\n            [8, -31],\n            [-26, -18],\n            [-22, -37],\n            [-4, -59],\n            [-7, -32],\n            [-26, 0],\n            [-22, -31],\n            [-8, -44],\n            [28, -43],\n            [26, -12],\n            [-9, -53],\n            [-33, -33],\n            [-18, -70],\n            [-25, -23],\n            [-12, -28],\n            [9, -61],\n            [19, -34],\n            [-12, 3]\n        ],\n        [\n            [3095, 1968],\n            [-26, 9],\n            [-67, 8],\n            [-11, 34],\n            [0, 45],\n            [-18, -4],\n            [-10, 21],\n            [-3, 63],\n            [22, 26],\n            [9, 37],\n            [-4, 30],\n            [15, 51],\n            [10, 78],\n            [-3, 35],\n            [12, 11],\n            [-3, 22],\n            [-13, 12],\n            [10, 25],\n            [-13, 22],\n            [-6, 68],\n            [11, 12],\n            [-5, 72],\n            [7, 61],\n            [7, 52],\n            [17, 22],\n            [-9, 58],\n            [0, 54],\n            [21, 38],\n            [-1, 50],\n            [16, 57],\n            [0, 55],\n            [-7, 11],\n            [-13, 102],\n            [17, 60],\n            [-2, 58],\n            [10, 53],\n            [18, 56],\n            [20, 36],\n            [-9, 24],\n            [6, 19],\n            [-1, 98],\n            [30, 29],\n            [10, 62],\n            [-3, 14]\n        ],\n        [\n            [3136, 3714],\n            [23, 54],\n            [36, -15],\n            [16, -42],\n            [11, 47],\n            [32, -2],\n            [4, -13]\n        ],\n        [\n            [6210, 7485],\n            [39, 9]\n        ],\n        [\n            [6249, 7494],\n            [5, -15],\n            [11, -10],\n            [-6, -15],\n            [15, -21],\n            [-8, -18],\n            [12, -16],\n            [13, -10],\n            [0, -41]\n        ],\n        [\n            [6291, 7348],\n            [-10, -2]\n        ],\n        [\n            [6281, 7346],\n            [-11, 34],\n            [0, 10],\n            [-12, -1],\n            [-9, 16],\n            [-5, -1]\n        ],\n        [\n            [6244, 7404],\n            [-11, 17],\n            [-21, 15],\n            [3, 28],\n            [-5, 21]\n        ],\n        [\n            [3345, 329],\n            [-8, -30],\n            [-8, -27],\n            [-59, 8],\n            [-62, -3],\n            [-34, 20],\n            [0, 2],\n            [-16, 17],\n            [63, -2],\n            [60, -6],\n            [20, 24],\n            [15, 21],\n            [29, -24]\n        ],\n        [\n            [577, 361],\n            [-53, -8],\n            [-36, 21],\n            [-17, 21],\n            [-1, 3],\n            [-18, 16],\n            [17, 22],\n            [52, -9],\n            [28, -18],\n            [21, -21],\n            [7, -27]\n        ],\n        [\n            [3745, 447],\n            [35, -26],\n            [12, -36],\n            [3, -25],\n            [1, -30],\n            [-43, -19],\n            [-45, -15],\n            [-52, -14],\n            [-59, -11],\n            [-65, 3],\n            [-37, 20],\n            [5, 24],\n            [59, 16],\n            [24, 20],\n            [18, 26],\n            [12, 22],\n            [17, 20],\n            [18, 25],\n            [14, 0],\n            [41, 12],\n            [42, -12]\n        ],\n        [\n            [1633, 715],\n            [36, -9],\n            [33, 10],\n            [-16, -20],\n            [-26, -15],\n            [-39, 4],\n            [-27, 21],\n            [6, 20],\n            [33, -11]\n        ],\n        [\n            [1512, 716],\n            [43, -23],\n            [-17, 3],\n            [-36, 5],\n            [-38, 17],\n            [20, 12],\n            [28, -14]\n        ],\n        [\n            [2250, 808],\n            [31, -8],\n            [30, 7],\n            [17, -34],\n            [-22, 5],\n            [-34, -2],\n            [-34, 2],\n            [-38, -4],\n            [-28, 12],\n            [-15, 24],\n            [18, 11],\n            [35, -8],\n            [40, -5]\n        ],\n        [\n            [3098, 866],\n            [4, -27],\n            [-5, -23],\n            [-8, -22],\n            [-33, -8],\n            [-31, -12],\n            [-36, 1],\n            [14, 24],\n            [-33, -9],\n            [-31, -8],\n            [-21, 18],\n            [-2, 24],\n            [30, 23],\n            [20, 7],\n            [32, -2],\n            [8, 30],\n            [1, 22],\n            [0, 47],\n            [16, 28],\n            [25, 9],\n            [15, -22],\n            [6, -22],\n            [12, -26],\n            [10, -26],\n            [7, -26]\n        ],\n        [\n            [3371, 1268],\n            [-11, -13],\n            [-21, 9],\n            [-23, -6],\n            [-19, -14],\n            [-20, -15],\n            [-14, -17],\n            [-4, -23],\n            [2, -22],\n            [13, -20],\n            [-19, -14],\n            [-26, -4],\n            [-15, -20],\n            [-17, -19],\n            [-17, -25],\n            [-4, -22],\n            [9, -24],\n            [15, -19],\n            [23, -14],\n            [21, -18],\n            [12, -23],\n            [6, -22],\n            [8, -24],\n            [13, -19],\n            [8, -22],\n            [4, -55],\n            [8, -22],\n            [2, -23],\n            [9, -23],\n            [-4, -31],\n            [-15, -24],\n            [-17, -20],\n            [-37, -8],\n            [-12, -21],\n            [-17, -20],\n            [-42, -22],\n            [-37, -9],\n            [-35, -13],\n            [-37, -13],\n            [-22, -24],\n            [-45, -2],\n            [-49, 2],\n            [-44, -4],\n            [-47, 0],\n            [9, -24],\n            [42, -10],\n            [31, -16],\n            [18, -21],\n            [-31, -19],\n            [-48, 6],\n            [-40, -15],\n            [-2, -24],\n            [-1, -23],\n            [33, -20],\n            [6, -22],\n            [35, -22],\n            [59, -9],\n            [50, -16],\n            [40, -19],\n            [50, -18],\n            [70, -10],\n            [68, -16],\n            [47, -17],\n            [52, -20],\n            [27, -28],\n            [13, -22],\n            [34, 21],\n            [46, 17],\n            [48, 19],\n            [58, 15],\n            [49, 16],\n            [69, 1],\n            [68, -8],\n            [56, -14],\n            [18, 26],\n            [39, 17],\n            [70, 1],\n            [55, 13],\n            [52, 13],\n            [58, 8],\n            [62, 10],\n            [43, 15],\n            [-20, 21],\n            [-12, 21],\n            [0, 22],\n            [-54, -2],\n            [-57, -10],\n            [-54, 0],\n            [-8, 22],\n            [4, 44],\n            [12, 13],\n            [40, 14],\n            [47, 14],\n            [34, 17],\n            [33, 18],\n            [25, 23],\n            [38, 10],\n            [38, 8],\n            [19, 5],\n            [43, 2],\n            [41, 8],\n            [34, 12],\n            [34, 14],\n            [30, 14],\n            [39, 18],\n            [24, 20],\n            [26, 17],\n            [9, 24],\n            [-30, 13],\n            [10, 25],\n            [18, 18],\n            [29, 12],\n            [31, 14],\n            [28, 18],\n            [22, 23],\n            [13, 28],\n            [21, 16],\n            [33, -3],\n            [13, -20],\n            [34, -2],\n            [1, 22],\n            [14, 23],\n            [30, -6],\n            [7, -22],\n            [33, -3],\n            [36, 10],\n            [35, 7],\n            [31, -3],\n            [12, -25],\n            [31, 20],\n            [28, 10],\n            [31, 9],\n            [31, 8],\n            [29, 14],\n            [31, 9],\n            [24, 13],\n            [17, 20],\n            [20, -15],\n            [29, 8],\n            [20, -27],\n            [16, -21],\n            [32, 11],\n            [12, 24],\n            [28, 16],\n            [37, -4],\n            [11, -22],\n            [22, 22],\n            [30, 7],\n            [33, 3],\n            [29, -2],\n            [31, -7],\n            [30, -3],\n            [13, -20],\n            [18, -17],\n            [31, 10],\n            [32, 3],\n            [32, 0],\n            [31, 1],\n            [28, 8],\n            [29, 7],\n            [25, 16],\n            [26, 11],\n            [28, 5],\n            [21, 17],\n            [15, 32],\n            [16, 20],\n            [29, -10],\n            [11, -21],\n            [24, -13],\n            [29, 4],\n            [19, -21],\n            [21, -15],\n            [28, 14],\n            [10, 26],\n            [25, 10],\n            [29, 20],\n            [27, 8],\n            [33, 11],\n            [22, 13],\n            [22, 14],\n            [22, 13],\n            [26, -7],\n            [25, 21],\n            [18, 16],\n            [26, -1],\n            [23, 14],\n            [6, 21],\n            [23, 16],\n            [23, 11],\n            [28, 10],\n            [25, 4],\n            [25, -3],\n            [26, -6],\n            [22, -16],\n            [3, -26],\n            [24, -19],\n            [17, -17],\n            [33, -7],\n            [19, -16],\n            [23, -16],\n            [26, -3],\n            [23, 11],\n            [24, 24],\n            [26, -12],\n            [27, -7],\n            [26, -7],\n            [27, -5],\n            [28, 0],\n            [23, -61],\n            [-1, -15],\n            [-4, -27],\n            [-26, -15],\n            [-22, -22],\n            [4, -23],\n            [31, 1],\n            [-4, -23],\n            [-14, -22],\n            [-13, -24],\n            [21, -19],\n            [32, -6],\n            [32, 11],\n            [15, 23],\n            [10, 22],\n            [15, 18],\n            [17, 18],\n            [7, 21],\n            [15, 29],\n            [18, 5],\n            [31, 3],\n            [28, 7],\n            [28, 9],\n            [14, 23],\n            [8, 22],\n            [19, 22],\n            [27, 15],\n            [23, 12],\n            [16, 19],\n            [15, 11],\n            [21, 9],\n            [27, -6],\n            [25, 6],\n            [28, 7],\n            [30, -4],\n            [20, 17],\n            [14, 39],\n            [11, -16],\n            [13, -28],\n            [23, -12],\n            [27, -4],\n            [26, 7],\n            [29, -5],\n            [26, -1],\n            [17, 6],\n            [24, -4],\n            [21, -12],\n            [25, 8],\n            [30, 0],\n            [25, 8],\n            [29, -8],\n            [19, 19],\n            [14, 20],\n            [19, 16],\n            [35, 44],\n            [18, -8],\n            [21, -16],\n            [18, -21],\n            [36, -36],\n            [27, -1],\n            [25, 0],\n            [30, 7],\n            [30, 8],\n            [23, 16],\n            [19, 18],\n            [31, 2],\n            [21, 13],\n            [22, -12],\n            [14, -18],\n            [19, -19],\n            [31, 2],\n            [19, -15],\n            [33, -15],\n            [35, -5],\n            [29, 4],\n            [21, 19],\n            [19, 18],\n            [25, 5],\n            [25, -8],\n            [29, -6],\n            [26, 9],\n            [25, 0],\n            [24, -6],\n            [26, -5],\n            [25, 10],\n            [30, 9],\n            [28, 3],\n            [32, 0],\n            [25, 5],\n            [25, 5],\n            [8, 29],\n            [1, 24],\n            [17, -16],\n            [5, -27],\n            [10, -24],\n            [11, -20],\n            [23, -10],\n            [32, 4],\n            [36, 1],\n            [25, 3],\n            [37, 0],\n            [26, 1],\n            [36, -2],\n            [31, -5],\n            [20, -18],\n            [-5, -22],\n            [18, -18],\n            [30, -13],\n            [31, -15],\n            [35, -11],\n            [38, -9],\n            [28, -9],\n            [32, -2],\n            [18, 20],\n            [24, -16],\n            [21, -19],\n            [25, -13],\n            [34, -6],\n            [32, -7],\n            [13, -23],\n            [32, -14],\n            [21, -21],\n            [31, -9],\n            [32, 1],\n            [30, -4],\n            [33, 1],\n            [34, -4],\n            [31, -8],\n            [28, -14],\n            [29, -12],\n            [20, -17],\n            [-3, -23],\n            [-15, -21],\n            [-13, -27],\n            [-9, -21],\n            [-14, -24],\n            [-36, -9],\n            [-16, -21],\n            [-36, -13],\n            [-13, -23],\n            [-19, -22],\n            [-20, -18],\n            [-11, -25],\n            [-7, -22],\n            [-3, -26],\n            [0, -22],\n            [16, -23],\n            [6, -22],\n            [13, -21],\n            [52, -8],\n            [11, -26],\n            [-50, -9],\n            [-43, -13],\n            [-52, -2],\n            [-24, -34],\n            [-5, -27],\n            [-12, -22],\n            [-14, -22],\n            [37, -20],\n            [14, -24],\n            [24, -22],\n            [33, -20],\n            [39, -19],\n            [42, -18],\n            [64, -19],\n            [14, -29],\n            [80, -12],\n            [5, -5],\n            [21, -17],\n            [77, 15],\n            [63, -19],\n            [48, -14],\n            [-9997, -1],\n            [24, 35],\n            [50, -19],\n            [3, 2],\n            [30, 19],\n            [4, 0],\n            [3, -1],\n            [40, -25],\n            [35, 25],\n            [7, 3],\n            [81, 11],\n            [27, -14],\n            [13, -7],\n            [41, -20],\n            [79, -15],\n            [63, -18],\n            [107, -14],\n            [80, 16],\n            [118, -11],\n            [67, -19],\n            [73, 17],\n            [78, 17],\n            [6, 27],\n            [-110, 3],\n            [-89, 14],\n            [-24, 23],\n            [-74, 12],\n            [5, 27],\n            [10, 24],\n            [10, 22],\n            [-5, 25],\n            [-46, 16],\n            [-22, 21],\n            [-43, 18],\n            [68, -3],\n            [64, 9],\n            [40, -20],\n            [50, 18],\n            [45, 22],\n            [23, 19],\n            [-10, 25],\n            [-36, 16],\n            [-41, 17],\n            [-57, 4],\n            [-50, 8],\n            [-54, 6],\n            [-18, 22],\n            [-36, 18],\n            [-21, 21],\n            [-9, 67],\n            [14, -6],\n            [25, -18],\n            [45, 6],\n            [44, 8],\n            [23, -26],\n            [44, 6],\n            [37, 13],\n            [35, 16],\n            [32, 20],\n            [41, 5],\n            [-1, 22],\n            [-9, 22],\n            [8, 21],\n            [36, 11],\n            [16, -20],\n            [42, 12],\n            [32, 15],\n            [40, 1],\n            [38, 6],\n            [37, 13],\n            [30, 13],\n            [34, 13],\n            [22, -4],\n            [19, -4],\n            [41, 8],\n            [37, -10],\n            [38, 1],\n            [37, 8],\n            [37, -6],\n            [41, -6],\n            [39, 3],\n            [40, -2],\n            [42, -1],\n            [38, 3],\n            [28, 17],\n            [34, 9],\n            [35, -13],\n            [33, 11],\n            [30, 21],\n            [18, -19],\n            [9, -21],\n            [18, -19],\n            [29, 17],\n            [33, -22],\n            [38, -7],\n            [32, -16],\n            [39, 3],\n            [36, 11],\n            [41, -3],\n            [38, -8],\n            [38, -10],\n            [15, 25],\n            [-18, 20],\n            [-14, 21],\n            [-36, 5],\n            [-15, 22],\n            [-6, 22],\n            [-10, 43],\n            [21, -8],\n            [36, -3],\n            [36, 3],\n            [33, -9],\n            [28, -17],\n            [12, -21],\n            [38, -4],\n            [36, 9],\n            [38, 11],\n            [34, 7],\n            [28, -14],\n            [37, 5],\n            [24, 45],\n            [23, -27],\n            [32, -10],\n            [34, 6],\n            [23, -23],\n            [37, -3],\n            [33, -7],\n            [34, -12],\n            [21, 22],\n            [11, 20],\n            [28, -23],\n            [38, 6],\n            [28, -13],\n            [19, -19],\n            [37, 5],\n            [29, 13],\n            [29, 15],\n            [33, 8],\n            [39, 7],\n            [36, 8],\n            [27, 13],\n            [16, 19],\n            [7, 25],\n            [-3, 24],\n            [-9, 24],\n            [-10, 23],\n            [-9, 23],\n            [-7, 21],\n            [-1, 23],\n            [2, 23],\n            [13, 22],\n            [11, 24],\n            [5, 23],\n            [-6, 26],\n            [-3, 23],\n            [14, 27],\n            [15, 17],\n            [18, 22],\n            [19, 19],\n            [22, 17],\n            [11, 25],\n            [15, 17],\n            [18, 15],\n            [26, 3],\n            [18, 19],\n            [19, 11],\n            [23, 7],\n            [20, 15],\n            [16, 19],\n            [22, 7],\n            [16, -15],\n            [-10, -20],\n            [-29, -17]\n        ],\n        [\n            [6914, 2185],\n            [18, -19],\n            [26, -7],\n            [1, -11],\n            [-7, -27],\n            [-43, -4],\n            [-1, 31],\n            [4, 25],\n            [2, 12]\n        ],\n        [\n            [9038, 2648],\n            [27, -21],\n            [15, 8],\n            [22, 12],\n            [16, -4],\n            [2, -70],\n            [-9, -21],\n            [-3, -47],\n            [-10, 16],\n            [-19, -41],\n            [-6, 3],\n            [-17, 2],\n            [-17, 50],\n            [-4, 39],\n            [-16, 52],\n            [1, 27],\n            [18, -5]\n        ],\n        [\n            [8987, 4244],\n            [10, -46],\n            [18, 22],\n            [9, -25],\n            [13, -23],\n            [-3, -26],\n            [6, -51],\n            [5, -29],\n            [7, -7],\n            [7, -51],\n            [-3, -30],\n            [9, -40],\n            [31, -31],\n            [19, -28],\n            [19, -26],\n            [-4, -14],\n            [16, -37],\n            [11, -64],\n            [11, 13],\n            [11, -26],\n            [7, 9],\n            [5, -63],\n            [19, -36],\n            [13, -22],\n            [22, -48],\n            [8, -48],\n            [1, -33],\n            [-2, -37],\n            [13, -50],\n            [-2, -52],\n            [-5, -28],\n            [-7, -52],\n            [1, -34],\n            [-6, -43],\n            [-12, -53],\n            [-21, -29],\n            [-10, -46],\n            [-9, -29],\n            [-8, -51],\n            [-11, -30],\n            [-7, -44],\n            [-4, -41],\n            [2, -18],\n            [-16, -21],\n            [-31, -2],\n            [-26, -24],\n            [-13, -23],\n            [-17, -26],\n            [-23, 27],\n            [-17, 10],\n            [5, 31],\n            [-15, -11],\n            [-25, -43],\n            [-24, 16],\n            [-15, 9],\n            [-16, 4],\n            [-27, 17],\n            [-18, 37],\n            [-5, 45],\n            [-7, 30],\n            [-13, 24],\n            [-27, 7],\n            [9, 28],\n            [-7, 44],\n            [-13, -41],\n            [-25, -11],\n            [14, 33],\n            [5, 34],\n            [10, 29],\n            [-2, 44],\n            [-22, -50],\n            [-18, -21],\n            [-10, -47],\n            [-22, 25],\n            [1, 31],\n            [-18, 43],\n            [-14, 22],\n            [5, 14],\n            [-36, 35],\n            [-19, 2],\n            [-27, 29],\n            [-50, -6],\n            [-36, -21],\n            [-31, -20],\n            [-27, 4],\n            [-29, -30],\n            [-24, -14],\n            [-6, -31],\n            [-10, -24],\n            [-23, -1],\n            [-18, -5],\n            [-24, 10],\n            [-20, -6],\n            [-19, -3],\n            [-17, -31],\n            [-8, 2],\n            [-14, -16],\n            [-13, -19],\n            [-21, 2],\n            [-18, 0],\n            [-30, 38],\n            [-15, 11],\n            [1, 34],\n            [14, 8],\n            [4, 14],\n            [-1, 21],\n            [4, 41],\n            [-3, 35],\n            [-15, 60],\n            [-4, 33],\n            [1, 34],\n            [-11, 38],\n            [-1, 18],\n            [-12, 23],\n            [-4, 47],\n            [-16, 46],\n            [-4, 26],\n            [13, -26],\n            [-10, 55],\n            [14, -17],\n            [8, -23],\n            [0, 30],\n            [-14, 47],\n            [-3, 18],\n            [-6, 18],\n            [3, 34],\n            [6, 15],\n            [4, 29],\n            [-3, 35],\n            [11, 42],\n            [2, -45],\n            [12, 41],\n            [22, 20],\n            [14, 25],\n            [21, 22],\n            [13, 4],\n            [7, -7],\n            [22, 22],\n            [17, 6],\n            [4, 13],\n            [8, 6],\n            [15, -2],\n            [29, 18],\n            [15, 26],\n            [7, 31],\n            [17, 30],\n            [1, 24],\n            [1, 32],\n            [19, 50],\n            [12, -51],\n            [12, 12],\n            [-10, 28],\n            [9, 29],\n            [12, -13],\n            [3, 45],\n            [15, 29],\n            [7, 23],\n            [14, 10],\n            [0, 17],\n            [13, -7],\n            [0, 15],\n            [12, 8],\n            [14, 8],\n            [20, -27],\n            [16, -35],\n            [17, 0],\n            [18, -6],\n            [-6, 33],\n            [13, 47],\n            [13, 15],\n            [-5, 15],\n            [12, 34],\n            [17, 21],\n            [14, -7],\n            [24, 11],\n            [-1, 30],\n            [-20, 19],\n            [15, 9],\n            [18, -15],\n            [15, -24],\n            [23, -15],\n            [8, 6],\n            [17, -18],\n            [17, 17],\n            [10, -5],\n            [7, 11],\n            [12, -29],\n            [-7, -32],\n            [-11, -24],\n            [-9, -2],\n            [3, -23],\n            [-8, -30],\n            [-10, -29],\n            [2, -17],\n            [22, -32],\n            [21, -19],\n            [15, -20],\n            [20, -35],\n            [8, 0],\n            [14, -15],\n            [4, -19],\n            [27, -20],\n            [18, 20],\n            [6, 32],\n            [5, 26],\n            [4, 33],\n            [8, 47],\n            [-4, 28],\n            [2, 17],\n            [-3, 34],\n            [4, 45],\n            [5, 12],\n            [-4, 20],\n            [7, 31],\n            [5, 32],\n            [1, 17],\n            [10, 22],\n            [8, -29],\n            [2, -37],\n            [7, -7],\n            [1, -25],\n            [10, -30],\n            [2, -33],\n            [-1, -22]\n        ],\n        [\n            [5471, 7900],\n            [-2, -24],\n            [-16, 0],\n            [6, -13],\n            [-9, -38]\n        ],\n        [\n            [5450, 7825],\n            [-6, -10],\n            [-24, -1],\n            [-14, -13],\n            [-23, 4]\n        ],\n        [\n            [5383, 7805],\n            [-40, 15],\n            [-6, 21],\n            [-27, -10],\n            [-4, -12],\n            [-16, 9]\n        ],\n        [\n            [5290, 7828],\n            [-15, 1],\n            [-12, 11],\n            [4, 15],\n            [-1, 10]\n        ],\n        [\n            [5266, 7865],\n            [8, 3],\n            [14, -16],\n            [4, 16],\n            [25, -3],\n            [20, 11],\n            [13, -2],\n            [9, -12],\n            [2, 10],\n            [-4, 38],\n            [10, 8],\n            [10, 27]\n        ],\n        [\n            [5377, 7945],\n            [21, -19],\n            [15, 24],\n            [10, 5],\n            [22, -18],\n            [13, 3],\n            [13, -12]\n        ],\n        [\n            [5471, 7928],\n            [-3, -7],\n            [3, -21]\n        ],\n        [\n            [6281, 7346],\n            [-19, 8],\n            [-14, 27],\n            [-4, 23]\n        ],\n        [\n            [6349, 7527],\n            [15, -31],\n            [14, -42],\n            [13, -2],\n            [8, -16],\n            [-23, -5],\n            [-5, -46],\n            [-4, -21],\n            [-11, -13],\n            [1, -30]\n        ],\n        [\n            [6357, 7321],\n            [-7, -3],\n            [-17, 31],\n            [10, 30],\n            [-9, 17],\n            [-10, -4],\n            [-33, -44]\n        ],\n        [\n            [6249, 7494],\n            [6, 10],\n            [21, -17],\n            [15, -4],\n            [4, 7],\n            [-14, 32],\n            [7, 9]\n        ],\n        [\n            [6288, 7531],\n            [8, -2],\n            [19, -36],\n            [13, -4],\n            [4, 15],\n            [17, 23]\n        ],\n        [\n            [5814, 4792],\n            [-1, 71],\n            [-7, 27]\n        ],\n        [\n            [5806, 4890],\n            [17, -5],\n            [8, 34],\n            [15, -4]\n        ],\n        [\n            [5846, 4915],\n            [1, -23],\n            [6, -14],\n            [1, -19],\n            [-7, -12],\n            [-11, -31],\n            [-10, -22],\n            [-12, -2]\n        ],\n        [\n            [5092, 8091],\n            [20, -5],\n            [26, 12],\n            [17, -25],\n            [16, -14]\n        ],\n        [\n            [5171, 8059],\n            [-4, -40]\n        ],\n        [\n            [5167, 8019],\n            [-7, -2],\n            [-3, -33]\n        ],\n        [\n            [5157, 7984],\n            [-24, 26],\n            [-14, -4],\n            [-20, 28],\n            [-13, 23],\n            [-13, 1],\n            [-4, 21]\n        ],\n        [\n            [5069, 8079],\n            [23, 12]\n        ],\n        [\n            [5074, 5427],\n            [-23, -7]\n        ],\n        [\n            [5051, 5420],\n            [-7, 41],\n            [2, 136],\n            [-6, 12],\n            [-1, 29],\n            [-10, 21],\n            [-8, 17],\n            [3, 31]\n        ],\n        [\n            [5024, 5707],\n            [10, 7],\n            [6, 26],\n            [13, 5],\n            [6, 18]\n        ],\n        [\n            [5059, 5763],\n            [10, 17],\n            [10, 0],\n            [21, -34]\n        ],\n        [\n            [5100, 5746],\n            [-1, -19],\n            [6, -35],\n            [-6, -24],\n            [3, -16],\n            [-13, -37],\n            [-9, -18],\n            [-5, -37],\n            [1, -38],\n            [-2, -95]\n        ],\n        [\n            [4921, 5627],\n            [-19, 15],\n            [-13, -2],\n            [-10, -15],\n            [-12, 13],\n            [-5, 19],\n            [-13, 13]\n        ],\n        [\n            [4849, 5670],\n            [-1, 34],\n            [7, 26],\n            [-1, 20],\n            [23, 48],\n            [4, 41],\n            [7, 14],\n            [14, -8],\n            [11, 12],\n            [4, 16],\n            [22, 26],\n            [5, 19],\n            [26, 24],\n            [15, 9],\n            [7, -12],\n            [18, 0]\n        ],\n        [\n            [5010, 5939],\n            [-2, -28],\n            [3, -27],\n            [16, -39],\n            [1, -28],\n            [32, -14],\n            [-1, -40]\n        ],\n        [\n            [5024, 5707],\n            [-24, 1]\n        ],\n        [\n            [5000, 5708],\n            [-13, 5],\n            [-9, -9],\n            [-12, 4],\n            [-48, -3],\n            [-1, -33],\n            [4, -45]\n        ],\n        [\n            [7573, 6360],\n            [0, -43],\n            [-10, 9],\n            [2, -47]\n        ],\n        [\n            [7565, 6279],\n            [-8, 30],\n            [-1, 31],\n            [-6, 28],\n            [-11, 34],\n            [-26, 3],\n            [3, -25],\n            [-9, -32],\n            [-12, 12],\n            [-4, -11],\n            [-8, 6],\n            [-11, 5]\n        ],\n        [\n            [7472, 6360],\n            [-4, 49],\n            [-10, 45],\n            [5, 35],\n            [-17, 16],\n            [6, 22],\n            [18, 22],\n            [-20, 31],\n            [9, 40],\n            [22, -26],\n            [14, -3],\n            [2, -41],\n            [26, -8],\n            [26, 1],\n            [16, -10],\n            [-13, -50],\n            [-12, -3],\n            [-9, -34],\n            [16, -31],\n            [4, 38],\n            [8, 0],\n            [14, -93]\n        ],\n        [\n            [5629, 7671],\n            [8, -25],\n            [11, 5],\n            [21, -9],\n            [41, -4],\n            [13, 16],\n            [33, 13],\n            [20, -21],\n            [17, -6]\n        ],\n        [\n            [5793, 7640],\n            [-15, -25],\n            [-10, -42],\n            [9, -34]\n        ],\n        [\n            [5777, 7539],\n            [-24, 8],\n            [-28, -18]\n        ],\n        [\n            [5725, 7529],\n            [0, -30],\n            [-26, -5],\n            [-19, 20],\n            [-22, -16],\n            [-21, 2]\n        ],\n        [\n            [5637, 7500],\n            [-2, 39],\n            [-14, 19]\n        ],\n        [\n            [5621, 7558],\n            [5, 8],\n            [-3, 7],\n            [4, 19],\n            [11, 18],\n            [-14, 26],\n            [-2, 21],\n            [7, 14]\n        ],\n        [\n            [2846, 6461],\n            [-7, -3],\n            [-7, 34],\n            [-10, 17],\n            [6, 38],\n            [8, -3],\n            [10, -49],\n            [0, -34]\n        ],\n        [\n            [2838, 6628],\n            [-30, -10],\n            [-2, 22],\n            [13, 5],\n            [18, -2],\n            [1, -15]\n        ],\n        [\n            [2861, 6628],\n            [-5, -42],\n            [-5, 8],\n            [0, 31],\n            [-12, 23],\n            [0, 7],\n            [22, -27]\n        ],\n        [\n            [5527, 7708],\n            [10, 0],\n            [-7, -26],\n            [14, -23],\n            [-4, -28],\n            [-7, -2]\n        ],\n        [\n            [5533, 7629],\n            [-5, -6],\n            [-9, -13],\n            [-4, -33]\n        ],\n        [\n            [5515, 7577],\n            [-25, 23],\n            [-10, 24],\n            [-11, 13],\n            [-12, 22],\n            [-6, 19],\n            [-14, 27],\n            [6, 25],\n            [10, -14],\n            [6, 12],\n            [13, 2],\n            [24, -10],\n            [19, 1],\n            [12, -13]\n        ],\n        [\n            [5652, 8242],\n            [27, 0],\n            [30, 22],\n            [6, 34],\n            [23, 19],\n            [-3, 26]\n        ],\n        [\n            [5735, 8343],\n            [17, 10],\n            [30, 23]\n        ],\n        [\n            [5782, 8376],\n            [29, -15],\n            [4, -15],\n            [15, 7],\n            [27, -14],\n            [3, -27],\n            [-6, -16],\n            [17, -39],\n            [12, -11],\n            [-2, -11],\n            [19, -10],\n            [8, -16],\n            [-11, -13],\n            [-23, 2],\n            [-5, -5],\n            [7, -20],\n            [6, -37]\n        ],\n        [\n            [5882, 8136],\n            [-23, -4],\n            [-9, -13],\n            [-2, -30],\n            [-11, 6],\n            [-25, -3],\n            [-7, 14],\n            [-11, -10],\n            [-10, 8],\n            [-22, 1],\n            [-31, 15],\n            [-28, 4],\n            [-22, -1],\n            [-15, -16],\n            [-13, -2]\n        ],\n        [\n            [5653, 8105],\n            [-1, 26],\n            [-8, 27],\n            [17, 12],\n            [0, 24],\n            [-8, 22],\n            [-1, 26]\n        ],\n        [\n            [2524, 6110],\n            [-1, 8],\n            [4, 3],\n            [5, -7],\n            [10, 36],\n            [5, 0]\n        ],\n        [\n            [2547, 6150],\n            [0, -8],\n            [5, -1],\n            [0, -16],\n            [-5, -25],\n            [3, -9],\n            [-3, -21],\n            [2, -6],\n            [-4, -30],\n            [-5, -16],\n            [-5, -1],\n            [-6, -21]\n        ],\n        [\n            [2529, 5996],\n            [-8, 0],\n            [2, 67],\n            [1, 47]\n        ],\n        [\n            [3136, 3714],\n            [-20, -8],\n            [-11, 82],\n            [-15, 66],\n            [9, 57],\n            [-15, 25],\n            [-4, 43],\n            [-13, 40]\n        ],\n        [\n            [3067, 4019],\n            [17, 64],\n            [-12, 49],\n            [7, 20],\n            [-5, 22],\n            [10, 30],\n            [1, 50],\n            [1, 41],\n            [6, 20],\n            [-24, 96]\n        ],\n        [\n            [3068, 4411],\n            [21, -5],\n            [14, 1],\n            [6, 18],\n            [25, 24],\n            [14, 22],\n            [37, 10],\n            [-3, -44],\n            [3, -23],\n            [-2, -40],\n            [30, -53],\n            [31, -9],\n            [11, -23],\n            [19, -11],\n            [11, -17],\n            [18, 0],\n            [16, -17],\n            [1, -34],\n            [6, -18],\n            [0, -25],\n            [-8, -1],\n            [11, -69],\n            [53, -2],\n            [-4, -35],\n            [3, -23],\n            [15, -16],\n            [6, -37],\n            [-4, -47],\n            [-8, -26],\n            [3, -33],\n            [-9, -12]\n        ],\n        [\n            [3384, 3866],\n            [-1, 18],\n            [-25, 30],\n            [-26, 1],\n            [-49, -17],\n            [-13, -52],\n            [-1, -32],\n            [-11, -71]\n        ],\n        [\n            [3482, 3537],\n            [6, 34],\n            [3, 35],\n            [1, 32],\n            [-10, 11],\n            [-11, -9],\n            [-10, 2],\n            [-4, 23],\n            [-2, 54],\n            [-5, 18],\n            [-19, 16],\n            [-11, -12],\n            [-30, 11],\n            [2, 81],\n            [-8, 33]\n        ],\n        [\n            [3068, 4411],\n            [-15, -11],\n            [-13, 7],\n            [2, 90],\n            [-23, -35],\n            [-24, 2],\n            [-11, 31],\n            [-18, 4],\n            [5, 25],\n            [-15, 36],\n            [-11, 53],\n            [7, 11],\n            [0, 25],\n            [17, 17],\n            [-3, 32],\n            [7, 20],\n            [2, 28],\n            [32, 40],\n            [22, 11],\n            [4, 9],\n            [25, -2]\n        ],\n        [\n            [3058, 4804],\n            [13, 162],\n            [0, 25],\n            [-4, 34],\n            [-12, 22],\n            [0, 42],\n            [15, 10],\n            [6, -6],\n            [1, 23],\n            [-16, 6],\n            [-1, 37],\n            [54, -2],\n            [10, 21],\n            [7, -19],\n            [6, -35],\n            [5, 8]\n        ],\n        [\n            [3142, 5132],\n            [15, -32],\n            [22, 4],\n            [5, 18],\n            [21, 14],\n            [11, 10],\n            [4, 25],\n            [19, 17],\n            [-1, 12],\n            [-24, 5],\n            [-3, 37],\n            [1, 40],\n            [-13, 15],\n            [5, 6],\n            [21, -8],\n            [22, -15],\n            [8, 14],\n            [20, 9],\n            [31, 23],\n            [10, 22],\n            [-3, 17]\n        ],\n        [\n            [3313, 5365],\n            [14, 2],\n            [7, -13],\n            [-4, -26],\n            [9, -9],\n            [7, -28],\n            [-8, -20],\n            [-4, -51],\n            [7, -30],\n            [2, -27],\n            [17, -28],\n            [14, -3],\n            [3, 12],\n            [8, 3],\n            [13, 10],\n            [9, 16],\n            [15, -5],\n            [7, 2]\n        ],\n        [\n            [3429, 5170],\n            [15, -5],\n            [3, 12],\n            [-5, 12],\n            [3, 17],\n            [11, -5],\n            [13, 6],\n            [16, -13]\n        ],\n        [\n            [3485, 5194],\n            [12, -12],\n            [9, 16],\n            [6, -3],\n            [4, -16],\n            [13, 4],\n            [11, 22],\n            [8, 44],\n            [17, 54]\n        ],\n        [\n            [3565, 5303],\n            [9, 3],\n            [7, -33],\n            [16, -103],\n            [14, -10],\n            [1, -41],\n            [-21, -48],\n            [9, -18],\n            [49, -9],\n            [1, -60],\n            [21, 39],\n            [35, -21],\n            [46, -36],\n            [14, -35],\n            [-5, -32],\n            [33, 18],\n            [54, -32],\n            [41, 3],\n            [41, -49],\n            [36, -66],\n            [21, -17],\n            [24, -3],\n            [10, -18],\n            [9, -76],\n            [5, -35],\n            [-11, -98],\n            [-14, -39],\n            [-39, -82],\n            [-18, -67],\n            [-21, -51],\n            [-7, -1],\n            [-7, -43],\n            [2, -111],\n            [-8, -91],\n            [-3, -39],\n            [-9, -23],\n            [-5, -79],\n            [-28, -77],\n            [-5, -61],\n            [-22, -26],\n            [-7, -35],\n            [-30, 0],\n            [-44, -23],\n            [-19, -26],\n            [-31, -18],\n            [-33, -47],\n            [-23, -58],\n            [-5, -44],\n            [5, -33],\n            [-5, -60],\n            [-6, -28],\n            [-20, -33],\n            [-31, -104],\n            [-24, -47],\n            [-19, -27],\n            [-13, -57],\n            [-18, -33]\n        ],\n        [\n            [3517, 3063],\n            [-8, 33],\n            [13, 28],\n            [-16, 40],\n            [-22, 33],\n            [-29, 38],\n            [-10, -2],\n            [-28, 46],\n            [-18, -7]\n        ],\n        [\n            [8172, 5325],\n            [11, 22],\n            [23, 32]\n        ],\n        [\n            [8206, 5379],\n            [-1, -29],\n            [-2, -37],\n            [-13, 1],\n            [-6, -20],\n            [-12, 31]\n        ],\n        [\n            [7546, 6698],\n            [12, -19],\n            [-2, -36],\n            [-23, -2],\n            [-23, 4],\n            [-18, -9],\n            [-25, 22],\n            [-1, 12]\n        ],\n        [\n            [7466, 6670],\n            [19, 44],\n            [15, 15],\n            [20, -14],\n            [14, -1],\n            [12, -16]\n        ],\n        [\n            [5817, 3752],\n            [-39, -43],\n            [-25, -44],\n            [-10, -40],\n            [-8, -22],\n            [-15, -4],\n            [-5, -29],\n            [-3, -18],\n            [-17, -14],\n            [-23, 3],\n            [-13, 17],\n            [-12, 7],\n            [-14, -14],\n            [-6, -28],\n            [-14, -18],\n            [-13, -26],\n            [-20, -6],\n            [-6, 20],\n            [2, 36],\n            [-16, 56],\n            [-8, 9]\n        ],\n        [\n            [5552, 3594],\n            [0, 173],\n            [27, 2],\n            [1, 210],\n            [21, 2],\n            [43, 21],\n            [10, -24],\n            [18, 23],\n            [9, 0],\n            [15, 13]\n        ],\n        [\n            [5696, 4014],\n            [5, -4]\n        ],\n        [\n            [5701, 4010],\n            [11, -48],\n            [5, -10],\n            [9, -34],\n            [32, -65],\n            [12, -7],\n            [0, -20],\n            [8, -38],\n            [21, -9],\n            [18, -27]\n        ],\n        [\n            [5424, 5496],\n            [23, 4],\n            [5, 16],\n            [5, -2],\n            [7, -13],\n            [34, 23],\n            [12, 23],\n            [15, 20],\n            [-3, 21],\n            [8, 6],\n            [27, -4],\n            [26, 27],\n            [20, 65],\n            [14, 24],\n            [18, 10]\n        ],\n        [\n            [5635, 5716],\n            [3, -26],\n            [16, -36],\n            [0, -25],\n            [-5, -24],\n            [2, -18],\n            [10, -18]\n        ],\n        [\n            [5661, 5569],\n            [21, -25]\n        ],\n        [\n            [5682, 5544],\n            [15, -24],\n            [0, -19],\n            [19, -31],\n            [12, -26],\n            [7, -35],\n            [20, -24],\n            [5, -18]\n        ],\n        [\n            [5760, 5367],\n            [-9, -7],\n            [-18, 2],\n            [-21, 6],\n            [-10, -5],\n            [-5, -14],\n            [-9, -2],\n            [-10, 12],\n            [-31, -29],\n            [-13, 6],\n            [-4, -5],\n            [-8, -35],\n            [-21, 11],\n            [-20, 6],\n            [-18, 22],\n            [-23, 20],\n            [-15, -19],\n            [-10, -30],\n            [-3, -41]\n        ],\n        [\n            [5512, 5265],\n            [-18, 3],\n            [-19, 10],\n            [-16, -32],\n            [-15, -55]\n        ],\n        [\n            [5444, 5191],\n            [-3, 18],\n            [-1, 27],\n            [-13, 19],\n            [-10, 30],\n            [-2, 21],\n            [-13, 31],\n            [2, 18],\n            [-3, 25],\n            [2, 45],\n            [7, 11],\n            [14, 60]\n        ],\n        [\n            [3231, 7808],\n            [20, -8],\n            [26, 1],\n            [-14, -24],\n            [-10, -4],\n            [-35, 25],\n            [-7, 20],\n            [10, 18],\n            [10, -28]\n        ],\n        [\n            [3283, 7958],\n            [-14, -1],\n            [-36, 19],\n            [-26, 28],\n            [10, 5],\n            [37, -15],\n            [28, -25],\n            [1, -11]\n        ],\n        [\n            [1569, 7923],\n            [-14, -8],\n            [-46, 27],\n            [-8, 21],\n            [-25, 21],\n            [-5, 16],\n            [-28, 11],\n            [-11, 32],\n            [2, 14],\n            [30, -13],\n            [17, -9],\n            [26, -6],\n            [9, -21],\n            [14, -28],\n            [28, -24],\n            [11, -33]\n        ],\n        [\n            [3440, 8052],\n            [-18, -52],\n            [18, 20],\n            [19, -12],\n            [-10, -21],\n            [25, -16],\n            [12, 14],\n            [28, -18],\n            [-8, -43],\n            [19, 10],\n            [4, -32],\n            [8, -36],\n            [-11, -52],\n            [-13, -2],\n            [-18, 11],\n            [6, 48],\n            [-8, 8],\n            [-32, -52],\n            [-17, 2],\n            [20, 28],\n            [-27, 14],\n            [-30, -3],\n            [-54, 2],\n            [-4, 17],\n            [17, 21],\n            [-12, 16],\n            [24, 36],\n            [28, 94],\n            [18, 33],\n            [24, 21],\n            [13, -3],\n            [-6, -16],\n            [-15, -37]\n        ],\n        [\n            [1313, 8250],\n            [27, 5],\n            [-8, -67],\n            [24, -48],\n            [-11, 0],\n            [-17, 27],\n            [-10, 27],\n            [-14, 19],\n            [-5, 26],\n            [1, 19],\n            [13, -8]\n        ],\n        [\n            [2798, 8730],\n            [-11, -31],\n            [-12, 5],\n            [-8, 17],\n            [2, 4],\n            [10, 18],\n            [12, -1],\n            [7, -12]\n        ],\n        [\n            [2725, 8762],\n            [-33, -32],\n            [-19, 1],\n            [-6, 16],\n            [20, 27],\n            [38, 0],\n            [0, -12]\n        ],\n        [\n            [2634, 8936],\n            [5, -26],\n            [15, 9],\n            [16, -15],\n            [30, -20],\n            [32, -19],\n            [2, -28],\n            [21, 5],\n            [20, -20],\n            [-25, -18],\n            [-43, 14],\n            [-16, 26],\n            [-27, -31],\n            [-40, -31],\n            [-9, 35],\n            [-38, -6],\n            [24, 30],\n            [4, 46],\n            [9, 54],\n            [20, -5]\n        ],\n        [\n            [2892, 9024],\n            [-31, -3],\n            [-7, 29],\n            [12, 34],\n            [26, 8],\n            [21, -17],\n            [1, -25],\n            [-4, -8],\n            [-18, -18]\n        ],\n        [\n            [2343, 9140],\n            [-17, -21],\n            [-38, 18],\n            [-22, -6],\n            [-38, 26],\n            [24, 19],\n            [19, 25],\n            [30, -16],\n            [17, -11],\n            [8, -11],\n            [17, -23]\n        ],\n        [\n            [3135, 7724],\n            [-18, 33],\n            [0, 81],\n            [-13, 17],\n            [-18, -10],\n            [-10, 16],\n            [-21, -45],\n            [-8, -46],\n            [-10, -27],\n            [-12, -9],\n            [-9, -3],\n            [-3, -15],\n            [-51, 0],\n            [-42, 0],\n            [-12, -11],\n            [-30, -42],\n            [-3, -5],\n            [-9, -23],\n            [-26, 0],\n            [-27, 0],\n            [-12, -10],\n            [4, -11],\n            [2, -18],\n            [0, -6],\n            [-36, -30],\n            [-29, -9],\n            [-32, -31],\n            [-7, 0],\n            [-10, 9],\n            [-3, 8],\n            [1, 6],\n            [6, 21],\n            [13, 33],\n            [8, 35],\n            [-5, 51],\n            [-6, 53],\n            [-29, 28],\n            [3, 11],\n            [-4, 7],\n            [-8, 0],\n            [-5, 9],\n            [-2, 14],\n            [-5, -6],\n            [-7, 2],\n            [1, 6],\n            [-6, 6],\n            [-3, 15],\n            [-21, 19],\n            [-23, 20],\n            [-27, 23],\n            [-26, 21],\n            [-25, -17],\n            [-9, 0],\n            [-34, 15],\n            [-23, -8],\n            [-27, 19],\n            [-28, 9],\n            [-19, 4],\n            [-9, 10],\n            [-5, 32],\n            [-9, 0],\n            [-1, -23],\n            [-57, 0],\n            [-95, 0],\n            [-94, 0],\n            [-84, 0],\n            [-83, 0],\n            [-82, 0],\n            [-85, 0],\n            [-27, 0],\n            [-82, 0],\n            [-79, 0]\n        ],\n        [\n            [1588, 7952],\n            [-4, 0],\n            [-54, 58],\n            [-20, 26],\n            [-50, 24],\n            [-15, 53],\n            [3, 36],\n            [-35, 25],\n            [-5, 48],\n            [-34, 43],\n            [0, 30]\n        ],\n        [\n            [1374, 8295],\n            [15, 29],\n            [0, 37],\n            [-48, 37],\n            [-28, 68],\n            [-17, 42],\n            [-26, 27],\n            [-19, 24],\n            [-14, 31],\n            [-28, -20],\n            [-27, -33],\n            [-25, 39],\n            [-19, 26],\n            [-27, 16],\n            [-28, 2],\n            [0, 337],\n            [1, 219]\n        ],\n        [\n            [1084, 9176],\n            [51, -14],\n            [44, -29],\n            [29, -5],\n            [24, 24],\n            [34, 19],\n            [41, -7],\n            [42, 26],\n            [45, 14],\n            [20, -24],\n            [20, 14],\n            [6, 27],\n            [20, -6],\n            [47, -53],\n            [37, 40],\n            [3, -45],\n            [34, 10],\n            [11, 17],\n            [34, -3],\n            [42, -25],\n            [65, -22],\n            [38, -10],\n            [28, 4],\n            [37, -30],\n            [-39, -29],\n            [50, -13],\n            [75, 7],\n            [24, 11],\n            [29, -36],\n            [31, 30],\n            [-29, 25],\n            [18, 20],\n            [34, 3],\n            [22, 6],\n            [23, -14],\n            [28, -32],\n            [31, 5],\n            [49, -27],\n            [43, 9],\n            [40, -1],\n            [-3, 37],\n            [25, 10],\n            [43, -20],\n            [0, -56],\n            [17, 47],\n            [23, -1],\n            [12, 59],\n            [-30, 36],\n            [-32, 24],\n            [2, 65],\n            [33, 43],\n            [37, -9],\n            [28, -26],\n            [38, -67],\n            [-25, -29],\n            [52, -12],\n            [-1, -60],\n            [38, 46],\n            [33, -38],\n            [-9, -44],\n            [27, -40],\n            [29, 43],\n            [21, 51],\n            [1, 65],\n            [40, -5],\n            [41, -8],\n            [37, -30],\n            [2, -29],\n            [-21, -31],\n            [20, -32],\n            [-4, -29],\n            [-54, -41],\n            [-39, -9],\n            [-29, 18],\n            [-8, -30],\n            [-27, -50],\n            [-8, -26],\n            [-32, -40],\n            [-40, -4],\n            [-22, -25],\n            [-2, -38],\n            [-32, -7],\n            [-34, -48],\n            [-30, -67],\n            [-11, -46],\n            [-1, -69],\n            [40, -10],\n            [13, -55],\n            [13, -45],\n            [39, 12],\n            [51, -26],\n            [28, -22],\n            [20, -28],\n            [35, -17],\n            [29, -24],\n            [46, -4],\n            [30, -6],\n            [-4, -51],\n            [8, -59],\n            [21, -66],\n            [41, -56],\n            [21, 19],\n            [15, 61],\n            [-14, 93],\n            [-20, 31],\n            [45, 28],\n            [31, 41],\n            [16, 41],\n            [-3, 40],\n            [-19, 50],\n            [-33, 44],\n            [32, 62],\n            [-12, 54],\n            [-9, 92],\n            [19, 14],\n            [48, -16],\n            [29, -6],\n            [23, 15],\n            [25, -20],\n            [35, -34],\n            [8, -23],\n            [50, -4],\n            [-1, -50],\n            [9, -74],\n            [25, -10],\n            [21, -35],\n            [40, 33],\n            [26, 65],\n            [19, 28],\n            [21, -53],\n            [36, -75],\n            [31, -71],\n            [-11, -37],\n            [37, -33],\n            [25, -34],\n            [44, -15],\n            [18, -19],\n            [11, -50],\n            [22, -8],\n            [11, -22],\n            [2, -67],\n            [-20, -22],\n            [-20, -21],\n            [-46, -21],\n            [-35, -48],\n            [-47, -10],\n            [-59, 13],\n            [-42, 0],\n            [-29, -4],\n            [-23, -43],\n            [-35, -26],\n            [-40, -78],\n            [-32, -54],\n            [23, 9],\n            [45, 78],\n            [58, 49],\n            [42, 6],\n            [24, -29],\n            [-26, -40],\n            [9, -63],\n            [9, -45],\n            [36, -29],\n            [46, 8],\n            [28, 67],\n            [2, -43],\n            [17, -22],\n            [-34, -38],\n            [-61, -36],\n            [-28, -23],\n            [-31, -43],\n            [-21, 4],\n            [-1, 50],\n            [48, 49],\n            [-44, -2],\n            [-31, -7]\n        ],\n        [\n            [1829, 9377],\n            [-14, -27],\n            [61, 17],\n            [39, -29],\n            [31, 30],\n            [26, -20],\n            [23, -58],\n            [14, 25],\n            [-20, 60],\n            [24, 9],\n            [28, -9],\n            [31, -24],\n            [17, -58],\n            [9, -41],\n            [47, -30],\n            [50, -28],\n            [-3, -26],\n            [-46, -4],\n            [18, -23],\n            [-9, -22],\n            [-51, 9],\n            [-48, 16],\n            [-32, -3],\n            [-52, -20],\n            [-70, -9],\n            [-50, -6],\n            [-15, 28],\n            [-38, 16],\n            [-24, -6],\n            [-35, 47],\n            [19, 6],\n            [43, 10],\n            [39, -3],\n            [36, 11],\n            [-54, 13],\n            [-59, -4],\n            [-39, 1],\n            [-15, 22],\n            [64, 23],\n            [-42, -1],\n            [-49, 16],\n            [23, 44],\n            [20, 24],\n            [74, 36],\n            [29, -12]\n        ],\n        [\n            [2097, 9395],\n            [-24, -39],\n            [-44, 41],\n            [10, 9],\n            [37, 2],\n            [21, -13]\n        ],\n        [\n            [2879, 9376],\n            [3, -16],\n            [-30, 2],\n            [-30, 1],\n            [-30, -8],\n            [-8, 3],\n            [-31, 32],\n            [1, 21],\n            [14, 4],\n            [63, -6],\n            [48, -33]\n        ],\n        [\n            [2595, 9379],\n            [22, -36],\n            [26, 47],\n            [70, 24],\n            [48, -61],\n            [-4, -38],\n            [55, 17],\n            [26, 23],\n            [62, -30],\n            [38, -28],\n            [3, -25],\n            [52, 13],\n            [29, -38],\n            [67, -23],\n            [24, -24],\n            [26, -55],\n            [-51, -28],\n            [66, -38],\n            [44, -13],\n            [40, -55],\n            [44, -3],\n            [-9, -42],\n            [-49, -69],\n            [-34, 26],\n            [-44, 57],\n            [-36, -8],\n            [-3, -34],\n            [29, -34],\n            [38, -27],\n            [11, -16],\n            [18, -58],\n            [-9, -43],\n            [-35, 16],\n            [-70, 47],\n            [39, -51],\n            [29, -35],\n            [5, -21],\n            [-76, 24],\n            [-59, 34],\n            [-34, 29],\n            [10, 17],\n            [-42, 30],\n            [-40, 29],\n            [0, -18],\n            [-80, -9],\n            [-23, 20],\n            [18, 44],\n            [52, 1],\n            [57, 7],\n            [-9, 21],\n            [10, 30],\n            [36, 57],\n            [-8, 27],\n            [-11, 20],\n            [-42, 29],\n            [-57, 20],\n            [18, 15],\n            [-29, 36],\n            [-25, 4],\n            [-22, 20],\n            [-14, -18],\n            [-51, -7],\n            [-101, 13],\n            [-59, 17],\n            [-45, 9],\n            [-23, 21],\n            [29, 27],\n            [-39, 0],\n            [-9, 60],\n            [21, 53],\n            [29, 24],\n            [72, 16],\n            [-21, -39]\n        ],\n        [\n            [2212, 9420],\n            [33, -12],\n            [50, 7],\n            [7, -17],\n            [-26, -28],\n            [42, -26],\n            [-5, -53],\n            [-45, -23],\n            [-27, 5],\n            [-19, 23],\n            [-69, 45],\n            [0, 19],\n            [57, -7],\n            [-31, 38],\n            [33, 29]\n        ],\n        [\n            [2411, 9357],\n            [-30, -45],\n            [-32, 3],\n            [-17, 52],\n            [1, 29],\n            [14, 25],\n            [28, 16],\n            [58, -2],\n            [53, -14],\n            [-42, -53],\n            [-33, -11]\n        ],\n        [\n            [1654, 9275],\n            [-73, -29],\n            [-15, 26],\n            [-64, 31],\n            [12, 25],\n            [19, 43],\n            [24, 39],\n            [-27, 36],\n            [94, 10],\n            [39, -13],\n            [71, -3],\n            [27, -17],\n            [30, -25],\n            [-35, -15],\n            [-68, -41],\n            [-34, -42],\n            [0, -25]\n        ],\n        [\n            [2399, 9487],\n            [-15, -23],\n            [-40, 5],\n            [-34, 15],\n            [15, 27],\n            [40, 16],\n            [24, -21],\n            [10, -19]\n        ],\n        [\n            [2264, 9590],\n            [21, -27],\n            [1, -31],\n            [-13, -44],\n            [-46, -6],\n            [-30, 10],\n            [1, 34],\n            [-45, -4],\n            [-2, 45],\n            [30, -2],\n            [41, 21],\n            [40, -4],\n            [2, 8]\n        ],\n        [\n            [1994, 9559],\n            [11, -21],\n            [25, 10],\n            [29, -2],\n            [5, -29],\n            [-17, -28],\n            [-94, -10],\n            [-70, -25],\n            [-43, -2],\n            [-3, 20],\n            [57, 26],\n            [-125, -7],\n            [-39, 10],\n            [38, 58],\n            [26, 17],\n            [78, -20],\n            [50, -35],\n            [48, -5],\n            [-40, 57],\n            [26, 21],\n            [29, -7],\n            [9, -28]\n        ],\n        [\n            [2370, 9612],\n            [30, -19],\n            [55, 0],\n            [24, -19],\n            [-6, -22],\n            [32, -14],\n            [17, -14],\n            [38, -2],\n            [40, -5],\n            [44, 13],\n            [57, 5],\n            [45, -5],\n            [30, -22],\n            [6, -24],\n            [-17, -16],\n            [-42, -13],\n            [-35, 8],\n            [-80, -10],\n            [-57, -1],\n            [-45, 8],\n            [-74, 19],\n            [-9, 32],\n            [-4, 29],\n            [-27, 26],\n            [-58, 7],\n            [-32, 19],\n            [10, 24],\n            [58, -4]\n        ],\n        [\n            [1772, 9645],\n            [-4, -46],\n            [-21, -20],\n            [-26, -3],\n            [-52, -26],\n            [-44, -9],\n            [-38, 13],\n            [47, 44],\n            [57, 39],\n            [43, -1],\n            [38, 9]\n        ],\n        [\n            [2393, 9637],\n            [-13, -2],\n            [-52, 4],\n            [-7, 17],\n            [56, -1],\n            [19, -11],\n            [-3, -7]\n        ],\n        [\n            [1939, 9648],\n            [-52, -17],\n            [-41, 19],\n            [23, 19],\n            [40, 6],\n            [39, -10],\n            [-9, -17]\n        ],\n        [\n            [1954, 9701],\n            [-34, -11],\n            [-46, 0],\n            [0, 8],\n            [29, 18],\n            [14, -3],\n            [37, -12]\n        ],\n        [\n            [2338, 9669],\n            [-41, -12],\n            [-23, 13],\n            [-12, 23],\n            [-2, 24],\n            [36, -2],\n            [16, -4],\n            [33, -21],\n            [-7, -21]\n        ],\n        [\n            [2220, 9685],\n            [11, -25],\n            [-45, 7],\n            [-46, 19],\n            [-62, 2],\n            [27, 18],\n            [-34, 14],\n            [-2, 22],\n            [55, -8],\n            [75, -21],\n            [21, -28]\n        ],\n        [\n            [2583, 9764],\n            [33, -20],\n            [-38, -17],\n            [-51, -45],\n            [-50, -4],\n            [-57, 8],\n            [-30, 24],\n            [0, 21],\n            [22, 16],\n            [-50, 0],\n            [-31, 19],\n            [-18, 27],\n            [20, 26],\n            [19, 18],\n            [28, 4],\n            [-12, 14],\n            [65, 3],\n            [35, -32],\n            [47, -12],\n            [46, -11],\n            [22, -39]\n        ],\n        [\n            [3097, 9967],\n            [74, -4],\n            [60, -8],\n            [51, -16],\n            [-2, -16],\n            [-67, -25],\n            [-68, -12],\n            [-25, -14],\n            [61, 1],\n            [-66, -36],\n            [-45, -17],\n            [-48, -48],\n            [-57, -10],\n            [-18, -12],\n            [-84, -6],\n            [39, -8],\n            [-20, -10],\n            [23, -29],\n            [-26, -21],\n            [-43, -16],\n            [-13, -24],\n            [-39, -17],\n            [4, -14],\n            [48, 3],\n            [0, -15],\n            [-74, -35],\n            [-73, 16],\n            [-81, -9],\n            [-42, 7],\n            [-52, 3],\n            [-4, 29],\n            [52, 13],\n            [-14, 43],\n            [17, 4],\n            [74, -26],\n            [-38, 38],\n            [-45, 11],\n            [23, 23],\n            [49, 14],\n            [8, 21],\n            [-39, 23],\n            [-12, 31],\n            [76, -3],\n            [22, -6],\n            [43, 21],\n            [-62, 7],\n            [-98, -4],\n            [-49, 20],\n            [-23, 24],\n            [-32, 17],\n            [-6, 21],\n            [41, 11],\n            [32, 2],\n            [55, 9],\n            [41, 22],\n            [34, -3],\n            [30, -16],\n            [21, 32],\n            [37, 9],\n            [50, 7],\n            [85, 2],\n            [14, -6],\n            [81, 10],\n            [60, -4],\n            [60, -4]\n        ],\n        [\n            [5290, 7828],\n            [-3, -24],\n            [-12, -10],\n            [-20, 7],\n            [-6, -24],\n            [-14, -2],\n            [-5, 10],\n            [-15, -20],\n            [-13, -3],\n            [-12, 13]\n        ],\n        [\n            [5190, 7775],\n            [-10, 25],\n            [-13, -9],\n            [0, 27],\n            [21, 33],\n            [-1, 15],\n            [12, -5],\n            [8, 10]\n        ],\n        [\n            [5207, 7871],\n            [24, -1],\n            [5, 13],\n            [30, -18]\n        ],\n        [\n            [3140, 1814],\n            [-10, -24],\n            [-23, -18],\n            [-14, 2],\n            [-16, 5],\n            [-21, 18],\n            [-29, 8],\n            [-35, 33],\n            [-28, 32],\n            [-38, 66],\n            [23, -12],\n            [39, -40],\n            [36, -21],\n            [15, 27],\n            [9, 41],\n            [25, 24],\n            [20, -7]\n        ],\n        [\n            [3095, 1968],\n            [-25, 0],\n            [-13, -14],\n            [-25, -22],\n            [-5, -55],\n            [-11, -1],\n            [-32, 19],\n            [-32, 41],\n            [-34, 34],\n            [-9, 37],\n            [8, 35],\n            [-14, 39],\n            [-4, 101],\n            [12, 57],\n            [30, 45],\n            [-43, 18],\n            [27, 52],\n            [9, 98],\n            [31, -21],\n            [15, 123],\n            [-19, 15],\n            [-9, -73],\n            [-17, 8],\n            [9, 84],\n            [9, 110],\n            [13, 40],\n            [-8, 58],\n            [-2, 66],\n            [11, 2],\n            [17, 96],\n            [20, 94],\n            [11, 88],\n            [-6, 89],\n            [8, 49],\n            [-3, 72],\n            [16, 73],\n            [5, 114],\n            [9, 123],\n            [9, 132],\n            [-2, 96],\n            [-6, 84]\n        ],\n        [\n            [3045, 3974],\n            [14, 15],\n            [8, 30]\n        ],\n        [\n            [8064, 6161],\n            [-24, -28],\n            [-23, 18],\n            [0, 51],\n            [13, 26],\n            [31, 17],\n            [16, -1],\n            [6, -23],\n            [-12, -26],\n            [-7, -34]\n        ],\n        [\n            [8628, 7562],\n            [-18, 35],\n            [-11, -33],\n            [-43, -26],\n            [4, -31],\n            [-24, 2],\n            [-13, 19],\n            [-19, -42],\n            [-30, -32],\n            [-23, -38]\n        ],\n        [\n            [8451, 7416],\n            [-39, -17],\n            [-20, -27],\n            [-30, -17],\n            [15, 28],\n            [-6, 23],\n            [22, 40],\n            [-15, 30],\n            [-24, -20],\n            [-32, -41],\n            [-17, -39],\n            [-27, -2],\n            [-14, -28],\n            [15, -40],\n            [22, -10],\n            [1, -26],\n            [22, -17],\n            [31, 42],\n            [25, -23],\n            [18, -2],\n            [4, -31],\n            [-39, -16],\n            [-13, -32],\n            [-27, -30],\n            [-14, -41],\n            [30, -33],\n            [11, -58],\n            [17, -54],\n            [18, -45],\n            [0, -44],\n            [-17, -16],\n            [6, -32],\n            [17, -18],\n            [-5, -48],\n            [-7, -47],\n            [-15, -5],\n            [-21, -64],\n            [-22, -78],\n            [-26, -70],\n            [-38, -55],\n            [-39, -50],\n            [-31, -6],\n            [-17, -27],\n            [-10, 20],\n            [-15, -30],\n            [-39, -29],\n            [-29, -9],\n            [-10, -63],\n            [-15, -3],\n            [-8, 43],\n            [7, 22],\n            [-37, 19],\n            [-13, -9]\n        ],\n        [\n            [8001, 6331],\n            [-28, 15],\n            [-14, 24],\n            [5, 34],\n            [-26, 11],\n            [-13, 22],\n            [-24, -31],\n            [-27, -7],\n            [-22, 0],\n            [-15, -14]\n        ],\n        [\n            [7837, 6385],\n            [-14, -9],\n            [4, -68],\n            [-15, 2],\n            [-2, 14]\n        ],\n        [\n            [7810, 6324],\n            [-1, 24],\n            [-20, -17],\n            [-12, 11],\n            [-21, 22],\n            [8, 49],\n            [-18, 12],\n            [-6, 54],\n            [-30, -10],\n            [4, 70],\n            [26, 50],\n            [1, 48],\n            [-1, 46],\n            [-12, 14],\n            [-9, 35],\n            [-16, -5]\n        ],\n        [\n            [7703, 6727],\n            [-30, 9],\n            [9, 25],\n            [-13, 36],\n            [-20, -24],\n            [-23, 14],\n            [-32, -37],\n            [-25, -44],\n            [-23, -8]\n        ],\n        [\n            [7466, 6670],\n            [-2, 47],\n            [-17, -13]\n        ],\n        [\n            [7447, 6704],\n            [-32, 6],\n            [-32, 14],\n            [-22, 26],\n            [-22, 11],\n            [-9, 29],\n            [-16, 8],\n            [-28, 39],\n            [-22, 18],\n            [-12, -14]\n        ],\n        [\n            [7252, 6841],\n            [-38, 41],\n            [-28, 37],\n            [-7, 65],\n            [20, -7],\n            [1, 30],\n            [-12, 30],\n            [3, 48],\n            [-30, 69]\n        ],\n        [\n            [7161, 7154],\n            [-45, 24],\n            [-8, 46],\n            [-21, 27]\n        ],\n        [\n            [7082, 7268],\n            [-4, 34],\n            [1, 23],\n            [-17, 13],\n            [-9, -6],\n            [-7, 55]\n        ],\n        [\n            [7046, 7387],\n            [8, 13],\n            [-4, 14],\n            [26, 28],\n            [20, 12],\n            [29, -8],\n            [11, 38],\n            [35, 7],\n            [10, 23],\n            [44, 32],\n            [4, 13]\n        ],\n        [\n            [7229, 7559],\n            [-2, 34],\n            [19, 15],\n            [-25, 103],\n            [55, 24],\n            [14, 13],\n            [20, 106],\n            [55, -20],\n            [15, 27],\n            [2, 59],\n            [23, 6],\n            [21, 39]\n        ],\n        [\n            [7426, 7965],\n            [11, 5]\n        ],\n        [\n            [7437, 7970],\n            [7, -41],\n            [23, -32],\n            [40, -22],\n            [19, -47],\n            [-10, -70],\n            [10, -25],\n            [33, -10],\n            [37, -8],\n            [33, -37],\n            [18, -7],\n            [12, -54],\n            [17, -35],\n            [30, 1],\n            [58, -13],\n            [36, 8],\n            [28, -9],\n            [41, -36],\n            [34, 0],\n            [12, -18],\n            [32, 32],\n            [45, 20],\n            [42, 2],\n            [32, 21],\n            [20, 32],\n            [20, 20],\n            [-5, 19],\n            [-9, 23],\n            [15, 38],\n            [15, -5],\n            [29, -12],\n            [28, 31],\n            [42, 23],\n            [20, 39],\n            [20, 17],\n            [40, 8],\n            [22, -7],\n            [3, 21],\n            [-25, 41],\n            [-22, 19],\n            [-22, -22],\n            [-27, 10],\n            [-16, -8],\n            [-7, 24],\n            [20, 59],\n            [13, 45]\n        ],\n        [\n            [8240, 8005],\n            [34, -23],\n            [39, 38],\n            [-1, 26],\n            [26, 62],\n            [15, 19],\n            [0, 33],\n            [-16, 14],\n            [23, 29],\n            [35, 11],\n            [37, 2],\n            [41, -18],\n            [25, -22],\n            [17, -59],\n            [10, -26],\n            [10, -36],\n            [10, -58],\n            [49, -19],\n            [32, -42],\n            [12, -55],\n            [42, 0],\n            [24, 23],\n            [46, 17],\n            [-15, -53],\n            [-11, -21],\n            [-9, -65],\n            [-19, -58],\n            [-33, 11],\n            [-24, -21],\n            [7, -51],\n            [-4, -69],\n            [-14, -2],\n            [0, -30]\n        ],\n        [\n            [4920, 5353],\n            [-12, -1],\n            [-20, 12],\n            [-18, -1],\n            [-33, -10],\n            [-19, -18],\n            [-27, -21],\n            [-6, 1]\n        ],\n        [\n            [4785, 5315],\n            [2, 49],\n            [3, 7],\n            [-1, 24],\n            [-12, 24],\n            [-8, 4],\n            [-8, 17],\n            [6, 26],\n            [-3, 28],\n            [1, 18]\n        ],\n        [\n            [4765, 5512],\n            [5, 0],\n            [1, 25],\n            [-2, 12],\n            [3, 8],\n            [10, 7],\n            [-7, 47],\n            [-6, 25],\n            [2, 20],\n            [5, 4]\n        ],\n        [\n            [4776, 5660],\n            [4, 6],\n            [8, -9],\n            [21, -1],\n            [5, 18],\n            [5, -1],\n            [8, 6],\n            [4, -25],\n            [7, 7],\n            [11, 9]\n        ],\n        [\n            [4921, 5627],\n            [7, -84],\n            [-11, -50],\n            [-8, -66],\n            [12, -51],\n            [-1, -23]\n        ],\n        [\n            [5363, 5191],\n            [-4, 4],\n            [-16, -8],\n            [-17, 8],\n            [-13, -4]\n        ],\n        [\n            [5313, 5191],\n            [-45, 1]\n        ],\n        [\n            [5268, 5192],\n            [4, 47],\n            [-11, 39],\n            [-13, 10],\n            [-6, 27],\n            [-7, 8],\n            [1, 16]\n        ],\n        [\n            [5236, 5339],\n            [7, 42],\n            [13, 57],\n            [8, 1],\n            [17, 34],\n            [10, 1],\n            [16, -24],\n            [19, 20],\n            [2, 25],\n            [7, 23],\n            [4, 30],\n            [15, 25],\n            [5, 41],\n            [6, 13],\n            [4, 31],\n            [7, 37],\n            [24, 46],\n            [1, 20],\n            [3, 10],\n            [-11, 24]\n        ],\n        [\n            [5393, 5795],\n            [1, 19],\n            [8, 3]\n        ],\n        [\n            [5402, 5817],\n            [11, -38],\n            [2, -39],\n            [-1, -39],\n            [15, -54],\n            [-15, 1],\n            [-8, -4],\n            [-13, 6],\n            [-6, -28],\n            [16, -35],\n            [13, -10],\n            [3, -24],\n            [9, -41],\n            [-4, -16]\n        ],\n        [\n            [5444, 5191],\n            [-2, -31],\n            [-22, 14],\n            [-22, 15],\n            [-35, 2]\n        ],\n        [\n            [5856, 5265],\n            [-2, -69],\n            [11, -8],\n            [-9, -21],\n            [-10, -16],\n            [-11, -31],\n            [-6, -27],\n            [-1, -48],\n            [-7, -22],\n            [0, -45]\n        ],\n        [\n            [5821, 4978],\n            [-8, -16],\n            [-1, -35],\n            [-4, -5],\n            [-2, -32]\n        ],\n        [\n            [5814, 4792],\n            [5, -55],\n            [-2, -30],\n            [5, -35],\n            [16, -33],\n            [15, -74]\n        ],\n        [\n            [5853, 4565],\n            [-11, 6],\n            [-37, -10],\n            [-7, -7],\n            [-8, -38],\n            [6, -26],\n            [-5, -70],\n            [-3, -59],\n            [7, -11],\n            [19, -23],\n            [8, 11],\n            [2, -64],\n            [-21, 1],\n            [-11, 32],\n            [-10, 25],\n            [-22, 9],\n            [-6, 31],\n            [-17, -19],\n            [-22, 8],\n            [-10, 27],\n            [-17, 6],\n            [-13, -2],\n            [-2, 19],\n            [-9, 1]\n        ],\n        [\n            [5342, 4697],\n            [-4, 18]\n        ],\n        [\n            [5360, 4775],\n            [8, -6],\n            [9, 23],\n            [15, -1],\n            [2, -17],\n            [11, -10],\n            [16, 37],\n            [16, 29],\n            [7, 19],\n            [-1, 48],\n            [12, 58],\n            [13, 30],\n            [18, 29],\n            [3, 18],\n            [1, 22],\n            [5, 21],\n            [-2, 33],\n            [4, 52],\n            [5, 37],\n            [8, 32],\n            [2, 36]\n        ],\n        [\n            [5760, 5367],\n            [17, -49],\n            [12, -7],\n            [8, 10],\n            [12, -4],\n            [16, 12],\n            [6, -25],\n            [25, -39]\n        ],\n        [\n            [5330, 4760],\n            [-22, 62]\n        ],\n        [\n            [5308, 4822],\n            [21, 33],\n            [-11, 39],\n            [10, 15],\n            [19, 7],\n            [2, 26],\n            [15, -28],\n            [24, -2],\n            [9, 27],\n            [3, 40],\n            [-3, 46],\n            [-13, 35],\n            [12, 68],\n            [-7, 12],\n            [-21, -5],\n            [-7, 31],\n            [2, 25]\n        ],\n        [\n            [2906, 5049],\n            [-12, 14],\n            [-14, 19],\n            [-7, -9],\n            [-24, 8],\n            [-7, 25],\n            [-5, -1],\n            [-28, 34]\n        ],\n        [\n            [2809, 5139],\n            [-3, 18],\n            [10, 5],\n            [-1, 29],\n            [6, 22],\n            [14, 4],\n            [12, 37],\n            [10, 31],\n            [-10, 14],\n            [5, 34],\n            [-6, 54],\n            [6, 16],\n            [-4, 50],\n            [-12, 31]\n        ],\n        [\n            [2836, 5484],\n            [4, 29],\n            [9, -4],\n            [5, 17],\n            [-6, 35],\n            [3, 9]\n        ],\n        [\n            [2851, 5570],\n            [14, -2],\n            [21, 41],\n            [12, 6],\n            [0, 20],\n            [5, 50],\n            [16, 27],\n            [17, 1],\n            [3, 13],\n            [21, -5],\n            [22, 30],\n            [11, 13],\n            [14, 28],\n            [9, -3],\n            [8, -16],\n            [-6, -20]\n        ],\n        [\n            [3018, 5753],\n            [-18, -10],\n            [-7, -29],\n            [-10, -17],\n            [-8, -22],\n            [-4, -42],\n            [-8, -35],\n            [15, -4],\n            [3, -27],\n            [6, -13],\n            [3, -24],\n            [-4, -22],\n            [1, -12],\n            [7, -5],\n            [7, -20],\n            [36, 5],\n            [16, -7],\n            [19, -51],\n            [11, 6],\n            [20, -3],\n            [16, 7],\n            [10, -10],\n            [-5, -32],\n            [-6, -20],\n            [-2, -42],\n            [5, -40],\n            [8, -17],\n            [1, -13],\n            [-14, -30],\n            [10, -13],\n            [8, -21],\n            [8, -58]\n        ],\n        [\n            [3058, 4804],\n            [-14, 31],\n            [-8, 1],\n            [18, 61],\n            [-21, 27],\n            [-17, -5],\n            [-10, 10],\n            [-15, -15],\n            [-21, 7],\n            [-16, 62],\n            [-13, 15],\n            [-9, 28],\n            [-19, 28],\n            [-7, -5]\n        ],\n        [\n            [2695, 5543],\n            [-15, 14],\n            [-6, 12],\n            [4, 10],\n            [-1, 13],\n            [-8, 14],\n            [-11, 12],\n            [-10, 8],\n            [-1, 17],\n            [-8, 10],\n            [2, -17],\n            [-5, -14],\n            [-7, 17],\n            [-9, 5],\n            [-4, 12],\n            [1, 18],\n            [3, 19],\n            [-8, 8],\n            [7, 12]\n        ],\n        [\n            [2619, 5713],\n            [4, 7],\n            [18, -15],\n            [7, 7],\n            [9, -5],\n            [4, -12],\n            [8, -4],\n            [7, 13]\n        ],\n        [\n            [2676, 5704],\n            [7, -32],\n            [11, -24],\n            [13, -25]\n        ],\n        [\n            [2707, 5623],\n            [-11, -6],\n            [0, -23],\n            [6, -9],\n            [-4, -7],\n            [1, -11],\n            [-2, -12],\n            [-2, -12]\n        ],\n        [\n            [2715, 6427],\n            [23, -4],\n            [22, 0],\n            [26, -21],\n            [11, -21],\n            [26, 6],\n            [10, -13],\n            [24, -37],\n            [17, -27],\n            [9, 1],\n            [17, -12],\n            [-2, -17],\n            [20, -2],\n            [21, -24],\n            [-3, -14],\n            [-19, -7],\n            [-18, -3],\n            [-19, 4],\n            [-40, -5],\n            [18, 32],\n            [-11, 16],\n            [-18, 4],\n            [-9, 17],\n            [-7, 33],\n            [-16, -2],\n            [-26, 16],\n            [-8, 12],\n            [-36, 10],\n            [-10, 11],\n            [11, 15],\n            [-28, 3],\n            [-20, -31],\n            [-11, -1],\n            [-4, -14],\n            [-14, -7],\n            [-12, 6],\n            [15, 18],\n            [6, 22],\n            [13, 13],\n            [14, 11],\n            [21, 6],\n            [7, 6]\n        ],\n        [\n            [5909, 7133],\n            [2, 1],\n            [4, 14],\n            [20, -1],\n            [25, 18],\n            [-19, -25],\n            [2, -11]\n        ],\n        [\n            [5943, 7129],\n            [-3, 2],\n            [-5, -5],\n            [-4, 1],\n            [-2, -2],\n            [0, 6],\n            [-2, 4],\n            [-6, 0],\n            [-7, -5],\n            [-5, 3]\n        ],\n        [\n            [5943, 7129],\n            [1, -5],\n            [-28, -24],\n            [-14, 8],\n            [-7, 23],\n            [14, 2]\n        ],\n        [\n            [5377, 7945],\n            [-16, 25],\n            [-14, 15],\n            [-3, 25],\n            [-5, 17],\n            [21, 13],\n            [10, 15],\n            [20, 11],\n            [7, 11],\n            [7, -6],\n            [13, 6]\n        ],\n        [\n            [5417, 8077],\n            [13, -19],\n            [21, -5],\n            [-2, -17],\n            [15, -12],\n            [4, 15],\n            [19, -6],\n            [3, -19],\n            [20, -3],\n            [13, -29]\n        ],\n        [\n            [5523, 7982],\n            [-8, 0],\n            [-4, -11],\n            [-7, -3],\n            [-2, -13],\n            [-5, -3],\n            [-1, -5],\n            [-9, -7],\n            [-12, 1],\n            [-4, -13]\n        ],\n        [\n            [5275, 8306],\n            [1, -23],\n            [28, -14],\n            [-1, -21],\n            [29, 11],\n            [15, 16],\n            [32, -23],\n            [13, -19]\n        ],\n        [\n            [5392, 8233],\n            [6, -30],\n            [-8, -16],\n            [11, -21],\n            [6, -31],\n            [-2, -21],\n            [12, -37]\n        ],\n        [\n            [5207, 7871],\n            [3, 42],\n            [14, 40],\n            [-40, 11],\n            [-13, 16]\n        ],\n        [\n            [5171, 7980],\n            [2, 26],\n            [-6, 13]\n        ],\n        [\n            [5171, 8059],\n            [-5, 62],\n            [17, 0],\n            [7, 22],\n            [6, 54],\n            [-5, 20]\n        ],\n        [\n            [5191, 8217],\n            [6, 13],\n            [23, 3],\n            [5, -13],\n            [19, 29],\n            [-6, 22],\n            [-2, 34]\n        ],\n        [\n            [5236, 8305],\n            [21, -8],\n            [18, 9]\n        ],\n        [\n            [6196, 5808],\n            [7, -19],\n            [-1, -24],\n            [-16, -14],\n            [12, -16]\n        ],\n        [\n            [6198, 5735],\n            [-10, -32]\n        ],\n        [\n            [6188, 5703],\n            [-7, 11],\n            [-6, -5],\n            [-16, 1],\n            [0, 18],\n            [-2, 17],\n            [9, 27],\n            [10, 26]\n        ],\n        [\n            [6176, 5798],\n            [12, -5],\n            [8, 15]\n        ],\n        [\n            [5352, 8343],\n            [-17, -48],\n            [-29, 33],\n            [-4, 25],\n            [41, 19],\n            [9, -29]\n        ],\n        [\n            [5236, 8305],\n            [-11, 32],\n            [-1, 61],\n            [5, 16],\n            [8, 17],\n            [24, 4],\n            [10, 16],\n            [22, 17],\n            [-1, -30],\n            [-8, -20],\n            [4, -16],\n            [15, -9],\n            [-7, -22],\n            [-8, 6],\n            [-20, -42],\n            [7, -29]\n        ],\n        [\n            [3008, 6222],\n            [3, 10],\n            [22, 0],\n            [16, -15],\n            [8, 1],\n            [5, -21],\n            [15, 1],\n            [-1, -17],\n            [12, -2],\n            [14, -22],\n            [-10, -24],\n            [-14, 13],\n            [-12, -3],\n            [-9, 3],\n            [-5, -11],\n            [-11, -3],\n            [-4, 14],\n            [-10, -8],\n            [-11, -41],\n            [-7, 10],\n            [-1, 17]\n        ],\n        [\n            [3008, 6124],\n            [0, 16],\n            [-7, 17],\n            [7, 10],\n            [2, 23],\n            [-2, 32]\n        ],\n        [\n            [5333, 6444],\n            [-95, -112],\n            [-81, -117],\n            [-39, -26]\n        ],\n        [\n            [5118, 6189],\n            [-31, -6],\n            [0, 38],\n            [-13, 10],\n            [-17, 16],\n            [-7, 28],\n            [-94, 129],\n            [-93, 129]\n        ],\n        [\n            [4863, 6533],\n            [-105, 143]\n        ],\n        [\n            [4758, 6676],\n            [1, 11],\n            [0, 4]\n        ],\n        [\n            [4759, 6691],\n            [0, 70],\n            [44, 44],\n            [28, 9],\n            [23, 16],\n            [11, 29],\n            [32, 24],\n            [1, 44],\n            [16, 5],\n            [13, 22],\n            [36, 9],\n            [5, 23],\n            [-7, 13],\n            [-10, 62],\n            [-1, 36],\n            [-11, 38]\n        ],\n        [\n            [4939, 7135],\n            [27, 32],\n            [30, 11],\n            [17, 24],\n            [27, 18],\n            [47, 11],\n            [46, 4],\n            [14, -8],\n            [26, 23],\n            [30, 0],\n            [11, -13],\n            [19, 3]\n        ],\n        [\n            [5233, 7240],\n            [-5, -30],\n            [4, -56],\n            [-6, -49],\n            [-18, -33],\n            [3, -45],\n            [23, -35],\n            [0, -14],\n            [17, -24],\n            [12, -106]\n        ],\n        [\n            [5263, 6848],\n            [9, -52],\n            [1, -28],\n            [-5, -48],\n            [2, -27],\n            [-3, -32],\n            [2, -37],\n            [-11, -25],\n            [17, -43],\n            [1, -25],\n            [10, -33],\n            [13, 11],\n            [22, -28],\n            [12, -37]\n        ],\n        [\n            [2769, 4856],\n            [15, 45],\n            [-6, 25],\n            [-11, -27],\n            [-16, 26],\n            [5, 16],\n            [-4, 54],\n            [9, 9],\n            [5, 37],\n            [11, 38],\n            [-2, 24],\n            [15, 13],\n            [19, 23]\n        ],\n        [\n            [2906, 5049],\n            [4, -45],\n            [-9, -39],\n            [-30, -62],\n            [-33, -23],\n            [-17, -51],\n            [-6, -40],\n            [-15, -24],\n            [-12, 29],\n            [-11, 7],\n            [-12, -5],\n            [-1, 22],\n            [8, 14],\n            [-3, 24]\n        ],\n        [\n            [5969, 6800],\n            [-7, -23],\n            [-6, -45],\n            [-8, -31],\n            [-6, -10],\n            [-10, 19],\n            [-12, 26],\n            [-20, 85],\n            [-3, -5],\n            [12, -63],\n            [17, -59],\n            [21, -92],\n            [10, -32],\n            [9, -34],\n            [25, -65],\n            [-6, -10],\n            [1, -39],\n            [33, -53],\n            [4, -12]\n        ],\n        [\n            [6023, 6357],\n            [-110, 0],\n            [-107, 0],\n            [-112, 0]\n        ],\n        [\n            [5694, 6357],\n            [0, 218],\n            [0, 210],\n            [-8, 47],\n            [7, 37],\n            [-5, 25],\n            [10, 29]\n        ],\n        [\n            [5698, 6923],\n            [37, 0],\n            [27, -15],\n            [28, -18],\n            [13, -9],\n            [21, 19],\n            [11, 17],\n            [25, 5],\n            [20, -8],\n            [7, -29],\n            [7, 19],\n            [22, -14],\n            [22, -3],\n            [13, 15]\n        ],\n        [\n            [5951, 6902],\n            [18, -102]\n        ],\n        [\n            [6176, 5798],\n            [-10, 20],\n            [-11, 34],\n            [-12, 19],\n            [-8, 21],\n            [-24, 23],\n            [-19, 1],\n            [-7, 12],\n            [-16, -14],\n            [-17, 27],\n            [-8, -44],\n            [-33, 13]\n        ],\n        [\n            [6011, 5910],\n            [-3, 23],\n            [12, 87],\n            [3, 39],\n            [9, 18],\n            [20, 10],\n            [14, 34]\n        ],\n        [\n            [6066, 6121],\n            [16, -69],\n            [8, -54],\n            [15, -29],\n            [38, -55],\n            [16, -34],\n            [15, -34],\n            [8, -20],\n            [14, -18]\n        ],\n        [\n            [4749, 7532],\n            [1, 42],\n            [-11, 25],\n            [39, 43],\n            [34, -11],\n            [37, 1],\n            [30, -10],\n            [23, 3],\n            [45, -2]\n        ],\n        [\n            [4947, 7623],\n            [11, -23],\n            [51, -27],\n            [10, 13],\n            [31, -27],\n            [32, 8]\n        ],\n        [\n            [5082, 7567],\n            [2, -35],\n            [-26, -39],\n            [-36, -12],\n            [-2, -20],\n            [-18, -33],\n            [-10, -48],\n            [11, -34],\n            [-16, -26],\n            [-6, -39],\n            [-21, -11],\n            [-20, -46],\n            [-35, -1],\n            [-27, 1],\n            [-17, -21],\n            [-11, -22],\n            [-13, 5],\n            [-11, 20],\n            [-8, 34],\n            [-26, 9]\n        ],\n        [\n            [4792, 7249],\n            [-2, 20],\n            [10, 22],\n            [4, 16],\n            [-9, 17],\n            [7, 39],\n            [-11, 36],\n            [12, 5],\n            [1, 27],\n            [5, 9],\n            [0, 46],\n            [13, 16],\n            [-8, 30],\n            [-16, 2],\n            [-5, -8],\n            [-16, 0],\n            [-7, 29],\n            [-11, -8],\n            [-10, -15]\n        ],\n        [\n            [5675, 8472],\n            [3, 35],\n            [-10, -8],\n            [-18, 21],\n            [-2, 34],\n            [35, 17],\n            [35, 8],\n            [30, -10],\n            [29, 2]\n        ],\n        [\n            [5777, 8571],\n            [4, -10],\n            [-20, -34],\n            [8, -55],\n            [-12, -19]\n        ],\n        [\n            [5757, 8453],\n            [-22, 0],\n            [-24, 22],\n            [-13, 7],\n            [-23, -10]\n        ],\n        [\n            [6188, 5703],\n            [-6, -21],\n            [10, -32],\n            [10, -29],\n            [11, -21],\n            [90, -70],\n            [24, 0]\n        ],\n        [\n            [6327, 5530],\n            [-79, -177],\n            [-36, -3],\n            [-25, -41],\n            [-17, -1],\n            [-8, -19]\n        ],\n        [\n            [6162, 5289],\n            [-19, 0],\n            [-11, 20],\n            [-26, -25],\n            [-8, -24],\n            [-18, 4],\n            [-6, 7],\n            [-7, -1],\n            [-9, 0],\n            [-35, 50],\n            [-19, 0],\n            [-10, 20],\n            [0, 33],\n            [-14, 10]\n        ],\n        [\n            [5980, 5383],\n            [-17, 64],\n            [-12, 14],\n            [-5, 23],\n            [-14, 29],\n            [-17, 4],\n            [9, 34],\n            [15, 2],\n            [4, 18]\n        ],\n        [\n            [5943, 5571],\n            [0, 53]\n        ],\n        [\n            [5943, 5624],\n            [8, 62],\n            [13, 16],\n            [3, 24],\n            [12, 45],\n            [17, 30],\n            [11, 58],\n            [4, 51]\n        ],\n        [\n            [5794, 9138],\n            [-4, -42],\n            [42, -39],\n            [-26, -45],\n            [33, -67],\n            [-19, -51],\n            [25, -43],\n            [-11, -39],\n            [41, -40],\n            [-11, -31],\n            [-25, -34],\n            [-60, -75]\n        ],\n        [\n            [5779, 8632],\n            [-50, -5],\n            [-49, -21],\n            [-45, -13],\n            [-16, 32],\n            [-27, 20],\n            [6, 58],\n            [-14, 53],\n            [14, 35],\n            [25, 37],\n            [63, 64],\n            [19, 12],\n            [-3, 25],\n            [-39, 28]\n        ],\n        [\n            [5663, 8957],\n            [-9, 23],\n            [-1, 91],\n            [-43, 40],\n            [-37, 29]\n        ],\n        [\n            [5573, 9140],\n            [17, 16],\n            [30, -32],\n            [37, 3],\n            [30, -14],\n            [26, 26],\n            [14, 44],\n            [43, 20],\n            [35, -24],\n            [-11, -41]\n        ],\n        [\n            [9954, 4033],\n            [9, -17],\n            [-4, -31],\n            [-17, -8],\n            [-16, 7],\n            [-2, 26],\n            [10, 21],\n            [13, -8],\n            [7, 10]\n        ],\n        [\n            [0, 4079],\n            [9981, -14],\n            [-17, -13],\n            [-4, 23],\n            [14, 12],\n            [9, 3],\n            [-9983, 18]\n        ],\n        [\n            [0, 4108],\n            [0, -29]\n        ],\n        [\n            [0, 4108],\n            [6, 3],\n            [-4, -28],\n            [-2, -4]\n        ],\n        [\n            [3300, 1994],\n            [33, 36],\n            [24, -15],\n            [16, 24],\n            [22, -27],\n            [-8, -21],\n            [-37, -17],\n            [-13, 20],\n            [-23, -26],\n            [-14, 26]\n        ],\n        [\n            [5265, 7548],\n            [-9, -46],\n            [-13, 12],\n            [-6, 40],\n            [5, 22],\n            [18, 22],\n            [5, -50]\n        ],\n        [\n            [5157, 7984],\n            [6, -6],\n            [8, 2]\n        ],\n        [\n            [5190, 7775],\n            [-2, -17],\n            [9, -22],\n            [-10, -18],\n            [7, -46],\n            [15, -8],\n            [-3, -25]\n        ],\n        [\n            [5206, 7639],\n            [-25, -34],\n            [-55, 16],\n            [-40, -19],\n            [-4, -35]\n        ],\n        [\n            [4947, 7623],\n            [14, 35],\n            [5, 118],\n            [-28, 62],\n            [-21, 30],\n            [-42, 23],\n            [-3, 43],\n            [36, 12],\n            [47, -15],\n            [-9, 67],\n            [26, -25],\n            [65, 46],\n            [8, 48],\n            [24, 12]\n        ],\n        [\n            [3485, 5194],\n            [7, 25],\n            [3, 27]\n        ],\n        [\n            [3495, 5246],\n            [4, 26],\n            [-10, 34]\n        ],\n        [\n            [3489, 5306],\n            [-3, 41],\n            [15, 51]\n        ],\n        [\n            [3501, 5398],\n            [9, -7],\n            [21, -14],\n            [29, -50],\n            [5, -24]\n        ],\n        [\n            [5308, 4822],\n            [-29, 60],\n            [-18, 49],\n            [-17, 61],\n            [1, 19],\n            [6, 19],\n            [7, 43],\n            [5, 44]\n        ],\n        [\n            [5263, 5117],\n            [10, 4],\n            [40, -1],\n            [0, 71]\n        ],\n        [\n            [4827, 8240],\n            [-21, 12],\n            [-17, -1],\n            [6, 32],\n            [-6, 32]\n        ],\n        [\n            [4789, 8315],\n            [23, 2],\n            [30, -37],\n            [-15, -40]\n        ],\n        [\n            [4916, 8521],\n            [-30, -63],\n            [29, 8],\n            [30, -1],\n            [-7, -48],\n            [-25, -53],\n            [29, -4],\n            [2, -6],\n            [25, -69],\n            [19, -10],\n            [17, -67],\n            [8, -24],\n            [33, -11],\n            [-3, -38],\n            [-14, -17],\n            [11, -30],\n            [-25, -31],\n            [-37, 0],\n            [-48, -16],\n            [-13, 12],\n            [-18, -28],\n            [-26, 7],\n            [-19, -23],\n            [-15, 12],\n            [41, 62],\n            [25, 13],\n            [-1, 0],\n            [-43, 9],\n            [-8, 24],\n            [29, 18],\n            [-15, 32],\n            [5, 39],\n            [42, -6],\n            [4, 35],\n            [-19, 36],\n            [0, 1],\n            [-34, 10],\n            [-7, 16],\n            [10, 27],\n            [-9, 16],\n            [-15, -28],\n            [-1, 57],\n            [-14, 30],\n            [10, 61],\n            [21, 48],\n            [23, -4],\n            [33, 4]\n        ],\n        [\n            [6154, 7511],\n            [4, 26],\n            [-7, 40],\n            [-16, 22],\n            [-16, 6],\n            [-10, 19]\n        ],\n        [\n            [6109, 7624],\n            [4, 6],\n            [23, -10],\n            [41, -9],\n            [38, -28],\n            [5, -11],\n            [17, 9],\n            [25, -13],\n            [9, -24],\n            [17, -13]\n        ],\n        [\n            [6210, 7485],\n            [-27, 29],\n            [-29, -3]\n        ],\n        [\n            [5029, 5408],\n            [-44, -35],\n            [-15, -20],\n            [-25, -17],\n            [-25, 17]\n        ],\n        [\n            [5000, 5708],\n            [-2, -18],\n            [12, -30],\n            [0, -43],\n            [2, -47],\n            [7, -21],\n            [-6, -54],\n            [2, -29],\n            [8, -37],\n            [6, -21]\n        ],\n        [\n            [4765, 5512],\n            [-8, 1],\n            [-5, -24],\n            [-8, 1],\n            [-6, 12],\n            [2, 24],\n            [-11, 36],\n            [-8, -7],\n            [-6, -1]\n        ],\n        [\n            [4715, 5554],\n            [-7, -3],\n            [0, 21],\n            [-4, 16],\n            [0, 17],\n            [-6, 25],\n            [-7, 21],\n            [-23, 0],\n            [-6, -11],\n            [-8, -1],\n            [-4, -13],\n            [-4, -17],\n            [-14, -26]\n        ],\n        [\n            [4632, 5583],\n            [-13, 35],\n            [-10, 24],\n            [-8, 7],\n            [-6, 12],\n            [-4, 26],\n            [-4, 13],\n            [-8, 10]\n        ],\n        [\n            [4579, 5710],\n            [13, 29],\n            [8, -2],\n            [7, 10],\n            [6, 0],\n            [5, 8],\n            [-3, 20],\n            [3, 6],\n            [1, 20]\n        ],\n        [\n            [4619, 5801],\n            [13, -1],\n            [20, -14],\n            [6, 1],\n            [3, 7],\n            [15, -5],\n            [4, 4]\n        ],\n        [\n            [4680, 5793],\n            [1, -22],\n            [5, 0],\n            [7, 8],\n            [5, -2],\n            [7, -15],\n            [12, -5],\n            [8, 13],\n            [9, 8],\n            [6, 8],\n            [6, -1],\n            [6, -13],\n            [3, -17],\n            [12, -24],\n            [-6, -16],\n            [-1, -19],\n            [6, 6],\n            [3, -7],\n            [-1, -17],\n            [8, -18]\n        ],\n        [\n            [4532, 5834],\n            [3, 27]\n        ],\n        [\n            [4535, 5861],\n            [31, 1],\n            [6, 14],\n            [9, 1],\n            [11, -14],\n            [8, -1],\n            [9, 10],\n            [6, -17],\n            [-12, -13],\n            [-12, 1],\n            [-12, 13],\n            [-10, -14],\n            [-5, -1],\n            [-7, -8],\n            [-25, 1]\n        ],\n        [\n            [4579, 5710],\n            [-15, 24],\n            [-11, 4],\n            [-7, 17],\n            [1, 9],\n            [-9, 13],\n            [-2, 12]\n        ],\n        [\n            [4536, 5789],\n            [15, 10],\n            [9, -2],\n            [8, 7],\n            [51, -3]\n        ],\n        [\n            [5263, 5117],\n            [-5, 9],\n            [10, 66]\n        ],\n        [\n            [5658, 7167],\n            [15, -20],\n            [22, 3],\n            [20, -4],\n            [0, -10],\n            [15, 7],\n            [-4, -18],\n            [-40, -5],\n            [1, 10],\n            [-34, 12],\n            [5, 25]\n        ],\n        [\n            [5723, 7469],\n            [-17, 2],\n            [-14, 6],\n            [-34, -16],\n            [19, -33],\n            [-14, -10],\n            [-15, 0],\n            [-15, 31],\n            [-5, -13],\n            [6, -36],\n            [14, -27],\n            [-10, -13],\n            [15, -27],\n            [14, -18],\n            [0, -33],\n            [-25, 16],\n            [8, -30],\n            [-18, -7],\n            [11, -52],\n            [-19, -1],\n            [-23, 26],\n            [-10, 47],\n            [-5, 40],\n            [-11, 27],\n            [-14, 34],\n            [-2, 16]\n        ],\n        [\n            [5583, 7470],\n            [18, 6],\n            [11, 13],\n            [15, -2],\n            [5, 11],\n            [5, 2]\n        ],\n        [\n            [5725, 7529],\n            [13, -16],\n            [-8, -37],\n            [-7, -7]\n        ],\n        [\n            [3701, 9939],\n            [93, 35],\n            [97, -2],\n            [36, 21],\n            [98, 6],\n            [222, -7],\n            [174, -47],\n            [-52, -23],\n            [-106, -3],\n            [-150, -5],\n            [14, -11],\n            [99, 7],\n            [83, -21],\n            [54, 18],\n            [23, -21],\n            [-30, -34],\n            [71, 22],\n            [135, 23],\n            [83, -12],\n            [15, -25],\n            [-113, -42],\n            [-16, -14],\n            [-88, -10],\n            [64, -3],\n            [-32, -43],\n            [-23, -38],\n            [1, -66],\n            [33, -38],\n            [-43, -3],\n            [-46, -19],\n            [52, -31],\n            [6, -50],\n            [-30, -6],\n            [36, -50],\n            [-61, -5],\n            [32, -24],\n            [-9, -20],\n            [-39, -10],\n            [-39, 0],\n            [35, -40],\n            [0, -26],\n            [-55, 24],\n            [-14, -15],\n            [37, -15],\n            [37, -36],\n            [10, -48],\n            [-49, -11],\n            [-22, 22],\n            [-34, 34],\n            [10, -40],\n            [-33, -31],\n            [73, -2],\n            [39, -3],\n            [-75, -52],\n            [-75, -46],\n            [-81, -21],\n            [-31, 0],\n            [-29, -23],\n            [-38, -62],\n            [-60, -42],\n            [-19, -2],\n            [-37, -15],\n            [-40, -13],\n            [-24, -37],\n            [0, -41],\n            [-15, -39],\n            [-45, -47],\n            [11, -47],\n            [-12, -48],\n            [-14, -58],\n            [-39, -4],\n            [-41, 49],\n            [-56, 0],\n            [-27, 32],\n            [-18, 58],\n            [-49, 73],\n            [-14, 39],\n            [-3, 53],\n            [-39, 54],\n            [10, 44],\n            [-18, 21],\n            [27, 69],\n            [42, 22],\n            [11, 25],\n            [6, 46],\n            [-32, -21],\n            [-15, -9],\n            [-25, -8],\n            [-34, 19],\n            [-2, 40],\n            [11, 31],\n            [25, 1],\n            [57, -15],\n            [-48, 37],\n            [-24, 20],\n            [-28, -8],\n            [-23, 15],\n            [31, 55],\n            [-17, 22],\n            [-22, 41],\n            [-34, 62],\n            [-35, 23],\n            [0, 25],\n            [-74, 34],\n            [-59, 5],\n            [-74, -3],\n            [-68, -4],\n            [-32, 19],\n            [-49, 37],\n            [73, 19],\n            [56, 3],\n            [-119, 15],\n            [-62, 24],\n            [3, 23],\n            [106, 28],\n            [101, 29],\n            [11, 21],\n            [-75, 22],\n            [24, 23],\n            [97, 41],\n            [40, 7],\n            [-12, 26],\n            [66, 16],\n            [86, 9],\n            [85, 1],\n            [30, -19],\n            [74, 33],\n            [66, -22],\n            [39, -5],\n            [58, -19],\n            [-66, 32],\n            [4, 25]\n        ],\n        [\n            [2497, 5869],\n            [-14, 10],\n            [-17, 1],\n            [-13, 12],\n            [-15, 24]\n        ],\n        [\n            [2438, 5916],\n            [1, 18],\n            [3, 13],\n            [-4, 12],\n            [13, 48],\n            [36, 0],\n            [1, 20],\n            [-5, 4],\n            [-3, 12],\n            [-10, 14],\n            [-11, 20],\n            [13, 0],\n            [0, 33],\n            [26, 0],\n            [26, 0]\n        ],\n        [\n            [2529, 5996],\n            [10, -11],\n            [2, 9],\n            [8, -7]\n        ],\n        [\n            [2549, 5987],\n            [-13, -23],\n            [-13, -16],\n            [-2, -12],\n            [2, -11],\n            [-5, -15]\n        ],\n        [\n            [2518, 5910],\n            [-7, -4],\n            [2, -7],\n            [-6, -6],\n            [-9, -15],\n            [-1, -9]\n        ],\n        [\n            [3340, 5552],\n            [18, -22],\n            [17, -38],\n            [1, -31],\n            [10, -1],\n            [15, -29],\n            [11, -21]\n        ],\n        [\n            [3412, 5410],\n            [-4, -53],\n            [-17, -15],\n            [1, -14],\n            [-5, -31],\n            [13, -42],\n            [9, -1],\n            [3, -33],\n            [17, -51]\n        ],\n        [\n            [3313, 5365],\n            [-19, 45],\n            [7, 16],\n            [0, 27],\n            [17, 10],\n            [7, 11],\n            [-10, 22],\n            [3, 21],\n            [22, 35]\n        ],\n        [\n            [2574, 5825],\n            [-5, 18],\n            [-8, 5]\n        ],\n        [\n            [2561, 5848],\n            [2, 24],\n            [-4, 6],\n            [-6, 4],\n            [-12, -7],\n            [-1, 8],\n            [-8, 10],\n            [-6, 12],\n            [-8, 5]\n        ],\n        [\n            [2549, 5987],\n            [3, -3],\n            [6, 11],\n            [8, 1],\n            [3, -5],\n            [4, 3],\n            [13, -6],\n            [13, 2],\n            [9, 6],\n            [3, 7],\n            [9, -3],\n            [6, -4],\n            [8, 1],\n            [5, 5],\n            [13, -8],\n            [4, -1],\n            [9, -11],\n            [8, -13],\n            [10, -9],\n            [7, -17]\n        ],\n        [\n            [2690, 5943],\n            [-9, 2],\n            [-4, -8],\n            [-10, -8],\n            [-7, 0],\n            [-6, -8],\n            [-6, 3],\n            [-4, 9],\n            [-3, -2],\n            [-4, -14],\n            [-3, 1],\n            [0, -12],\n            [-10, -17],\n            [-5, -7],\n            [-3, -7],\n            [-8, 12],\n            [-6, -16],\n            [-6, 1],\n            [-6, -2],\n            [0, -29],\n            [-4, 0],\n            [-3, -14],\n            [-9, -2]\n        ],\n        [\n            [5522, 7770],\n            [7, -23],\n            [9, -17],\n            [-11, -22]\n        ],\n        [\n            [5515, 7577],\n            [-3, -10]\n        ],\n        [\n            [5512, 7567],\n            [-26, 22],\n            [-16, 21],\n            [-26, 18],\n            [-23, 43],\n            [6, 5],\n            [-13, 25],\n            [-1, 19],\n            [-17, 10],\n            [-9, -26],\n            [-8, 20],\n            [0, 21],\n            [1, 1]\n        ],\n        [\n            [5380, 7746],\n            [20, -2],\n            [5, 9],\n            [9, -9],\n            [11, -1],\n            [0, 16],\n            [10, 6],\n            [2, 24],\n            [23, 16]\n        ],\n        [\n            [5460, 7805],\n            [8, -7],\n            [21, -26],\n            [23, -11],\n            [10, 9]\n        ],\n        [\n            [3008, 6124],\n            [-19, 10],\n            [-13, -5],\n            [-17, 5],\n            [-13, -11],\n            [-15, 18],\n            [3, 19],\n            [25, -8],\n            [21, -5],\n            [10, 13],\n            [-12, 26],\n            [0, 23],\n            [-18, 9],\n            [7, 16],\n            [17, -3],\n            [24, -9]\n        ],\n        [\n            [5471, 7900],\n            [14, -15],\n            [10, -6],\n            [24, 7],\n            [2, 12],\n            [11, 2],\n            [14, 9],\n            [3, -4],\n            [13, 8],\n            [6, 13],\n            [9, 4],\n            [30, -18],\n            [6, 6]\n        ],\n        [\n            [5613, 7918],\n            [15, -16],\n            [2, -16]\n        ],\n        [\n            [5630, 7886],\n            [-17, -12],\n            [-13, -40],\n            [-17, -40],\n            [-22, -11]\n        ],\n        [\n            [5561, 7783],\n            [-17, 2],\n            [-22, -15]\n        ],\n        [\n            [5460, 7805],\n            [-6, 20],\n            [-4, 0]\n        ],\n        [\n            [8352, 4453],\n            [-11, -2],\n            [-37, 42],\n            [26, 11],\n            [14, -18],\n            [10, -17],\n            [-2, -16]\n        ],\n        [\n            [8471, 4532],\n            [2, -11],\n            [1, -18]\n        ],\n        [\n            [8474, 4503],\n            [-18, -45],\n            [-24, -13],\n            [-3, 8],\n            [2, 20],\n            [12, 36],\n            [28, 23]\n        ],\n        [\n            [8274, 4579],\n            [10, -16],\n            [17, 5],\n            [7, -25],\n            [-32, -12],\n            [-19, -8],\n            [-15, 1],\n            [10, 34],\n            [15, 0],\n            [7, 21]\n        ],\n        [\n            [8413, 4579],\n            [-4, -32],\n            [-42, -17],\n            [-37, 7],\n            [0, 22],\n            [22, 12],\n            [18, -18],\n            [18, 5],\n            [25, 21]\n        ],\n        [\n            [8017, 4657],\n            [53, -6],\n            [6, 25],\n            [51, -29],\n            [10, -38],\n            [42, -11],\n            [34, -35],\n            [-31, -23],\n            [-31, 24],\n            [-25, -1],\n            [-29, 4],\n            [-26, 11],\n            [-32, 22],\n            [-21, 6],\n            [-11, -7],\n            [-51, 24],\n            [-5, 25],\n            [-25, 5],\n            [19, 56],\n            [34, -3],\n            [22, -23],\n            [12, -5],\n            [4, -21]\n        ],\n        [\n            [8741, 4690],\n            [-14, -40],\n            [-3, 45],\n            [5, 21],\n            [6, 20],\n            [7, -17],\n            [-1, -29]\n        ],\n        [\n            [8534, 4853],\n            [-11, -19],\n            [-19, 10],\n            [-5, 26],\n            [28, 3],\n            [7, -20]\n        ],\n        [\n            [8623, 4875],\n            [10, -45],\n            [-23, 24],\n            [-23, 5],\n            [-16, -4],\n            [-19, 2],\n            [6, 33],\n            [35, 2],\n            [30, -17]\n        ],\n        [\n            [8916, 4904],\n            [0, -193],\n            [1, -192]\n        ],\n        [\n            [8917, 4519],\n            [-25, 48],\n            [-28, 12],\n            [-7, -17],\n            [-35, -1],\n            [12, 48],\n            [17, 16],\n            [-7, 64],\n            [-14, 50],\n            [-53, 50],\n            [-23, 5],\n            [-42, 54],\n            [-8, -28],\n            [-11, -5],\n            [-6, 21],\n            [0, 26],\n            [-21, 29],\n            [29, 21],\n            [20, -1],\n            [-2, 16],\n            [-41, 0],\n            [-11, 35],\n            [-25, 11],\n            [-11, 29],\n            [37, 14],\n            [14, 20],\n            [45, -25],\n            [4, -22],\n            [8, -95],\n            [29, -35],\n            [23, 62],\n            [32, 36],\n            [25, 0],\n            [23, -21],\n            [21, -21],\n            [30, -11]\n        ],\n        [\n            [8478, 5141],\n            [-22, -58],\n            [-21, -12],\n            [-27, 12],\n            [-46, -3],\n            [-24, -8],\n            [-4, -45],\n            [24, -53],\n            [15, 27],\n            [52, 20],\n            [-2, -27],\n            [-12, 9],\n            [-12, -35],\n            [-25, -23],\n            [27, -76],\n            [-5, -20],\n            [25, -68],\n            [-1, -39],\n            [-14, -17],\n            [-11, 20],\n            [13, 49],\n            [-27, -23],\n            [-7, 16],\n            [3, 23],\n            [-20, 35],\n            [3, 57],\n            [-19, -18],\n            [2, -69],\n            [1, -84],\n            [-17, -9],\n            [-12, 18],\n            [8, 54],\n            [-4, 57],\n            [-12, 1],\n            [-9, 40],\n            [12, 39],\n            [4, 47],\n            [14, 89],\n            [5, 24],\n            [24, 44],\n            [22, -18],\n            [35, -8],\n            [32, 3],\n            [27, 43],\n            [5, -14]\n        ],\n        [\n            [8574, 5124],\n            [-2, -51],\n            [-14, 6],\n            [-4, -36],\n            [11, -32],\n            [-8, -7],\n            [-11, 38],\n            [-8, 75],\n            [6, 47],\n            [9, 22],\n            [2, -32],\n            [16, -5],\n            [3, -25]\n        ],\n        [\n            [8045, 5176],\n            [5, -39],\n            [19, -34],\n            [18, 12],\n            [18, -4],\n            [16, 30],\n            [13, 5],\n            [26, -17],\n            [23, 13],\n            [14, 82],\n            [11, 21],\n            [10, 67],\n            [32, 0],\n            [24, -10]\n        ],\n        [\n            [8274, 5302],\n            [-16, -53],\n            [20, -56],\n            [-5, -28],\n            [32, -54],\n            [-33, -7],\n            [-10, -40],\n            [2, -54],\n            [-27, -40],\n            [-1, -59],\n            [-10, -91],\n            [-5, 21],\n            [-31, -26],\n            [-11, 36],\n            [-20, 3],\n            [-14, 19],\n            [-33, -21],\n            [-10, 29],\n            [-18, -4],\n            [-23, 7],\n            [-4, 79],\n            [-14, 17],\n            [-13, 50],\n            [-4, 52],\n            [3, 55],\n            [16, 39]\n        ],\n        [\n            [7939, 4712],\n            [-31, -1],\n            [-24, 49],\n            [-35, 48],\n            [-12, 36],\n            [-21, 48],\n            [-14, 44],\n            [-21, 83],\n            [-24, 49],\n            [-9, 51],\n            [-10, 46],\n            [-25, 37],\n            [-14, 51],\n            [-21, 33],\n            [-29, 65],\n            [-3, 30],\n            [18, -2],\n            [43, -12],\n            [25, -57],\n            [21, -40],\n            [16, -25],\n            [26, -63],\n            [28, -1],\n            [23, -41],\n            [16, -49],\n            [22, -27],\n            [-12, -49],\n            [16, -20],\n            [10, -2],\n            [5, -41],\n            [10, -33],\n            [20, -5],\n            [14, -37],\n            [-7, -74],\n            [-1, -91]\n        ],\n        [\n            [7252, 6841],\n            [-17, -27],\n            [-11, -55],\n            [27, -23],\n            [26, -29],\n            [36, -33],\n            [38, -8],\n            [16, -30],\n            [22, -5],\n            [33, -14],\n            [23, 1],\n            [4, 23],\n            [-4, 38],\n            [2, 25]\n        ],\n        [\n            [7703, 6727],\n            [2, -22],\n            [-10, -11],\n            [2, -36],\n            [-19, 10],\n            [-36, -41],\n            [0, -33],\n            [-15, -50],\n            [-1, -29],\n            [-13, -48],\n            [-21, 13],\n            [-1, -61],\n            [-7, -20],\n            [3, -25],\n            [-14, -14]\n        ],\n        [\n            [7472, 6360],\n            [-4, -21],\n            [-19, 1],\n            [-34, -13],\n            [2, -44],\n            [-15, -35],\n            [-40, -40],\n            [-31, -69],\n            [-21, -38],\n            [-28, -38],\n            [0, -27],\n            [-13, -15],\n            [-26, -21],\n            [-12, -3],\n            [-9, -45],\n            [6, -77],\n            [1, -49],\n            [-11, -56],\n            [0, -101],\n            [-15, -2],\n            [-12, -46],\n            [8, -19],\n            [-25, -17],\n            [-10, -40],\n            [-11, -17],\n            [-26, 55],\n            [-13, 83],\n            [-11, 60],\n            [-9, 28],\n            [-15, 56],\n            [-7, 74],\n            [-5, 37],\n            [-25, 81],\n            [-12, 115],\n            [-8, 75],\n            [0, 72],\n            [-5, 55],\n            [-41, -35],\n            [-19, 7],\n            [-36, 71],\n            [13, 22],\n            [-8, 23],\n            [-33, 50]\n        ],\n        [\n            [6893, 6457],\n            [19, 40],\n            [61, -1],\n            [-6, 51],\n            [-15, 30],\n            [-4, 46],\n            [-18, 26],\n            [31, 62],\n            [32, -4],\n            [29, 61],\n            [18, 60],\n            [27, 60],\n            [-1, 42],\n            [24, 34],\n            [-23, 29],\n            [-9, 40],\n            [-10, 52],\n            [14, 25],\n            [42, -14],\n            [31, 9],\n            [26, 49]\n        ],\n        [\n            [4827, 8240],\n            [5, -42],\n            [-21, -53],\n            [-49, -35],\n            [-40, 9],\n            [23, 62],\n            [-15, 60],\n            [38, 46],\n            [21, 28]\n        ],\n        [\n            [6497, 7255],\n            [25, 12],\n            [19, 33],\n            [19, -1],\n            [12, 11],\n            [20, -6],\n            [31, -30],\n            [22, -6],\n            [31, -53],\n            [21, -2],\n            [3, -49]\n        ],\n        [\n            [6690, 6820],\n            [14, -31],\n            [11, -36],\n            [27, -26],\n            [1, -52],\n            [13, -10],\n            [2, -27],\n            [-40, -30],\n            [-10, -69]\n        ],\n        [\n            [6708, 6539],\n            [-53, 18],\n            [-30, 13],\n            [-31, 8],\n            [-12, 73],\n            [-13, 10],\n            [-22, -11],\n            [-28, -28],\n            [-34, 20],\n            [-28, 45],\n            [-27, 17],\n            [-18, 56],\n            [-21, 79],\n            [-15, -10],\n            [-17, 20],\n            [-11, -24]\n        ],\n        [\n            [6348, 6825],\n            [-15, 32],\n            [0, 31],\n            [-9, 0],\n            [5, 43],\n            [-15, 45],\n            [-34, 32],\n            [-19, 56],\n            [6, 46],\n            [14, 21],\n            [-2, 34],\n            [-18, 18],\n            [-18, 70]\n        ],\n        [\n            [6243, 7253],\n            [-15, 48],\n            [5, 18],\n            [-8, 68],\n            [19, 17]\n        ],\n        [\n            [6357, 7321],\n            [9, -43],\n            [26, -13],\n            [20, -29],\n            [39, -10],\n            [44, 15],\n            [2, 14]\n        ],\n        [\n            [6348, 6825],\n            [-16, 3]\n        ],\n        [\n            [6332, 6828],\n            [-19, 5],\n            [-20, -56]\n        ],\n        [\n            [6293, 6777],\n            [-52, 4],\n            [-78, 119],\n            [-41, 41],\n            [-34, 16]\n        ],\n        [\n            [6088, 6957],\n            [-11, 72]\n        ],\n        [\n            [6077, 7029],\n            [61, 62],\n            [11, 71],\n            [-3, 43],\n            [16, 15],\n            [14, 37]\n        ],\n        [\n            [6176, 7257],\n            [12, 9],\n            [32, -8],\n            [10, -15],\n            [13, 10]\n        ],\n        [\n            [4597, 8984],\n            [-7, -39],\n            [31, -40],\n            [-36, -45],\n            [-80, -41],\n            [-24, -10],\n            [-36, 8],\n            [-78, 19],\n            [28, 26],\n            [-61, 29],\n            [49, 12],\n            [-1, 17],\n            [-58, 14],\n            [19, 38],\n            [42, 9],\n            [43, -40],\n            [42, 32],\n            [35, -17],\n            [45, 32],\n            [47, -4]\n        ],\n        [\n            [5992, 6990],\n            [-5, -19]\n        ],\n        [\n            [5987, 6971],\n            [-10, 8],\n            [-6, -39],\n            [7, -7],\n            [-7, -8],\n            [-1, -15],\n            [13, 8]\n        ],\n        [\n            [5983, 6918],\n            [0, -23],\n            [-14, -95]\n        ],\n        [\n            [5951, 6902],\n            [8, 19],\n            [-2, 4],\n            [8, 27],\n            [5, 45],\n            [4, 15],\n            [1, 0]\n        ],\n        [\n            [5975, 7012],\n            [9, 0],\n            [3, 11],\n            [7, 0]\n        ],\n        [\n            [5994, 7023],\n            [1, -24],\n            [-4, -9],\n            [1, 0]\n        ],\n        [\n            [5431, 7316],\n            [-10, -46],\n            [4, -19],\n            [-6, -30],\n            [-21, 22],\n            [-14, 7],\n            [-39, 30],\n            [4, 30],\n            [32, -6],\n            [28, 7],\n            [22, 5]\n        ],\n        [\n            [5255, 7492],\n            [17, -42],\n            [-4, -78],\n            [-13, 4],\n            [-11, -20],\n            [-10, 16],\n            [-2, 71],\n            [-6, 34],\n            [15, -3],\n            [14, 18]\n        ],\n        [\n            [5383, 7805],\n            [-3, -29],\n            [7, -25]\n        ],\n        [\n            [5387, 7751],\n            [-22, 8],\n            [-23, -20],\n            [1, -30],\n            [-3, -17],\n            [9, -30],\n            [26, -29],\n            [14, -49],\n            [31, -48],\n            [22, 0],\n            [7, -13],\n            [-8, -11],\n            [25, -22],\n            [20, -18],\n            [24, -30],\n            [3, -11],\n            [-5, -22],\n            [-16, 28],\n            [-24, 10],\n            [-12, -39],\n            [20, -21],\n            [-3, -31],\n            [-11, -4],\n            [-15, -50],\n            [-12, -5],\n            [0, 18],\n            [6, 32],\n            [6, 12],\n            [-11, 35],\n            [-8, 29],\n            [-12, 8],\n            [-8, 25],\n            [-18, 11],\n            [-12, 24],\n            [-21, 4],\n            [-21, 26],\n            [-26, 39],\n            [-19, 34],\n            [-8, 58],\n            [-14, 7],\n            [-23, 20],\n            [-12, -8],\n            [-16, -28],\n            [-12, -4]\n        ],\n        [\n            [2845, 6150],\n            [19, -5],\n            [14, -15],\n            [5, -16],\n            [-19, -1],\n            [-9, -10],\n            [-15, 10],\n            [-16, 21],\n            [3, 14],\n            [12, 4],\n            [6, -2]\n        ],\n        [\n            [5992, 6990],\n            [31, -24],\n            [54, 63]\n        ],\n        [\n            [6088, 6957],\n            [-5, -8],\n            [-56, -30],\n            [28, -59],\n            [-9, -10],\n            [-5, -20],\n            [-21, -8],\n            [-7, -21],\n            [-12, -19],\n            [-31, 10]\n        ],\n        [\n            [5970, 6792],\n            [-1, 8]\n        ],\n        [\n            [5983, 6918],\n            [4, 17],\n            [0, 36]\n        ],\n        [\n            [8739, 7075],\n            [4, -20],\n            [-16, -36],\n            [-11, 19],\n            [-15, -14],\n            [-7, -34],\n            [-18, 16],\n            [0, 28],\n            [15, 36],\n            [16, -7],\n            [12, 25],\n            [20, -13]\n        ],\n        [\n            [8915, 7252],\n            [-10, -47],\n            [4, -30],\n            [-14, -42],\n            [-35, -27],\n            [-49, -4],\n            [-40, -67],\n            [-19, 22],\n            [-1, 44],\n            [-48, -13],\n            [-33, -27],\n            [-32, -2],\n            [28, -43],\n            [-19, -101],\n            [-18, -24],\n            [-13, 23],\n            [7, 53],\n            [-18, 17],\n            [-11, 41],\n            [26, 18],\n            [15, 37],\n            [28, 30],\n            [20, 41],\n            [55, 17],\n            [30, -12],\n            [29, 105],\n            [19, -28],\n            [40, 59],\n            [16, 23],\n            [18, 72],\n            [-5, 67],\n            [11, 37],\n            [30, 11],\n            [15, -82],\n            [-1, -48],\n            [-25, -59],\n            [0, -61]\n        ],\n        [\n            [8997, 7667],\n            [19, -12],\n            [20, 25],\n            [6, -67],\n            [-41, -16],\n            [-25, -59],\n            [-43, 41],\n            [-15, -65],\n            [-31, -1],\n            [-4, 59],\n            [14, 46],\n            [29, 3],\n            [8, 82],\n            [9, 46],\n            [32, -62],\n            [22, -20]\n        ],\n        [\n            [6970, 7554],\n            [-15, -10],\n            [-37, -42],\n            [-12, -42],\n            [-11, 0],\n            [-7, 28],\n            [-36, 2],\n            [-5, 48],\n            [-14, 0],\n            [2, 60],\n            [-33, 43],\n            [-48, -5],\n            [-32, -8],\n            [-27, 53],\n            [-22, 22],\n            [-43, 43],\n            [-6, 5],\n            [-71, -35],\n            [1, -218]\n        ],\n        [\n            [6554, 7498],\n            [-14, -3],\n            [-20, 46],\n            [-18, 17],\n            [-32, -12],\n            [-12, -20]\n        ],\n        [\n            [6458, 7526],\n            [-2, 14],\n            [7, 25],\n            [-5, 21],\n            [-32, 20],\n            [-13, 53],\n            [-15, 15],\n            [-1, 19],\n            [27, -6],\n            [1, 44],\n            [23, 9],\n            [25, -9],\n            [5, 58],\n            [-5, 36],\n            [-28, -2],\n            [-24, 14],\n            [-32, -26],\n            [-26, -12]\n        ],\n        [\n            [6363, 7799],\n            [-14, 9],\n            [3, 31],\n            [-18, 39],\n            [-20, -2],\n            [-24, 40],\n            [16, 45],\n            [-8, 12],\n            [22, 65],\n            [29, -34],\n            [3, 43],\n            [58, 64],\n            [43, 2],\n            [61, -41],\n            [33, -24],\n            [30, 25],\n            [44, 1],\n            [35, -30],\n            [8, 17],\n            [39, -2],\n            [7, 28],\n            [-45, 40],\n            [27, 29],\n            [-5, 16],\n            [26, 15],\n            [-20, 41],\n            [13, 20],\n            [104, 21],\n            [13, 14],\n            [70, 22],\n            [25, 24],\n            [50, -12],\n            [9, -61],\n            [29, 14],\n            [35, -20],\n            [-2, -32],\n            [27, 3],\n            [69, 56],\n            [-10, -19],\n            [35, -46],\n            [62, -150],\n            [15, 31],\n            [39, -34],\n            [39, 16],\n            [16, -11],\n            [13, -34],\n            [20, -12],\n            [11, -25],\n            [36, 8],\n            [15, -36]\n        ],\n        [\n            [7229, 7559],\n            [-17, 9],\n            [-14, 21],\n            [-42, 6],\n            [-46, 2],\n            [-10, -6],\n            [-39, 24],\n            [-16, -12],\n            [-4, -35],\n            [-46, 21],\n            [-18, -9],\n            [-7, -26]\n        ],\n        [\n            [6155, 4958],\n            [-20, -24],\n            [-7, -24],\n            [-10, -4],\n            [-4, -42],\n            [-9, -24],\n            [-5, -39],\n            [-12, -20]\n        ],\n        [\n            [6088, 4781],\n            [-40, 59],\n            [-1, 35],\n            [-101, 120],\n            [-5, 6]\n        ],\n        [\n            [5941, 5001],\n            [0, 63],\n            [8, 24],\n            [14, 39],\n            [10, 43],\n            [-13, 68],\n            [-3, 30],\n            [-13, 41]\n        ],\n        [\n            [5944, 5309],\n            [17, 35],\n            [19, 39]\n        ],\n        [\n            [6162, 5289],\n            [-24, -67],\n            [0, -215],\n            [17, -49]\n        ],\n        [\n            [7046, 7387],\n            [-53, -9],\n            [-34, 19],\n            [-30, -4],\n            [3, 34],\n            [30, -10],\n            [10, 18]\n        ],\n        [\n            [6972, 7435],\n            [21, -6],\n            [36, 43],\n            [-33, 31],\n            [-20, -15],\n            [-21, 22],\n            [24, 39],\n            [-9, 5]\n        ],\n        [\n            [7849, 5777],\n            [-7, 72],\n            [18, 49],\n            [36, 11],\n            [26, -8]\n        ],\n        [\n            [7922, 5901],\n            [23, -23],\n            [12, 40],\n            [25, -21]\n        ],\n        [\n            [7982, 5897],\n            [6, -40],\n            [-3, -71],\n            [-47, -45],\n            [13, -36],\n            [-30, -4],\n            [-24, -24]\n        ],\n        [\n            [7897, 5677],\n            [-23, 9],\n            [-11, 30],\n            [-14, 61]\n        ],\n        [\n            [8564, 7339],\n            [24, -70],\n            [7, -38],\n            [0, -68],\n            [-10, -33],\n            [-25, -11],\n            [-22, -25],\n            [-25, -5],\n            [-3, 32],\n            [5, 45],\n            [-13, 61],\n            [21, 10],\n            [-19, 51]\n        ],\n        [\n            [8504, 7288],\n            [2, 5],\n            [12, -2],\n            [11, 27],\n            [20, 2],\n            [11, 4],\n            [4, 15]\n        ],\n        [\n            [5557, 7574],\n            [5, 13]\n        ],\n        [\n            [5562, 7587],\n            [7, 4],\n            [4, 20],\n            [5, 3],\n            [4, -8],\n            [5, -4],\n            [3, -10],\n            [5, -2],\n            [5, -11],\n            [4, 0],\n            [-3, -14],\n            [-3, -7],\n            [1, -5]\n        ],\n        [\n            [5599, 7553],\n            [-6, -2],\n            [-17, -9],\n            [-1, -12],\n            [-4, 0]\n        ],\n        [\n            [6332, 6828],\n            [6, -26],\n            [-3, -13],\n            [9, -45]\n        ],\n        [\n            [6344, 6744],\n            [-19, -1],\n            [-7, 28],\n            [-25, 6]\n        ],\n        [\n            [7922, 5901],\n            [9, 26],\n            [1, 50],\n            [-22, 52],\n            [-2, 58],\n            [-21, 48],\n            [-21, 4],\n            [-6, -20],\n            [-16, -2],\n            [-8, 10],\n            [-30, -35],\n            [0, 53],\n            [7, 62],\n            [-19, 3],\n            [-2, 36],\n            [-12, 18]\n        ],\n        [\n            [7780, 6264],\n            [6, 21],\n            [24, 39]\n        ],\n        [\n            [7837, 6385],\n            [17, -47],\n            [12, -54],\n            [34, 0],\n            [11, -52],\n            [-18, -15],\n            [-8, -21],\n            [34, -36],\n            [23, -70],\n            [17, -52],\n            [21, -41],\n            [7, -41],\n            [-5, -59]\n        ],\n        [\n            [5975, 7012],\n            [10, 49],\n            [14, 41],\n            [0, 2]\n        ],\n        [\n            [5999, 7104],\n            [13, -3],\n            [4, -23],\n            [-15, -22],\n            [-7, -33]\n        ],\n        [\n            [4785, 5315],\n            [-7, 0],\n            [-29, 28],\n            [-25, 45],\n            [-24, 32],\n            [-18, 38]\n        ],\n        [\n            [4682, 5458],\n            [6, 19],\n            [2, 17],\n            [12, 33],\n            [13, 27]\n        ],\n        [\n            [5412, 6408],\n            [-20, -22],\n            [-15, 33],\n            [-44, 25]\n        ],\n        [\n            [5263, 6848],\n            [13, 14],\n            [3, 25],\n            [-3, 24],\n            [19, 23],\n            [8, 19],\n            [14, 17],\n            [2, 45]\n        ],\n        [\n            [5319, 7015],\n            [32, -20],\n            [12, 5],\n            [23, -10],\n            [37, -26],\n            [13, -53],\n            [25, -11],\n            [39, -25],\n            [30, -29],\n            [13, 15],\n            [13, 27],\n            [-6, 45],\n            [9, 29],\n            [20, 28],\n            [19, 8],\n            [37, -12],\n            [10, -27],\n            [10, 0],\n            [9, -10],\n            [28, -7],\n            [6, -19]\n        ],\n        [\n            [5694, 6357],\n            [0, -118],\n            [-32, 0],\n            [0, -25]\n        ],\n        [\n            [5662, 6214],\n            [-111, 113],\n            [-111, 113],\n            [-28, -32]\n        ],\n        [\n            [7271, 5502],\n            [-4, -62],\n            [-12, -16],\n            [-24, -14],\n            [-13, 47],\n            [-5, 85],\n            [13, 96],\n            [19, -33],\n            [13, -42],\n            [13, -61]\n        ],\n        [\n            [5804, 3347],\n            [10, -18],\n            [-9, -29],\n            [-4, -19],\n            [-16, -9],\n            [-5, -19],\n            [-10, -6],\n            [-21, 46],\n            [15, 37],\n            [15, 23],\n            [13, 12],\n            [12, -18]\n        ],\n        [\n            [5631, 8267],\n            [-2, 15],\n            [3, 16],\n            [-13, 10],\n            [-29, 10]\n        ],\n        [\n            [5590, 8318],\n            [-6, 50]\n        ],\n        [\n            [5584, 8368],\n            [32, 18],\n            [47, -4],\n            [27, 6],\n            [4, -12],\n            [15, -4],\n            [26, -29]\n        ],\n        [\n            [5652, 8242],\n            [-7, 19],\n            [-14, 6]\n        ],\n        [\n            [5584, 8368],\n            [1, 44],\n            [14, 37],\n            [26, 20],\n            [22, -44],\n            [22, 1],\n            [6, 46]\n        ],\n        [\n            [5757, 8453],\n            [14, -14],\n            [2, -28],\n            [9, -35]\n        ],\n        [\n            [4759, 6691],\n            [-4, 0],\n            [0, -31],\n            [-17, -2],\n            [-9, -14],\n            [-13, 0],\n            [-10, 8],\n            [-23, -6],\n            [-9, -46],\n            [-9, -5],\n            [-13, -74],\n            [-38, -64],\n            [-9, -81],\n            [-12, -27],\n            [-3, -21],\n            [-63, -5]\n        ],\n        [\n            [4527, 6323],\n            [1, 27],\n            [11, 17],\n            [9, 30],\n            [-2, 20],\n            [10, 42],\n            [15, 38],\n            [9, 9],\n            [8, 35],\n            [0, 31],\n            [10, 37],\n            [19, 21],\n            [18, 60],\n            [0, 1],\n            [14, 23],\n            [26, 6],\n            [22, 41],\n            [14, 16],\n            [23, 49],\n            [-7, 73],\n            [10, 51],\n            [4, 31],\n            [18, 40],\n            [28, 27],\n            [21, 25],\n            [18, 61],\n            [9, 36],\n            [20, 0],\n            [17, -25],\n            [26, 4],\n            [29, -13],\n            [12, -1]\n        ],\n        [\n            [5739, 7906],\n            [6, 9],\n            [19, 6],\n            [20, -19],\n            [12, -2],\n            [12, -16],\n            [-2, -20],\n            [11, -9],\n            [4, -25],\n            [9, -15],\n            [-2, -9],\n            [5, -6],\n            [-7, -4],\n            [-16, 1],\n            [-3, 9],\n            [-6, -5],\n            [2, -11],\n            [-7, -19],\n            [-5, -20],\n            [-7, -6]\n        ],\n        [\n            [5784, 7745],\n            [-5, 27],\n            [3, 25],\n            [-1, 26],\n            [-16, 35],\n            [-9, 25],\n            [-9, 17],\n            [-8, 6]\n        ],\n        [\n            [6376, 4321],\n            [7, -25],\n            [7, -39],\n            [4, -71],\n            [7, -28],\n            [-2, -28],\n            [-5, -18],\n            [-10, 35],\n            [-5, -18],\n            [5, -43],\n            [-2, -25],\n            [-8, -14],\n            [-1, -50],\n            [-11, -69],\n            [-14, -81],\n            [-17, -112],\n            [-11, -82],\n            [-12, -69],\n            [-23, -14],\n            [-24, -25],\n            [-16, 15],\n            [-22, 21],\n            [-8, 31],\n            [-2, 53],\n            [-10, 47],\n            [-2, 42],\n            [5, 43],\n            [13, 10],\n            [0, 20],\n            [13, 45],\n            [2, 37],\n            [-6, 28],\n            [-5, 38],\n            [-2, 54],\n            [9, 33],\n            [4, 38],\n            [14, 2],\n            [15, 12],\n            [11, 10],\n            [12, 1],\n            [16, 34],\n            [23, 36],\n            [8, 30],\n            [-4, 25],\n            [12, -7],\n            [15, 41],\n            [1, 36],\n            [9, 26],\n            [10, -25]\n        ],\n        [\n            [2301, 6586],\n            [-10, -52],\n            [-5, -43],\n            [-2, -79],\n            [-3, -29],\n            [5, -32],\n            [9, -29],\n            [5, -45],\n            [19, -44],\n            [6, -34],\n            [11, -29],\n            [29, -16],\n            [12, -25],\n            [24, 17],\n            [21, 6],\n            [21, 11],\n            [18, 10],\n            [17, 24],\n            [7, 34],\n            [2, 50],\n            [5, 17],\n            [19, 16],\n            [29, 13],\n            [25, -2],\n            [17, 5],\n            [6, -12],\n            [-1, -29],\n            [-15, -35],\n            [-6, -36],\n            [5, -10],\n            [-4, -26],\n            [-7, -46],\n            [-7, 15],\n            [-6, -1]\n        ],\n        [\n            [2438, 5916],\n            [-32, 64],\n            [-14, 19],\n            [-23, 16],\n            [-15, -5],\n            [-22, -22],\n            [-14, -6],\n            [-20, 16],\n            [-21, 11],\n            [-26, 27],\n            [-21, 8],\n            [-31, 28],\n            [-23, 28],\n            [-7, 16],\n            [-16, 3],\n            [-28, 19],\n            [-12, 27],\n            [-30, 34],\n            [-14, 37],\n            [-6, 29],\n            [9, 5],\n            [-3, 17],\n            [7, 16],\n            [0, 20],\n            [-10, 27],\n            [-2, 23],\n            [-9, 30],\n            [-25, 59],\n            [-28, 46],\n            [-13, 37],\n            [-24, 24],\n            [-5, 14],\n            [4, 37],\n            [-14, 13],\n            [-17, 29],\n            [-7, 41],\n            [-14, 5],\n            [-17, 31],\n            [-13, 29],\n            [-1, 19],\n            [-15, 44],\n            [-10, 45],\n            [1, 23],\n            [-20, 23],\n            [-10, -2],\n            [-15, 16],\n            [-5, -24],\n            [5, -28],\n            [2, -45],\n            [10, -24],\n            [21, -41],\n            [4, -14],\n            [4, -4],\n            [4, -20],\n            [5, 1],\n            [6, -38],\n            [8, -15],\n            [6, -21],\n            [17, -30],\n            [10, -55],\n            [8, -26],\n            [8, -28],\n            [1, -31],\n            [13, -2],\n            [12, -27],\n            [10, -26],\n            [-1, -11],\n            [-12, -21],\n            [-5, 0],\n            [-7, 36],\n            [-18, 33],\n            [-20, 29],\n            [-14, 15],\n            [1, 43],\n            [-5, 32],\n            [-13, 19],\n            [-19, 26],\n            [-4, -8],\n            [-7, 16],\n            [-17, 14],\n            [-16, 34],\n            [2, 5],\n            [11, -4],\n            [11, 22],\n            [1, 27],\n            [-22, 42],\n            [-16, 17],\n            [-10, 36],\n            [-11, 39],\n            [-12, 47],\n            [-12, 54]\n        ],\n        [\n            [1746, 6980],\n            [32, 4],\n            [35, 7],\n            [-2, -12],\n            [41, -29],\n            [64, -41],\n            [55, 0],\n            [22, 0],\n            [0, 24],\n            [48, 0],\n            [10, -20],\n            [15, -19],\n            [16, -26],\n            [9, -31],\n            [7, -32],\n            [15, -18],\n            [23, -18],\n            [17, 47],\n            [23, 1],\n            [19, -24],\n            [14, -40],\n            [10, -35],\n            [16, -34],\n            [6, -41],\n            [8, -28],\n            [22, -18],\n            [20, -13],\n            [10, 2]\n        ],\n        [\n            [5599, 7553],\n            [9, 4],\n            [13, 1]\n        ],\n        [\n            [4661, 5921],\n            [10, 11],\n            [4, 35],\n            [9, 1],\n            [20, -16],\n            [15, 11],\n            [11, -4],\n            [4, 13],\n            [112, 1],\n            [6, 42],\n            [-5, 7],\n            [-13, 255],\n            [-14, 255],\n            [43, 1]\n        ],\n        [\n            [5118, 6189],\n            [0, -136],\n            [-15, -39],\n            [-2, -37],\n            [-25, -9],\n            [-38, -5],\n            [-10, -21],\n            [-18, -3]\n        ],\n        [\n            [4680, 5793],\n            [1, 18],\n            [-2, 23],\n            [-11, 16],\n            [-5, 34],\n            [-2, 37]\n        ],\n        [\n            [7737, 5644],\n            [-3, 44],\n            [9, 45],\n            [-10, 35],\n            [3, 65],\n            [-12, 30],\n            [-9, 71],\n            [-5, 75],\n            [-12, 49],\n            [-18, -30],\n            [-32, -42],\n            [-15, 5],\n            [-17, 14],\n            [9, 73],\n            [-6, 56],\n            [-21, 68],\n            [3, 21],\n            [-16, 7],\n            [-20, 49]\n        ],\n        [\n            [7780, 6264],\n            [-16, -14],\n            [-16, -26],\n            [-20, -2],\n            [-12, -64],\n            [-12, -11],\n            [14, -52],\n            [17, -43],\n            [12, -39],\n            [-11, -51],\n            [-9, -11],\n            [6, -30],\n            [19, -47],\n            [3, -33],\n            [0, -27],\n            [11, -54],\n            [-16, -55],\n            [-13, -61]\n        ],\n        [\n            [5538, 7532],\n            [-6, 4],\n            [-8, 19],\n            [-12, 12]\n        ],\n        [\n            [5533, 7629],\n            [8, -10],\n            [4, -9],\n            [9, -6],\n            [10, -12],\n            [-2, -5]\n        ],\n        [\n            [7437, 7970],\n            [29, 10],\n            [53, 51],\n            [42, 28],\n            [24, -18],\n            [29, -1],\n            [19, -28],\n            [28, -2],\n            [40, -15],\n            [27, 41],\n            [-11, 35],\n            [28, 61],\n            [31, -24],\n            [26, -7],\n            [32, -15],\n            [6, -44],\n            [39, -25],\n            [26, 11],\n            [36, 7],\n            [27, -7],\n            [28, -29],\n            [16, -30],\n            [26, 1],\n            [35, -10],\n            [26, 15],\n            [36, 9],\n            [41, 42],\n            [17, -6],\n            [14, -20],\n            [33, 5]\n        ],\n        [\n            [5959, 4377],\n            [21, 5],\n            [34, -17],\n            [7, 8],\n            [19, 1],\n            [10, 18],\n            [17, -1],\n            [30, 23],\n            [22, 34]\n        ],\n        [\n            [6119, 4448],\n            [5, -26],\n            [-1, -59],\n            [3, -52],\n            [1, -92],\n            [5, -29],\n            [-8, -43],\n            [-11, -41],\n            [-18, -36],\n            [-25, -23],\n            [-31, -28],\n            [-32, -64],\n            [-10, -11],\n            [-20, -42],\n            [-11, -13],\n            [-3, -42],\n            [14, -45],\n            [5, -35],\n            [0, -17],\n            [5, 3],\n            [-1, -58],\n            [-4, -28],\n            [6, -10],\n            [-4, -25],\n            [-11, -21],\n            [-23, -20],\n            [-34, -32],\n            [-12, -21],\n            [3, -25],\n            [7, -4],\n            [-3, -31]\n        ],\n        [\n            [5911, 3478],\n            [-21, 0]\n        ],\n        [\n            [5890, 3478],\n            [-2, 26],\n            [-4, 27]\n        ],\n        [\n            [5884, 3531],\n            [-3, 21],\n            [5, 66],\n            [-7, 42],\n            [-13, 83]\n        ],\n        [\n            [5866, 3743],\n            [29, 67],\n            [7, 43],\n            [5, 5],\n            [3, 35],\n            [-5, 17],\n            [1, 44],\n            [6, 41],\n            [0, 75],\n            [-15, 19],\n            [-13, 4],\n            [-6, 15],\n            [-13, 12],\n            [-23, -1],\n            [-2, 22]\n        ],\n        [\n            [5840, 4141],\n            [-2, 42],\n            [84, 49]\n        ],\n        [\n            [5922, 4232],\n            [16, -28],\n            [8, 5],\n            [11, -15],\n            [1, -23],\n            [-6, -28],\n            [2, -42],\n            [19, -36],\n            [8, 41],\n            [12, 12],\n            [-2, 76],\n            [-12, 43],\n            [-10, 19],\n            [-10, -1],\n            [-7, 77],\n            [7, 45]\n        ],\n        [\n            [4661, 5921],\n            [-18, 41],\n            [-17, 43],\n            [-18, 16],\n            [-13, 17],\n            [-16, -1],\n            [-13, -12],\n            [-14, 5],\n            [-10, -19]\n        ],\n        [\n            [4542, 6011],\n            [-2, 32],\n            [8, 29],\n            [3, 55],\n            [-3, 59],\n            [-3, 29],\n            [2, 30],\n            [-7, 28],\n            [-14, 25]\n        ],\n        [\n            [4526, 6298],\n            [6, 20],\n            [108, -1],\n            [-5, 86],\n            [7, 30],\n            [26, 5],\n            [-1, 152],\n            [91, -4],\n            [0, 90]\n        ],\n        [\n            [5922, 4232],\n            [-15, 15],\n            [9, 55],\n            [9, 21],\n            [-6, 49],\n            [6, 48],\n            [5, 16],\n            [-7, 50],\n            [-14, 26]\n        ],\n        [\n            [5909, 4512],\n            [28, -11],\n            [5, -16],\n            [10, -28],\n            [7, -80]\n        ],\n        [\n            [7836, 5425],\n            [7, -5],\n            [16, -36],\n            [12, -40],\n            [2, -39],\n            [-3, -27],\n            [2, -21],\n            [2, -35],\n            [10, -16],\n            [11, -52],\n            [-1, -20],\n            [-19, -4],\n            [-27, 44],\n            [-32, 47],\n            [-4, 30],\n            [-16, 39],\n            [-4, 49],\n            [-10, 32],\n            [4, 43],\n            [-7, 25]\n        ],\n        [\n            [7779, 5439],\n            [5, 11],\n            [23, -26],\n            [2, -30],\n            [18, 7],\n            [9, 24]\n        ],\n        [\n            [8045, 5176],\n            [21, -20],\n            [21, 11],\n            [6, 50],\n            [12, 11],\n            [33, 13],\n            [20, 47],\n            [14, 37]\n        ],\n        [\n            [8206, 5379],\n            [22, 41],\n            [14, 47],\n            [11, 0],\n            [14, -30],\n            [1, -26],\n            [19, -16],\n            [23, -18],\n            [-2, -23],\n            [-19, -3],\n            [5, -29],\n            [-20, -20]\n        ],\n        [\n            [5453, 3369],\n            [-20, 45],\n            [-11, 43],\n            [-6, 58],\n            [-7, 42],\n            [-9, 91],\n            [-1, 71],\n            [-3, 32],\n            [-11, 25],\n            [-15, 48],\n            [-14, 71],\n            [-6, 37],\n            [-23, 58],\n            [-2, 45]\n        ],\n        [\n            [5644, 4022],\n            [23, 14],\n            [18, -4],\n            [11, -13],\n            [0, -5]\n        ],\n        [\n            [5552, 3594],\n            [0, -218],\n            [-25, -30],\n            [-15, -4],\n            [-17, 11],\n            [-13, 4],\n            [-4, 25],\n            [-11, 17],\n            [-14, -30]\n        ],\n        [\n            [9604, 3812],\n            [23, -36],\n            [14, -28],\n            [-10, -14],\n            [-16, 16],\n            [-19, 27],\n            [-18, 31],\n            [-19, 42],\n            [-4, 20],\n            [12, -1],\n            [16, -20],\n            [12, -20],\n            [9, -17]\n        ],\n        [\n            [5412, 6408],\n            [7, -92],\n            [10, -15],\n            [1, -19],\n            [11, -20],\n            [-6, -25],\n            [-11, -120],\n            [-1, -77],\n            [-35, -56],\n            [-12, -78],\n            [11, -22],\n            [0, -38],\n            [18, -1],\n            [-3, -28]\n        ],\n        [\n            [5393, 5795],\n            [-5, -1],\n            [-19, 64],\n            [-6, 3],\n            [-22, -33],\n            [-21, 17],\n            [-15, 3],\n            [-8, -8],\n            [-17, 2],\n            [-16, -25],\n            [-14, -2],\n            [-34, 31],\n            [-13, -15],\n            [-14, 1],\n            [-10, 23],\n            [-28, 22],\n            [-30, -7],\n            [-7, -13],\n            [-4, -34],\n            [-8, -24],\n            [-2, -53]\n        ],\n        [\n            [5236, 5339],\n            [-29, -21],\n            [-11, 3],\n            [-10, -13],\n            [-23, 1],\n            [-15, 37],\n            [-9, 43],\n            [-19, 39],\n            [-21, -1],\n            [-25, 0]\n        ],\n        [\n            [2619, 5713],\n            [-10, 18],\n            [-13, 24],\n            [-6, 20],\n            [-12, 19],\n            [-13, 26],\n            [3, 9],\n            [4, -9],\n            [2, 5]\n        ],\n        [\n            [2690, 5943],\n            [-2, -5],\n            [-2, -13],\n            [3, -22],\n            [-6, -20],\n            [-3, -24],\n            [-1, -26],\n            [1, -15],\n            [1, -27],\n            [-4, -6],\n            [-3, -25],\n            [2, -15],\n            [-6, -16],\n            [2, -16],\n            [4, -9]\n        ],\n        [\n            [5092, 8091],\n            [14, 16],\n            [24, 87],\n            [38, 25],\n            [23, -2]\n        ],\n        [\n            [5863, 9167],\n            [-47, -24],\n            [-22, -5]\n        ],\n        [\n            [5573, 9140],\n            [-17, -2],\n            [-4, -39],\n            [-53, 9],\n            [-7, -33],\n            [-27, 1],\n            [-18, -42],\n            [-28, -66],\n            [-43, -83],\n            [10, -20],\n            [-10, -24],\n            [-27, 1],\n            [-18, -55],\n            [2, -79],\n            [17, -29],\n            [-9, -70],\n            [-23, -40],\n            [-12, -34]\n        ],\n        [\n            [5306, 8535],\n            [-19, 36],\n            [-55, -69],\n            [-37, -13],\n            [-38, 30],\n            [-10, 63],\n            [-9, 137],\n            [26, 38],\n            [73, 49],\n            [55, 61],\n            [51, 82],\n            [66, 115],\n            [47, 44],\n            [76, 74],\n            [61, 26],\n            [46, -3],\n            [42, 49],\n            [51, -3],\n            [50, 12],\n            [87, -43],\n            [-36, -16],\n            [30, -37]\n        ],\n        [\n            [5686, 9657],\n            [-62, -24],\n            [-49, 13],\n            [19, 16],\n            [-16, 19],\n            [57, 11],\n            [11, -22],\n            [40, -13]\n        ],\n        [\n            [5506, 9766],\n            [92, -44],\n            [-70, -23],\n            [-15, -44],\n            [-25, -11],\n            [-13, -49],\n            [-34, -2],\n            [-59, 36],\n            [25, 21],\n            [-42, 17],\n            [-54, 50],\n            [-21, 46],\n            [75, 21],\n            [16, -20],\n            [39, 0],\n            [11, 21],\n            [40, 2],\n            [35, -21]\n        ],\n        [\n            [5706, 9808],\n            [55, -21],\n            [-41, -32],\n            [-81, -7],\n            [-82, 10],\n            [-5, 16],\n            [-40, 1],\n            [-30, 27],\n            [86, 17],\n            [40, -14],\n            [28, 17],\n            [70, -14]\n        ],\n        [\n            [9805, 2640],\n            [6, -24],\n            [20, 24],\n            [8, -25],\n            [0, -25],\n            [-10, -27],\n            [-18, -44],\n            [-14, -24],\n            [10, -28],\n            [-22, -1],\n            [-23, -22],\n            [-8, -39],\n            [-16, -60],\n            [-21, -26],\n            [-14, -17],\n            [-26, 1],\n            [-18, 20],\n            [-30, 4],\n            [-5, 22],\n            [15, 43],\n            [35, 59],\n            [18, 11],\n            [20, 22],\n            [24, 31],\n            [16, 31],\n            [13, 44],\n            [10, 15],\n            [5, 33],\n            [19, 27],\n            [6, -25]\n        ],\n        [\n            [9849, 2922],\n            [20, -63],\n            [1, 41],\n            [13, -16],\n            [4, -45],\n            [22, -19],\n            [19, -5],\n            [16, 22],\n            [14, -6],\n            [-7, -53],\n            [-8, -34],\n            [-22, 1],\n            [-7, -18],\n            [3, -25],\n            [-4, -11],\n            [-11, -32],\n            [-14, -41],\n            [-21, -23],\n            [-5, 15],\n            [-12, 9],\n            [16, 48],\n            [-9, 33],\n            [-30, 23],\n            [1, 22],\n            [20, 20],\n            [5, 46],\n            [-1, 38],\n            [-12, 40],\n            [1, 10],\n            [-13, 25],\n            [-22, 52],\n            [-12, 42],\n            [11, 4],\n            [15, -33],\n            [21, -15],\n            [8, -52]\n        ],\n        [\n            [6475, 6041],\n            [-9, 41],\n            [-22, 98]\n        ],\n        [\n            [6444, 6180],\n            [83, 59],\n            [19, 118],\n            [-13, 42]\n        ],\n        [\n            [6566, 6530],\n            [12, -40],\n            [16, -22],\n            [20, -8],\n            [17, -10],\n            [12, -34],\n            [8, -20],\n            [10, -7],\n            [0, -13],\n            [-10, -36],\n            [-5, -16],\n            [-12, -19],\n            [-10, -41],\n            [-13, 3],\n            [-5, -14],\n            [-5, -30],\n            [4, -39],\n            [-3, -7],\n            [-13, 0],\n            [-17, -22],\n            [-3, -29],\n            [-6, -12],\n            [-18, 0],\n            [-10, -15],\n            [0, -24],\n            [-14, -16],\n            [-15, 5],\n            [-19, -19],\n            [-12, -4]\n        ],\n        [\n            [6557, 6597],\n            [8, 20],\n            [3, -5],\n            [-2, -25],\n            [-4, -10]\n        ],\n        [\n            [6893, 6457],\n            [-20, 15],\n            [-9, 43],\n            [-21, 45],\n            [-51, -12],\n            [-45, -1],\n            [-39, -8]\n        ],\n        [\n            [2836, 5484],\n            [-9, 17],\n            [-6, 32],\n            [7, 16],\n            [-7, 4],\n            [-5, 20],\n            [-14, 16],\n            [-12, -4],\n            [-6, -20],\n            [-11, -15],\n            [-6, -2],\n            [-3, -13],\n            [13, -32],\n            [-7, -7],\n            [-4, -9],\n            [-13, -3],\n            [-5, 35],\n            [-4, -10],\n            [-9, 4],\n            [-5, 24],\n            [-12, 3],\n            [-7, 7],\n            [-12, 0],\n            [-1, -13],\n            [-3, 9]\n        ],\n        [\n            [2707, 5623],\n            [10, -22],\n            [-1, -12],\n            [11, -3],\n            [3, 5],\n            [8, -14],\n            [13, 4],\n            [12, 15],\n            [17, 12],\n            [9, 17],\n            [16, -3],\n            [-1, -6],\n            [15, -2],\n            [12, -10],\n            [10, -18],\n            [10, -16]\n        ],\n        [\n            [3045, 3974],\n            [-28, 33],\n            [-2, 25],\n            [-55, 59],\n            [-50, 65],\n            [-22, 36],\n            [-11, 49],\n            [4, 17],\n            [-23, 77],\n            [-28, 109],\n            [-26, 118],\n            [-11, 27],\n            [-9, 43],\n            [-21, 39],\n            [-20, 24],\n            [9, 26],\n            [-14, 57],\n            [9, 41],\n            [22, 37]\n        ],\n        [\n            [8510, 5555],\n            [2, -40],\n            [2, -33],\n            [-9, -54],\n            [-11, 60],\n            [-13, -30],\n            [9, -43],\n            [-8, -28],\n            [-32, 35],\n            [-8, 42],\n            [8, 28],\n            [-17, 28],\n            [-9, -24],\n            [-13, 2],\n            [-21, -33],\n            [-4, 17],\n            [11, 50],\n            [17, 17],\n            [15, 22],\n            [10, -27],\n            [21, 17],\n            [5, 26],\n            [19, 1],\n            [-1, 46],\n            [22, -28],\n            [3, -30],\n            [2, -21]\n        ],\n        [\n            [8443, 5665],\n            [-10, -20],\n            [-9, -37],\n            [-8, -17],\n            [-17, 40],\n            [5, 16],\n            [7, 17],\n            [3, 36],\n            [16, 4],\n            [-5, -40],\n            [21, 57],\n            [-3, -56]\n        ],\n        [\n            [8291, 5608],\n            [-37, -56],\n            [14, 41],\n            [20, 37],\n            [16, 41],\n            [15, 58],\n            [5, -48],\n            [-18, -33],\n            [-15, -40]\n        ],\n        [\n            [8385, 5760],\n            [16, -18],\n            [18, 0],\n            [0, -25],\n            [-13, -25],\n            [-18, -18],\n            [-1, 28],\n            [2, 30],\n            [-4, 28]\n        ],\n        [\n            [8485, 5776],\n            [8, -66],\n            [-21, 16],\n            [0, -20],\n            [7, -37],\n            [-13, -13],\n            [-1, 42],\n            [-9, 3],\n            [-4, 36],\n            [16, -5],\n            [0, 22],\n            [-17, 45],\n            [27, -1],\n            [7, -22]\n        ],\n        [\n            [8375, 5830],\n            [-7, -51],\n            [-12, 29],\n            [-15, 45],\n            [24, -2],\n            [10, -21]\n        ],\n        [\n            [8369, 6151],\n            [17, -17],\n            [9, 15],\n            [2, -15],\n            [-4, -24],\n            [9, -43],\n            [-7, -49],\n            [-16, -19],\n            [-5, -48],\n            [7, -47],\n            [14, -7],\n            [13, 7],\n            [34, -32],\n            [-2, -32],\n            [9, -15],\n            [-3, -27],\n            [-22, 29],\n            [-10, 31],\n            [-7, -22],\n            [-18, 36],\n            [-25, -9],\n            [-14, 13],\n            [1, 25],\n            [9, 15],\n            [-8, 13],\n            [-4, -21],\n            [-14, 34],\n            [-4, 26],\n            [-1, 56],\n            [11, -19],\n            [3, 92],\n            [9, 54],\n            [17, 0]\n        ],\n        [\n            [9329, 4655],\n            [-8, -6],\n            [-12, 22],\n            [-12, 38],\n            [-6, 45],\n            [4, 6],\n            [3, -18],\n            [8, -13],\n            [14, -38],\n            [13, -20],\n            [-4, -16]\n        ],\n        [\n            [9221, 4734],\n            [-15, -5],\n            [-4, -17],\n            [-15, -14],\n            [-15, -14],\n            [-14, 0],\n            [-23, 18],\n            [-16, 16],\n            [2, 18],\n            [25, -8],\n            [15, 4],\n            [5, 29],\n            [4, 1],\n            [2, -31],\n            [16, 4],\n            [8, 20],\n            [16, 21],\n            [-4, 35],\n            [17, 1],\n            [6, -9],\n            [-1, -33],\n            [-9, -36]\n        ],\n        [\n            [8916, 4904],\n            [48, -41],\n            [51, -34],\n            [19, -30],\n            [16, -30],\n            [4, -34],\n            [46, -37],\n            [7, -31],\n            [-25, -7],\n            [6, -39],\n            [25, -39],\n            [18, -62],\n            [15, 2],\n            [-1, -27],\n            [22, -10],\n            [-9, -11],\n            [30, -25],\n            [-3, -17],\n            [-18, -4],\n            [-7, 16],\n            [-24, 6],\n            [-28, 9],\n            [-22, 38],\n            [-16, 32],\n            [-14, 52],\n            [-36, 26],\n            [-24, -17],\n            [-17, -20],\n            [4, -43],\n            [-22, -20],\n            [-16, 9],\n            [-28, 3]\n        ],\n        [\n            [9253, 4792],\n            [-9, -16],\n            [-5, 35],\n            [-6, 23],\n            [-13, 19],\n            [-16, 25],\n            [-20, 18],\n            [8, 14],\n            [15, -17],\n            [9, -13],\n            [12, -14],\n            [11, -25],\n            [11, -19],\n            [3, -30]\n        ],\n        [\n            [5392, 8233],\n            [19, 18],\n            [43, 27],\n            [35, 20],\n            [28, -10],\n            [2, -14],\n            [27, -1]\n        ],\n        [\n            [5546, 8273],\n            [34, -7],\n            [51, 1]\n        ],\n        [\n            [5653, 8105],\n            [14, -52],\n            [-3, -17],\n            [-14, -6],\n            [-25, -50],\n            [7, -26],\n            [-6, 3]\n        ],\n        [\n            [5626, 7957],\n            [-26, 23],\n            [-20, -8],\n            [-13, 6],\n            [-17, -13],\n            [-14, 21],\n            [-11, -8],\n            [-2, 4]\n        ],\n        [\n            [3159, 6151],\n            [14, -5],\n            [5, -12],\n            [-7, -15],\n            [-21, 1],\n            [-17, -2],\n            [-1, 25],\n            [4, 9],\n            [23, -1]\n        ],\n        [\n            [8628, 7562],\n            [4, -10]\n        ],\n        [\n            [8632, 7552],\n            [-11, 3],\n            [-12, -20],\n            [-8, -20],\n            [1, -42],\n            [-14, -13],\n            [-5, -11],\n            [-11, -17],\n            [-18, -10],\n            [-12, -16],\n            [-1, -25],\n            [-3, -7],\n            [11, -9],\n            [15, -26]\n        ],\n        [\n            [8504, 7288],\n            [-13, 11],\n            [-4, -11],\n            [-8, -5],\n            [-1, 11],\n            [-7, 5],\n            [-8, 10],\n            [8, 26],\n            [7, 7],\n            [-3, 11],\n            [7, 31],\n            [-2, 10],\n            [-16, 7],\n            [-13, 15]\n        ],\n        [\n            [4792, 7249],\n            [-11, -15],\n            [-14, 8],\n            [-15, -6],\n            [5, 46],\n            [-3, 36],\n            [-12, 6],\n            [-7, 22],\n            [2, 39],\n            [11, 21],\n            [2, 24],\n            [6, 36],\n            [-1, 25],\n            [-5, 21],\n            [-1, 20]\n        ],\n        [\n            [6411, 6520],\n            [-2, 43],\n            [7, 31],\n            [8, 6],\n            [8, -18],\n            [1, -35],\n            [-6, -35]\n        ],\n        [\n            [6427, 6512],\n            [-8, -4],\n            [-8, 12]\n        ],\n        [\n            [5630, 7886],\n            [12, 13],\n            [17, -7],\n            [18, 0],\n            [13, -14],\n            [10, 9],\n            [20, 5],\n            [7, 14],\n            [12, 0]\n        ],\n        [\n            [5784, 7745],\n            [12, -11],\n            [13, 9],\n            [13, -10]\n        ],\n        [\n            [5822, 7733],\n            [0, -15],\n            [-13, -13],\n            [-9, 6],\n            [-7, -71]\n        ],\n        [\n            [5629, 7671],\n            [-5, 10],\n            [6, 10],\n            [-7, 7],\n            [-8, -13],\n            [-17, 17],\n            [-2, 25],\n            [-17, 14],\n            [-3, 18],\n            [-15, 24]\n        ],\n        [\n            [8989, 8056],\n            [28, -105],\n            [-41, 19],\n            [-17, -85],\n            [27, -61],\n            [-1, -41],\n            [-21, 36],\n            [-18, -46],\n            [-5, 50],\n            [3, 57],\n            [-3, 64],\n            [6, 45],\n            [2, 79],\n            [-17, 58],\n            [3, 80],\n            [25, 28],\n            [-11, 27],\n            [13, 8],\n            [7, -39],\n            [10, -57],\n            [-1, -58],\n            [11, -59]\n        ],\n        [\n            [5546, 8273],\n            [6, 26],\n            [38, 19]\n        ],\n        [\n            [0, 9132],\n            [68, -45],\n            [73, -59],\n            [-3, -37],\n            [19, -15],\n            [-6, 43],\n            [75, -8],\n            [55, -56],\n            [-28, -26],\n            [-46, -6],\n            [0, -57],\n            [-11, -13],\n            [-26, 2],\n            [-22, 21],\n            [-36, 17],\n            [-7, 26],\n            [-28, 9],\n            [-31, -7],\n            [-16, 20],\n            [6, 22],\n            [-33, -14],\n            [13, -28],\n            [-16, -25]\n        ],\n        [\n            [0, 8896],\n            [0, 236]\n        ],\n        [\n            [0, 9282],\n            [9999, -40],\n            [-30, -3],\n            [-5, 19],\n            [-9964, 24]\n        ],\n        [\n            [0, 9282],\n            [4, 3],\n            [23, 0],\n            [40, -17],\n            [-2, -8],\n            [-29, -14],\n            [-36, -4],\n            [0, 40]\n        ],\n        [\n            [8988, 9383],\n            [-42, -1],\n            [-57, 7],\n            [-5, 3],\n            [27, 23],\n            [34, 6],\n            [40, -23],\n            [3, -15]\n        ],\n        [\n            [9186, 9493],\n            [-32, -23],\n            [-44, 5],\n            [-52, 23],\n            [7, 20],\n            [51, -9],\n            [70, -16]\n        ],\n        [\n            [9029, 9522],\n            [-22, -44],\n            [-102, 1],\n            [-46, -14],\n            [-55, 39],\n            [15, 40],\n            [37, 11],\n            [73, -2],\n            [100, -31]\n        ],\n        [\n            [6598, 9235],\n            [-17, -5],\n            [-91, 8],\n            [-7, 26],\n            [-50, 16],\n            [-4, 32],\n            [28, 13],\n            [-1, 32],\n            [55, 50],\n            [-25, 7],\n            [66, 52],\n            [-7, 27],\n            [62, 31],\n            [91, 38],\n            [93, 11],\n            [48, 22],\n            [54, 8],\n            [19, -23],\n            [-19, -19],\n            [-98, -29],\n            [-85, -28],\n            [-86, -57],\n            [-42, -57],\n            [-43, -57],\n            [5, -49],\n            [54, -49]\n        ],\n        [\n            [0, 8896],\n            [9963, -26],\n            [-36, 4],\n            [25, -31],\n            [17, -49],\n            [13, -16],\n            [3, -24],\n            [-7, -16],\n            [-52, 13],\n            [-78, -44],\n            [-25, -7],\n            [-42, -42],\n            [-40, -36],\n            [-11, -27],\n            [-39, 41],\n            [-73, -46],\n            [-12, 22],\n            [-27, -26],\n            [-37, 8],\n            [-9, -38],\n            [-33, -58],\n            [1, -24],\n            [31, -13],\n            [-4, -86],\n            [-25, -2],\n            [-12, -49],\n            [11, -26],\n            [-48, -30],\n            [-10, -67],\n            [-41, -15],\n            [-9, -60],\n            [-40, -55],\n            [-10, 41],\n            [-12, 86],\n            [-15, 131],\n            [13, 82],\n            [23, 35],\n            [2, 28],\n            [43, 13],\n            [50, 75],\n            [47, 60],\n            [50, 48],\n            [23, 83],\n            [-34, -5],\n            [-17, -49],\n            [-70, -65],\n            [-23, 73],\n            [-72, -20],\n            [-69, -99],\n            [23, -36],\n            [-62, -16],\n            [-43, -6],\n            [2, 43],\n            [-43, 9],\n            [-35, -29],\n            [-85, 10],\n            [-91, -18],\n            [-90, -115],\n            [-106, -139],\n            [43, -8],\n            [14, -37],\n            [27, -13],\n            [18, 30],\n            [30, -4],\n            [40, -65],\n            [1, -50],\n            [-21, -59],\n            [-3, -71],\n            [-12, -94],\n            [-42, -86],\n            [-9, -41],\n            [-38, -69],\n            [-38, -68],\n            [-18, -35],\n            [-37, -34],\n            [-17, -1],\n            [-17, 29],\n            [-38, -44],\n            [-4, -19]\n        ],\n        [\n            [6363, 7799],\n            [-12, -35],\n            [-27, -10],\n            [-28, -61],\n            [25, -56],\n            [-2, -40],\n            [30, -70]\n        ],\n        [\n            [6109, 7624],\n            [-35, 49],\n            [-32, 23],\n            [-24, 34],\n            [20, 10],\n            [23, 49],\n            [-15, 24],\n            [41, 24],\n            [-1, 13],\n            [-25, -10]\n        ],\n        [\n            [6061, 7840],\n            [1, 26],\n            [14, 17],\n            [27, 4],\n            [5, 20],\n            [-7, 33],\n            [12, 30],\n            [-1, 18],\n            [-41, 19],\n            [-16, -1],\n            [-17, 28],\n            [-21, -9],\n            [-35, 20],\n            [0, 12],\n            [-10, 26],\n            [-22, 3],\n            [-2, 18],\n            [7, 12],\n            [-18, 33],\n            [-29, -5],\n            [-8, 3],\n            [-7, -14],\n            [-11, 3]\n        ],\n        [\n            [5777, 8571],\n            [31, 33],\n            [-29, 28]\n        ],\n        [\n            [5863, 9167],\n            [29, 20],\n            [46, -35],\n            [76, -14],\n            [105, -67],\n            [21, -28],\n            [2, -40],\n            [-31, -31],\n            [-45, -15],\n            [-124, 44],\n            [-21, -7],\n            [45, -43],\n            [2, -28],\n            [2, -60],\n            [36, -18],\n            [22, -15],\n            [3, 28],\n            [-17, 26],\n            [18, 22],\n            [67, -37],\n            [24, 15],\n            [-19, 43],\n            [65, 58],\n            [25, -4],\n            [26, -20],\n            [16, 40],\n            [-23, 35],\n            [14, 36],\n            [-21, 36],\n            [78, -18],\n            [16, -34],\n            [-35, -7],\n            [0, -33],\n            [22, -20],\n            [43, 13],\n            [7, 38],\n            [58, 28],\n            [97, 50],\n            [20, -3],\n            [-27, -35],\n            [35, -7],\n            [19, 21],\n            [52, 1],\n            [42, 25],\n            [31, -36],\n            [32, 39],\n            [-29, 35],\n            [14, 19],\n            [82, -18],\n            [39, -18],\n            [100, -68],\n            [19, 31],\n            [-28, 31],\n            [-1, 13],\n            [-34, 6],\n            [10, 28],\n            [-15, 46],\n            [-1, 19],\n            [51, 53],\n            [18, 54],\n            [21, 11],\n            [74, -15],\n            [5, -33],\n            [-26, -48],\n            [17, -19],\n            [9, -41],\n            [-6, -81],\n            [31, -36],\n            [-12, -40],\n            [-55, -84],\n            [32, -8],\n            [11, 21],\n            [31, 15],\n            [7, 29],\n            [24, 29],\n            [-16, 33],\n            [13, 39],\n            [-31, 5],\n            [-6, 33],\n            [22, 59],\n            [-36, 48],\n            [50, 40],\n            [-7, 42],\n            [14, 2],\n            [15, -33],\n            [-11, -57],\n            [29, -11],\n            [-12, 43],\n            [46, 23],\n            [58, 3],\n            [51, -34],\n            [-25, 49],\n            [-2, 63],\n            [48, 12],\n            [67, -2],\n            [60, 7],\n            [-23, 31],\n            [33, 39],\n            [31, 2],\n            [54, 29],\n            [74, 8],\n            [9, 16],\n            [73, 6],\n            [23, -14],\n            [62, 32],\n            [51, -1],\n            [8, 25],\n            [26, 25],\n            [66, 25],\n            [48, -19],\n            [-38, -15],\n            [63, -9],\n            [7, -29],\n            [25, 14],\n            [82, -1],\n            [62, -29],\n            [23, -22],\n            [-7, -30],\n            [-31, -18],\n            [-73, -33],\n            [-21, -17],\n            [35, -8],\n            [41, -15],\n            [25, 11],\n            [14, -38],\n            [12, 15],\n            [44, 10],\n            [90, -10],\n            [6, -28],\n            [116, -9],\n            [2, 46],\n            [59, -11],\n            [44, 1],\n            [45, -32],\n            [13, -37],\n            [-17, -25],\n            [35, -47],\n            [44, -24],\n            [27, 62],\n            [44, -26],\n            [48, 16],\n            [53, -18],\n            [21, 16],\n            [45, -8],\n            [-20, 55],\n            [37, 25],\n            [251, -38],\n            [24, -35],\n            [72, -45],\n            [112, 11],\n            [56, -10],\n            [23, -24],\n            [-4, -44],\n            [35, -16],\n            [37, 12],\n            [49, 1],\n            [52, -11],\n            [53, 6],\n            [49, -52],\n            [34, 19],\n            [-23, 37],\n            [13, 27],\n            [88, -17],\n            [58, 4],\n            [80, -29],\n            [-9960, -25]\n        ],\n        [\n            [7918, 9684],\n            [-157, -23],\n            [51, 77],\n            [23, 7],\n            [21, -4],\n            [70, -33],\n            [-8, -24]\n        ],\n        [\n            [6420, 9816],\n            [-37, -8],\n            [-25, -4],\n            [-4, -10],\n            [-33, -10],\n            [-30, 14],\n            [16, 19],\n            [-62, 2],\n            [54, 10],\n            [43, 1],\n            [5, -16],\n            [16, 14],\n            [26, 10],\n            [42, -13],\n            [-11, -9]\n        ],\n        [\n            [7775, 9718],\n            [-60, -8],\n            [-78, 17],\n            [-46, 23],\n            [-21, 42],\n            [-38, 12],\n            [72, 40],\n            [60, 14],\n            [54, -30],\n            [64, -57],\n            [-7, -53]\n        ],\n        [\n            [5844, 4990],\n            [11, -33],\n            [-1, -35],\n            [-8, -7]\n        ],\n        [\n            [5821, 4978],\n            [7, -6],\n            [16, 18]\n        ],\n        [\n            [4526, 6298],\n            [1, 25]\n        ],\n        [\n            [6188, 6023],\n            [-4, 26],\n            [-8, 17],\n            [-2, 24],\n            [-15, 21],\n            [-15, 50],\n            [-7, 48],\n            [-20, 40],\n            [-12, 10],\n            [-18, 56],\n            [-4, 41],\n            [2, 35],\n            [-16, 66],\n            [-13, 23],\n            [-15, 12],\n            [-10, 34],\n            [2, 13],\n            [-8, 31],\n            [-8, 13],\n            [-11, 44],\n            [-17, 48],\n            [-14, 40],\n            [-14, 0],\n            [5, 33],\n            [1, 20],\n            [3, 24]\n        ],\n        [\n            [6344, 6744],\n            [11, -51],\n            [14, -13],\n            [5, -21],\n            [18, -25],\n            [2, -24],\n            [-3, -20],\n            [4, -20],\n            [8, -16],\n            [4, -20],\n            [4, -14]\n        ],\n        [\n            [6427, 6512],\n            [5, -22]\n        ],\n        [\n            [6444, 6180],\n            [-80, -23],\n            [-26, -26],\n            [-20, -62],\n            [-13, -10],\n            [-7, 20],\n            [-11, -3],\n            [-27, 6],\n            [-5, 5],\n            [-32, -1],\n            [-7, -5],\n            [-12, 15],\n            [-7, -29],\n            [3, -25],\n            [-12, -19]\n        ],\n        [\n            [5943, 5617],\n            [-4, 1],\n            [0, 29],\n            [-3, 20],\n            [-14, 24],\n            [-4, 42],\n            [4, 44],\n            [-13, 4],\n            [-2, -13],\n            [-17, -3],\n            [7, -17],\n            [2, -36],\n            [-15, -32],\n            [-14, -43],\n            [-14, -6],\n            [-23, 34],\n            [-11, -12],\n            [-3, -17],\n            [-14, -11],\n            [-1, -12],\n            [-28, 0],\n            [-3, 12],\n            [-20, 2],\n            [-10, -10],\n            [-8, 5],\n            [-14, 34],\n            [-5, 17],\n            [-20, -9],\n            [-8, -27],\n            [-7, -53],\n            [-10, -11],\n            [-8, -6]\n        ],\n        [\n            [5663, 5567],\n            [-2, 2]\n        ],\n        [\n            [5635, 5716],\n            [0, 14],\n            [-10, 17],\n            [-1, 35],\n            [-5, 23],\n            [-10, -4],\n            [3, 22],\n            [7, 25],\n            [-3, 24],\n            [9, 18],\n            [-6, 14],\n            [7, 36],\n            [13, 44],\n            [24, -4],\n            [-1, 234]\n        ],\n        [\n            [6023, 6357],\n            [9, -58],\n            [-6, -10],\n            [4, -61],\n            [11, -71],\n            [10, -14],\n            [15, -22]\n        ],\n        [\n            [5943, 5624],\n            [0, -7]\n        ],\n        [\n            [5943, 5617],\n            [0, -46]\n        ],\n        [\n            [5944, 5309],\n            [-17, -28],\n            [-20, 1],\n            [-22, -14],\n            [-18, 13],\n            [-11, -16]\n        ],\n        [\n            [5682, 5544],\n            [-19, 23]\n        ],\n        [\n            [4535, 5861],\n            [-11, 46],\n            [-14, 21],\n            [12, 11],\n            [14, 41],\n            [6, 31]\n        ],\n        [\n            [4536, 5789],\n            [-4, 45]\n        ],\n        [\n            [9502, 4438],\n            [8, -20],\n            [-19, 0],\n            [-11, 37],\n            [17, -15],\n            [5, -2]\n        ],\n        [\n            [9467, 4474],\n            [-11, -1],\n            [-17, 6],\n            [-5, 9],\n            [1, 23],\n            [19, -9],\n            [9, -12],\n            [4, -16]\n        ],\n        [\n            [9490, 4490],\n            [-4, -11],\n            [-21, 52],\n            [-5, 35],\n            [9, 0],\n            [10, -47],\n            [11, -29]\n        ],\n        [\n            [9440, 4565],\n            [1, -12],\n            [-22, 25],\n            [-15, 21],\n            [-10, 20],\n            [4, 6],\n            [13, -14],\n            [23, -27],\n            [6, -19]\n        ],\n        [\n            [9375, 4623],\n            [-5, -3],\n            [-13, 14],\n            [-11, 24],\n            [1, 10],\n            [17, -25],\n            [11, -20]\n        ],\n        [\n            [4682, 5458],\n            [-8, 5],\n            [-20, 24],\n            [-14, 31],\n            [-5, 22],\n            [-3, 43]\n        ],\n        [\n            [2561, 5848],\n            [-3, -14],\n            [-16, 1],\n            [-10, 6],\n            [-12, 12],\n            [-15, 3],\n            [-8, 13]\n        ],\n        [\n            [6198, 5735],\n            [9, -11],\n            [5, -25],\n            [13, -24],\n            [14, -1],\n            [26, 16],\n            [30, 7],\n            [25, 18],\n            [13, 4],\n            [10, 11],\n            [16, 2]\n        ],\n        [\n            [6359, 5732],\n            [0, -1],\n            [0, -25],\n            [0, -59],\n            [0, -31],\n            [-13, -36],\n            [-19, -50]\n        ],\n        [\n            [6359, 5732],\n            [9, 1],\n            [13, 9],\n            [14, 6],\n            [14, 20],\n            [10, 0],\n            [1, -16],\n            [-3, -35],\n            [0, -31],\n            [-6, -21],\n            [-7, -64],\n            [-14, -66],\n            [-17, -75],\n            [-24, -87],\n            [-23, -66],\n            [-33, -81],\n            [-28, -48],\n            [-42, -58],\n            [-25, -45],\n            [-31, -72],\n            [-6, -31],\n            [-6, -14]\n        ],\n        [\n            [3412, 5410],\n            [34, -11],\n            [2, 10],\n            [23, 4],\n            [30, -15]\n        ],\n        [\n            [3489, 5306],\n            [10, -35],\n            [-4, -25]\n        ],\n        [\n            [5626, 7957],\n            [-8, -15],\n            [-5, -24]\n        ],\n        [\n            [5380, 7746],\n            [7, 5]\n        ],\n        [\n            [5663, 8957],\n            [-47, -17],\n            [-27, -41],\n            [4, -36],\n            [-44, -48],\n            [-54, -50],\n            [-20, -84],\n            [20, -41],\n            [26, -33],\n            [-25, -67],\n            [-29, -14],\n            [-11, -99],\n            [-15, -55],\n            [-34, 6],\n            [-16, -47],\n            [-32, -3],\n            [-9, 56],\n            [-23, 67],\n            [-21, 84]\n        ],\n        [\n            [5890, 3478],\n            [-5, -26],\n            [-17, -6],\n            [-16, 32],\n            [0, 20],\n            [7, 22],\n            [3, 17],\n            [8, 5],\n            [14, -11]\n        ],\n        [\n            [5999, 7104],\n            [-2, 45],\n            [7, 25]\n        ],\n        [\n            [6004, 7174],\n            [7, 13],\n            [7, 13],\n            [2, 33],\n            [9, -12],\n            [31, 17],\n            [14, -12],\n            [23, 1],\n            [32, 22],\n            [15, -1],\n            [32, 9]\n        ],\n        [\n            [5051, 5420],\n            [-22, -12]\n        ],\n        [\n            [7849, 5777],\n            [-25, 28],\n            [-24, -2],\n            [4, 47],\n            [-24, 0],\n            [-2, -65],\n            [-15, -87],\n            [-10, -52],\n            [2, -43],\n            [18, -2],\n            [12, -53],\n            [5, -52],\n            [15, -33],\n            [17, -7],\n            [14, -31]\n        ],\n        [\n            [7779, 5439],\n            [-11, 23],\n            [-4, 29],\n            [-15, 34],\n            [-14, 28],\n            [-4, -35],\n            [-5, 33],\n            [3, 37],\n            [8, 56]\n        ],\n        [\n            [6883, 7252],\n            [16, 60],\n            [-6, 44],\n            [-20, 14],\n            [7, 26],\n            [23, -3],\n            [13, 33],\n            [9, 38],\n            [37, 13],\n            [-6, -27],\n            [4, -17],\n            [12, 2]\n        ],\n        [\n            [6497, 7255],\n            [-5, 42],\n            [4, 62],\n            [-22, 20],\n            [8, 40],\n            [-19, 4],\n            [6, 49],\n            [26, -14],\n            [25, 19],\n            [-20, 35],\n            [-8, 34],\n            [-23, -15],\n            [-3, -43],\n            [-8, 38]\n        ],\n        [\n            [6554, 7498],\n            [31, 1],\n            [-4, 29],\n            [24, 21],\n            [23, 34],\n            [37, -31],\n            [3, -47],\n            [11, -12],\n            [30, 2],\n            [9, -10],\n            [14, -61],\n            [32, -41],\n            [18, -28],\n            [29, -29],\n            [37, -25],\n            [-1, -36]\n        ],\n        [\n            [8471, 4532],\n            [3, 14],\n            [24, 13],\n            [19, 2],\n            [9, 8],\n            [10, -8],\n            [-10, -16],\n            [-29, -25],\n            [-23, -17]\n        ],\n        [\n            [3286, 5693],\n            [16, 8],\n            [6, -2],\n            [-1, -44],\n            [-23, -7],\n            [-5, 6],\n            [8, 16],\n            [-1, 23]\n        ],\n        [\n            [5233, 7240],\n            [31, 24],\n            [19, -7],\n            [-1, -30],\n            [24, 22],\n            [2, -12],\n            [-14, -29],\n            [0, -27],\n            [9, -15],\n            [-3, -51],\n            [-19, -29],\n            [6, -33],\n            [14, -1],\n            [7, -28],\n            [11, -9]\n        ],\n        [\n            [6004, 7174],\n            [-11, 27],\n            [11, 22],\n            [-17, -5],\n            [-23, 13],\n            [-19, -34],\n            [-43, -6],\n            [-22, 31],\n            [-30, 2],\n            [-6, -24],\n            [-20, -7],\n            [-26, 31],\n            [-31, -1],\n            [-16, 59],\n            [-21, 33],\n            [14, 46],\n            [-18, 28],\n            [31, 56],\n            [43, 3],\n            [12, 45],\n            [53, -8],\n            [33, 38],\n            [32, 17],\n            [46, 1],\n            [49, -42],\n            [40, -22],\n            [32, 9],\n            [24, -6],\n            [33, 31]\n        ],\n        [\n            [5777, 7539],\n            [3, -23],\n            [25, -19],\n            [-5, -14],\n            [-33, -3],\n            [-12, -19],\n            [-23, -31],\n            [-9, 27],\n            [0, 12]\n        ],\n        [\n            [8382, 6499],\n            [-17, -95],\n            [-12, -49],\n            [-14, 50],\n            [-4, 44],\n            [17, 58],\n            [22, 45],\n            [13, -18],\n            [-5, -35]\n        ],\n        [\n            [6088, 4781],\n            [-12, -73],\n            [1, -33],\n            [18, -22],\n            [1, -15],\n            [-8, -36],\n            [2, -18],\n            [-2, -28],\n            [10, -37],\n            [11, -58],\n            [10, -13]\n        ],\n        [\n            [5909, 4512],\n            [-15, 18],\n            [-18, 10],\n            [-11, 10],\n            [-12, 15]\n        ],\n        [\n            [5844, 4990],\n            [10, 8],\n            [31, -1],\n            [56, 4]\n        ],\n        [\n            [6061, 7840],\n            [-22, -5],\n            [-18, -19],\n            [-26, -3],\n            [-24, -22],\n            [1, -37],\n            [14, -14],\n            [28, 4],\n            [-5, -21],\n            [-31, -11],\n            [-37, -34],\n            [-16, 12],\n            [6, 28],\n            [-30, 17],\n            [5, 12],\n            [26, 19],\n            [-8, 14],\n            [-43, 15],\n            [-2, 22],\n            [-25, -8],\n            [-11, -32],\n            [-21, -44]\n        ],\n        [\n            [3517, 3063],\n            [-12, -38],\n            [-31, -32],\n            [-21, 11],\n            [-15, -6],\n            [-26, 25],\n            [-18, -1],\n            [-17, 32]\n        ],\n        [\n            [679, 6185],\n            [-4, -10],\n            [-7, 8],\n            [1, 17],\n            [-4, 21],\n            [1, 7],\n            [5, 10],\n            [-2, 11],\n            [1, 6],\n            [3, -1],\n            [10, -10],\n            [5, -5],\n            [5, -8],\n            [7, -21],\n            [-1, -3],\n            [-11, -13],\n            [-9, -9]\n        ],\n        [\n            [664, 6277],\n            [-9, -4],\n            [-5, 12],\n            [-3, 5],\n            [0, 4],\n            [3, 5],\n            [9, -6],\n            [8, -9],\n            [-3, -7]\n        ],\n        [\n            [646, 6309],\n            [-1, -7],\n            [-15, 2],\n            [2, 7],\n            [14, -2]\n        ],\n        [\n            [621, 6317],\n            [-2, -3],\n            [-2, 1],\n            [-9, 2],\n            [-4, 13],\n            [-1, 2],\n            [7, 8],\n            [3, -3],\n            [8, -20]\n        ],\n        [\n            [574, 6356],\n            [-4, -6],\n            [-9, 11],\n            [1, 4],\n            [5, 6],\n            [6, -1],\n            [1, -14]\n        ],\n        [\n            [3135, 7724],\n            [5, -19],\n            [-30, -29],\n            [-29, -20],\n            [-29, -18],\n            [-15, -35],\n            [-4, -13],\n            [-1, -31],\n            [10, -32],\n            [11, -1],\n            [-3, 21],\n            [8, -13],\n            [-2, -17],\n            [-19, -9],\n            [-13, 1],\n            [-20, -10],\n            [-12, -3],\n            [-17, -3],\n            [-23, -17],\n            [41, 11],\n            [8, -11],\n            [-39, -18],\n            [-17, 0],\n            [0, 7],\n            [-8, -16],\n            [8, -3],\n            [-6, -43],\n            [-20, -45],\n            [-2, 15],\n            [-6, 3],\n            [-9, 15],\n            [5, -32],\n            [7, -10],\n            [1, -23],\n            [-9, -23],\n            [-16, -47],\n            [-2, 3],\n            [8, 40],\n            [-14, 22],\n            [-3, 49],\n            [-5, -25],\n            [5, -38],\n            [-18, 10],\n            [19, -19],\n            [1, -57],\n            [8, -4],\n            [3, -20],\n            [4, -59],\n            [-17, -44],\n            [-29, -18],\n            [-18, -34],\n            [-14, -4],\n            [-14, -22],\n            [-4, -20],\n            [-31, -38],\n            [-16, -28],\n            [-13, -35],\n            [-4, -42],\n            [5, -41],\n            [9, -51],\n            [13, -41],\n            [0, -26],\n            [13, -69],\n            [-1, -39],\n            [-1, -23],\n            [-7, -36],\n            [-8, -8],\n            [-14, 7],\n            [-4, 26],\n            [-11, 14],\n            [-15, 51],\n            [-13, 45],\n            [-4, 23],\n            [6, 39],\n            [-8, 33],\n            [-22, 49],\n            [-10, 9],\n            [-28, -27],\n            [-5, 3],\n            [-14, 28],\n            [-17, 14],\n            [-32, -7],\n            [-24, 7],\n            [-21, -5],\n            [-12, -9],\n            [5, -15],\n            [0, -24],\n            [5, -12],\n            [-5, -8],\n            [-10, 9],\n            [-11, -11],\n            [-20, 2],\n            [-20, 31],\n            [-25, -8],\n            [-20, 14],\n            [-17, -4],\n            [-24, -14],\n            [-25, -44],\n            [-27, -25],\n            [-16, -28],\n            [-6, -27],\n            [0, -41],\n            [1, -28],\n            [5, -20]\n        ],\n        [\n            [1746, 6980],\n            [-4, 30],\n            [-18, 34],\n            [-13, 7],\n            [-3, 17],\n            [-16, 3],\n            [-10, 16],\n            [-26, 6],\n            [-7, 9],\n            [-3, 32],\n            [-27, 60],\n            [-23, 82],\n            [1, 14],\n            [-13, 19],\n            [-21, 50],\n            [-4, 48],\n            [-15, 32],\n            [6, 49],\n            [-1, 51],\n            [-8, 45],\n            [10, 56],\n            [4, 53],\n            [3, 54],\n            [-5, 79],\n            [-9, 51],\n            [-8, 27],\n            [4, 12],\n            [40, -20],\n            [15, -56],\n            [7, 15],\n            [-5, 49],\n            [-9, 48]\n        ],\n        [\n            [750, 8432],\n            [-28, -23],\n            [-14, 15],\n            [-4, 28],\n            [25, 21],\n            [15, 9],\n            [18, -4],\n            [12, -18],\n            [-24, -28]\n        ],\n        [\n            [401, 8597],\n            [-18, -9],\n            [-18, 11],\n            [-17, 16],\n            [28, 10],\n            [22, -6],\n            [3, -22]\n        ],\n        [\n            [230, 8826],\n            [17, -12],\n            [17, 6],\n            [23, -15],\n            [27, -8],\n            [-2, -7],\n            [-21, -12],\n            [-21, 13],\n            [-11, 11],\n            [-24, -4],\n            [-7, 5],\n            [2, 23]\n        ],\n        [\n            [1374, 8295],\n            [-15, 22],\n            [-25, 19],\n            [-8, 52],\n            [-36, 47],\n            [-15, 56],\n            [-26, 4],\n            [-44, 2],\n            [-33, 17],\n            [-57, 61],\n            [-27, 11],\n            [-49, 21],\n            [-38, -5],\n            [-55, 27],\n            [-33, 25],\n            [-30, -12],\n            [5, -41],\n            [-15, -4],\n            [-32, -12],\n            [-25, -20],\n            [-30, -13],\n            [-4, 35],\n            [12, 58],\n            [30, 18],\n            [-8, 15],\n            [-35, -33],\n            [-19, -39],\n            [-40, -42],\n            [20, -29],\n            [-26, -42],\n            [-30, -25],\n            [-28, -18],\n            [-7, -26],\n            [-43, -31],\n            [-9, -28],\n            [-32, -25],\n            [-20, 5],\n            [-25, -17],\n            [-29, -20],\n            [-23, -20],\n            [-47, -16],\n            [-5, 9],\n            [31, 28],\n            [27, 18],\n            [29, 33],\n            [35, 6],\n            [14, 25],\n            [38, 35],\n            [6, 12],\n            [21, 21],\n            [5, 44],\n            [14, 35],\n            [-32, -18],\n            [-9, 11],\n            [-15, -22],\n            [-18, 30],\n            [-8, -21],\n            [-10, 29],\n            [-28, -23],\n            [-17, 0],\n            [-3, 35],\n            [5, 21],\n            [-17, 22],\n            [-37, -12],\n            [-23, 28],\n            [-19, 14],\n            [0, 34],\n            [-22, 25],\n            [11, 34],\n            [23, 33],\n            [10, 30],\n            [22, 4],\n            [19, -9],\n            [23, 28],\n            [20, -5],\n            [21, 19],\n            [-5, 27],\n            [-16, 10],\n            [21, 23],\n            [-17, -1],\n            [-30, -13],\n            [-8, -13],\n            [-22, 13],\n            [-39, -6],\n            [-41, 14],\n            [-12, 24],\n            [-35, 34],\n            [39, 25],\n            [62, 29],\n            [23, 0],\n            [-4, -30],\n            [59, 2],\n            [-23, 37],\n            [-34, 23],\n            [-20, 29],\n            [-26, 25],\n            [-38, 19],\n            [15, 31],\n            [49, 2],\n            [35, 27],\n            [7, 29],\n            [28, 28],\n            [28, 6],\n            [52, 27],\n            [26, -4],\n            [42, 31],\n            [42, -12],\n            [21, -27],\n            [12, 11],\n            [47, -3],\n            [-2, -14],\n            [43, -10],\n            [28, 6],\n            [59, -18],\n            [53, -6],\n            [21, -8],\n            [37, 10],\n            [42, -18],\n            [31, -8]\n        ],\n        [\n            [3018, 5753],\n            [-1, -14],\n            [-16, -7],\n            [9, -26],\n            [0, -31],\n            [-12, -35],\n            [10, -47],\n            [12, 4],\n            [6, 43],\n            [-8, 21],\n            [-2, 45],\n            [35, 24],\n            [-4, 27],\n            [10, 19],\n            [10, -41],\n            [19, -1],\n            [18, -33],\n            [1, -20],\n            [25, 0],\n            [30, 6],\n            [16, -27],\n            [21, -7],\n            [16, 18],\n            [0, 15],\n            [34, 4],\n            [34, 1],\n            [-24, -18],\n            [10, -28],\n            [22, -4],\n            [21, -29],\n            [4, -48],\n            [15, 2],\n            [11, -14]\n        ],\n        [\n            [8001, 6331],\n            [-37, -51],\n            [-24, -56],\n            [-6, -41],\n            [22, -62],\n            [25, -77],\n            [26, -37],\n            [17, -47],\n            [12, -109],\n            [-3, -104],\n            [-24, -39],\n            [-31, -38],\n            [-23, -49],\n            [-35, -55],\n            [-10, 37],\n            [8, 40],\n            [-21, 34]\n        ],\n        [\n            [9661, 4085],\n            [-9, -8],\n            [-9, 26],\n            [1, 16],\n            [17, -34]\n        ],\n        [\n            [9641, 4175],\n            [4, -47],\n            [-7, 7],\n            [-6, -3],\n            [-4, 16],\n            [0, 45],\n            [13, -18]\n        ],\n        [\n            [6475, 6041],\n            [-21, -16],\n            [-5, -26],\n            [-1, -20],\n            [-27, -25],\n            [-45, -28],\n            [-24, -41],\n            [-13, -3],\n            [-8, 3],\n            [-16, -25],\n            [-18, -11],\n            [-23, -3],\n            [-7, -3],\n            [-6, -16],\n            [-8, -4],\n            [-4, -15],\n            [-14, 1],\n            [-9, -8],\n            [-19, 3],\n            [-7, 35],\n            [1, 32],\n            [-5, 17],\n            [-5, 44],\n            [-8, 24],\n            [5, 3],\n            [-2, 27],\n            [3, 12],\n            [-1, 25]\n        ],\n        [\n            [5817, 3752],\n            [11, 0],\n            [14, -10],\n            [9, 7],\n            [15, -6]\n        ],\n        [\n            [5911, 3478],\n            [-7, -43],\n            [-3, -49],\n            [-7, -27],\n            [-19, -30],\n            [-5, -8],\n            [-12, -30],\n            [-8, -31],\n            [-16, -42],\n            [-31, -61],\n            [-20, -36],\n            [-21, -26],\n            [-29, -23],\n            [-14, -3],\n            [-3, -17],\n            [-17, 9],\n            [-14, -11],\n            [-30, 11],\n            [-17, -7],\n            [-12, 3],\n            [-28, -23],\n            [-24, -10],\n            [-17, -22],\n            [-13, -1],\n            [-11, 21],\n            [-10, 1],\n            [-12, 26],\n            [-1, -8],\n            [-4, 16],\n            [0, 34],\n            [-9, 40],\n            [9, 11],\n            [0, 45],\n            [-19, 55],\n            [-14, 50],\n            [0, 1],\n            [-20, 76]\n        ],\n        [\n            [5840, 4141],\n            [-21, -8],\n            [-15, -23],\n            [-4, -21],\n            [-10, -4],\n            [-24, -49],\n            [-15, -38],\n            [-10, -2],\n            [-9, 7],\n            [-31, 7]\n        ]\n    ],\n    \"transform\": {\n        \"scale\": [0.036003600360036005, 0.016927109510951093],\n        \"translate\": [-180, -85.609038]\n    }\n}\n;\n  Datamap.prototype.abwTopo = '__ABW__';\n  Datamap.prototype.afgTopo = '__AFG__';\n  Datamap.prototype.agoTopo = '__AGO__';\n  Datamap.prototype.aiaTopo = '__AIA__';\n  Datamap.prototype.albTopo = '__ALB__';\n  Datamap.prototype.aldTopo = '__ALD__';\n  Datamap.prototype.andTopo = '__AND__';\n  Datamap.prototype.areTopo = '__ARE__';\n  Datamap.prototype.argTopo = '__ARG__';\n  Datamap.prototype.armTopo = '__ARM__';\n  Datamap.prototype.asmTopo = '__ASM__';\n  Datamap.prototype.ataTopo = '__ATA__';\n  Datamap.prototype.atcTopo = '__ATC__';\n  Datamap.prototype.atfTopo = '__ATF__';\n  Datamap.prototype.atgTopo = '__ATG__';\n  Datamap.prototype.ausTopo = '__AUS__';\n  Datamap.prototype.autTopo = '__AUT__';\n  Datamap.prototype.azeTopo = '__AZE__';\n  Datamap.prototype.bdiTopo = '__BDI__';\n  Datamap.prototype.belTopo = '__BEL__';\n  Datamap.prototype.benTopo = '__BEN__';\n  Datamap.prototype.bfaTopo = '__BFA__';\n  Datamap.prototype.bgdTopo = '__BGD__';\n  Datamap.prototype.bgrTopo = '__BGR__';\n  Datamap.prototype.bhrTopo = '__BHR__';\n  Datamap.prototype.bhsTopo = '__BHS__';\n  Datamap.prototype.bihTopo = '__BIH__';\n  Datamap.prototype.bjnTopo = '__BJN__';\n  Datamap.prototype.blmTopo = '__BLM__';\n  Datamap.prototype.blrTopo = '__BLR__';\n  Datamap.prototype.blzTopo = '__BLZ__';\n  Datamap.prototype.bmuTopo = '__BMU__';\n  Datamap.prototype.bolTopo = '__BOL__';\n  Datamap.prototype.braTopo = '__BRA__';\n  Datamap.prototype.brbTopo = '__BRB__';\n  Datamap.prototype.brnTopo = '__BRN__';\n  Datamap.prototype.btnTopo = '__BTN__';\n  Datamap.prototype.norTopo = '__NOR__';\n  Datamap.prototype.bwaTopo = '__BWA__';\n  Datamap.prototype.cafTopo = '__CAF__';\n  Datamap.prototype.canTopo = '__CAN__';\n  Datamap.prototype.cheTopo = '__CHE__';\n  Datamap.prototype.chlTopo = '__CHL__';\n  Datamap.prototype.chnTopo = '__CHN__';\n  Datamap.prototype.civTopo = '__CIV__';\n  Datamap.prototype.clpTopo = '__CLP__';\n  Datamap.prototype.cmrTopo = '__CMR__';\n  Datamap.prototype.codTopo = '__COD__';\n  Datamap.prototype.cogTopo = '__COG__';\n  Datamap.prototype.cokTopo = '__COK__';\n  Datamap.prototype.colTopo = '__COL__';\n  Datamap.prototype.comTopo = '__COM__';\n  Datamap.prototype.cpvTopo = '__CPV__';\n  Datamap.prototype.criTopo = '__CRI__';\n  Datamap.prototype.csiTopo = '__CSI__';\n  Datamap.prototype.cubTopo = '__CUB__';\n  Datamap.prototype.cuwTopo = '__CUW__';\n  Datamap.prototype.cymTopo = '__CYM__';\n  Datamap.prototype.cynTopo = '__CYN__';\n  Datamap.prototype.cypTopo = '__CYP__';\n  Datamap.prototype.czeTopo = '__CZE__';\n  Datamap.prototype.deuTopo = '__DEU__';\n  Datamap.prototype.djiTopo = '__DJI__';\n  Datamap.prototype.dmaTopo = '__DMA__';\n  Datamap.prototype.dnkTopo = '__DNK__';\n  Datamap.prototype.domTopo = '__DOM__';\n  Datamap.prototype.dzaTopo = '__DZA__';\n  Datamap.prototype.ecuTopo = '__ECU__';\n  Datamap.prototype.egyTopo = '__EGY__';\n  Datamap.prototype.eriTopo = '__ERI__';\n  Datamap.prototype.esbTopo = '__ESB__';\n  Datamap.prototype.espTopo = '__ESP__';\n  Datamap.prototype.estTopo = '__EST__';\n  Datamap.prototype.ethTopo = '__ETH__';\n  Datamap.prototype.finTopo = '__FIN__';\n  Datamap.prototype.fjiTopo = '__FJI__';\n  Datamap.prototype.flkTopo = '__FLK__';\n  Datamap.prototype.fraTopo = '__FRA__';\n  Datamap.prototype.froTopo = '__FRO__';\n  Datamap.prototype.fsmTopo = '__FSM__';\n  Datamap.prototype.gabTopo = '__GAB__';\n  Datamap.prototype.psxTopo = '__PSX__';\n  Datamap.prototype.gbrTopo = '__GBR__';\n  Datamap.prototype.geoTopo = '__GEO__';\n  Datamap.prototype.ggyTopo = '__GGY__';\n  Datamap.prototype.ghaTopo = '__GHA__';\n  Datamap.prototype.gibTopo = '__GIB__';\n  Datamap.prototype.ginTopo = '__GIN__';\n  Datamap.prototype.gmbTopo = '__GMB__';\n  Datamap.prototype.gnbTopo = '__GNB__';\n  Datamap.prototype.gnqTopo = '__GNQ__';\n  Datamap.prototype.grcTopo = '__GRC__';\n  Datamap.prototype.grdTopo = '__GRD__';\n  Datamap.prototype.grlTopo = '__GRL__';\n  Datamap.prototype.gtmTopo = '__GTM__';\n  Datamap.prototype.gumTopo = '__GUM__';\n  Datamap.prototype.guyTopo = '__GUY__';\n  Datamap.prototype.hkgTopo = '__HKG__';\n  Datamap.prototype.hmdTopo = '__HMD__';\n  Datamap.prototype.hndTopo = '__HND__';\n  Datamap.prototype.hrvTopo = '__HRV__';\n  Datamap.prototype.htiTopo = '__HTI__';\n  Datamap.prototype.hunTopo = '__HUN__';\n  Datamap.prototype.idnTopo = '__IDN__';\n  Datamap.prototype.imnTopo = '__IMN__';\n  Datamap.prototype.indTopo = '__IND__';\n  Datamap.prototype.ioaTopo = '__IOA__';\n  Datamap.prototype.iotTopo = '__IOT__';\n  Datamap.prototype.irlTopo = '__IRL__';\n  Datamap.prototype.irnTopo = '__IRN__';\n  Datamap.prototype.irqTopo = '__IRQ__';\n  Datamap.prototype.islTopo = '__ISL__';\n  Datamap.prototype.isrTopo = '__ISR__';\n  Datamap.prototype.itaTopo = '__ITA__';\n  Datamap.prototype.jamTopo = '__JAM__';\n  Datamap.prototype.jeyTopo = '__JEY__';\n  Datamap.prototype.jorTopo = '__JOR__';\n  Datamap.prototype.jpnTopo = '__JPN__';\n  Datamap.prototype.kabTopo = '__KAB__';\n  Datamap.prototype.kasTopo = '__KAS__';\n  Datamap.prototype.kazTopo = '__KAZ__';\n  Datamap.prototype.kenTopo = '__KEN__';\n  Datamap.prototype.kgzTopo = '__KGZ__';\n  Datamap.prototype.khmTopo = '__KHM__';\n  Datamap.prototype.kirTopo = '__KIR__';\n  Datamap.prototype.knaTopo = '__KNA__';\n  Datamap.prototype.korTopo = '__KOR__';\n  Datamap.prototype.kosTopo = '__KOS__';\n  Datamap.prototype.kwtTopo = '__KWT__';\n  Datamap.prototype.laoTopo = '__LAO__';\n  Datamap.prototype.lbnTopo = '__LBN__';\n  Datamap.prototype.lbrTopo = '__LBR__';\n  Datamap.prototype.lbyTopo = '__LBY__';\n  Datamap.prototype.lcaTopo = '__LCA__';\n  Datamap.prototype.lieTopo = '__LIE__';\n  Datamap.prototype.lkaTopo = '__LKA__';\n  Datamap.prototype.lsoTopo = '__LSO__';\n  Datamap.prototype.ltuTopo = '__LTU__';\n  Datamap.prototype.luxTopo = '__LUX__';\n  Datamap.prototype.lvaTopo = '__LVA__';\n  Datamap.prototype.macTopo = '__MAC__';\n  Datamap.prototype.mafTopo = '__MAF__';\n  Datamap.prototype.marTopo = '__MAR__';\n  Datamap.prototype.mcoTopo = '__MCO__';\n  Datamap.prototype.mdaTopo = '__MDA__';\n  Datamap.prototype.mdgTopo = '__MDG__';\n  Datamap.prototype.mdvTopo = '__MDV__';\n  Datamap.prototype.mexTopo = '__MEX__';\n  Datamap.prototype.mhlTopo = '__MHL__';\n  Datamap.prototype.mkdTopo = '__MKD__';\n  Datamap.prototype.mliTopo = '__MLI__';\n  Datamap.prototype.mltTopo = '__MLT__';\n  Datamap.prototype.mmrTopo = '__MMR__';\n  Datamap.prototype.mneTopo = '__MNE__';\n  Datamap.prototype.mngTopo = '__MNG__';\n  Datamap.prototype.mnpTopo = '__MNP__';\n  Datamap.prototype.mozTopo = '__MOZ__';\n  Datamap.prototype.mrtTopo = '__MRT__';\n  Datamap.prototype.msrTopo = '__MSR__';\n  Datamap.prototype.musTopo = '__MUS__';\n  Datamap.prototype.mwiTopo = '__MWI__';\n  Datamap.prototype.mysTopo = '__MYS__';\n  Datamap.prototype.namTopo = '__NAM__';\n  Datamap.prototype.nclTopo = '__NCL__';\n  Datamap.prototype.nerTopo = '__NER__';\n  Datamap.prototype.nfkTopo = '__NFK__';\n  Datamap.prototype.ngaTopo = '__NGA__';\n  Datamap.prototype.nicTopo = '__NIC__';\n  Datamap.prototype.niuTopo = '__NIU__';\n  Datamap.prototype.nldTopo = '__NLD__';\n  Datamap.prototype.nplTopo = '__NPL__';\n  Datamap.prototype.nruTopo = '__NRU__';\n  Datamap.prototype.nulTopo = '__NUL__';\n  Datamap.prototype.nzlTopo = '__NZL__';\n  Datamap.prototype.omnTopo = '__OMN__';\n  Datamap.prototype.pakTopo = '__PAK__';\n  Datamap.prototype.panTopo = '__PAN__';\n  Datamap.prototype.pcnTopo = '__PCN__';\n  Datamap.prototype.perTopo = '__PER__';\n  Datamap.prototype.pgaTopo = '__PGA__';\n  Datamap.prototype.phlTopo = '__PHL__';\n  Datamap.prototype.plwTopo = '__PLW__';\n  Datamap.prototype.pngTopo = '__PNG__';\n  Datamap.prototype.polTopo = '__POL__';\n  Datamap.prototype.priTopo = '__PRI__';\n  Datamap.prototype.prkTopo = '__PRK__';\n  Datamap.prototype.prtTopo = '__PRT__';\n  Datamap.prototype.pryTopo = '__PRY__';\n  Datamap.prototype.pyfTopo = '__PYF__';\n  Datamap.prototype.qatTopo = '__QAT__';\n  Datamap.prototype.rouTopo = '__ROU__';\n  Datamap.prototype.rusTopo = '__RUS__';\n  Datamap.prototype.rwaTopo = '__RWA__';\n  Datamap.prototype.sahTopo = '__SAH__';\n  Datamap.prototype.sauTopo = '__SAU__';\n  Datamap.prototype.scrTopo = '__SCR__';\n  Datamap.prototype.sdnTopo = '__SDN__';\n  Datamap.prototype.sdsTopo = '__SDS__';\n  Datamap.prototype.senTopo = '__SEN__';\n  Datamap.prototype.serTopo = '__SER__';\n  Datamap.prototype.sgpTopo = '__SGP__';\n  Datamap.prototype.sgsTopo = '__SGS__';\n  Datamap.prototype.shnTopo = '__SHN__';\n  Datamap.prototype.slbTopo = '__SLB__';\n  Datamap.prototype.sleTopo = '__SLE__';\n  Datamap.prototype.slvTopo = '__SLV__';\n  Datamap.prototype.smrTopo = '__SMR__';\n  Datamap.prototype.solTopo = '__SOL__';\n  Datamap.prototype.somTopo = '__SOM__';\n  Datamap.prototype.spmTopo = '__SPM__';\n  Datamap.prototype.srbTopo = '__SRB__';\n  Datamap.prototype.stpTopo = '__STP__';\n  Datamap.prototype.surTopo = '__SUR__';\n  Datamap.prototype.svkTopo = '__SVK__';\n  Datamap.prototype.svnTopo = '__SVN__';\n  Datamap.prototype.sweTopo = '__SWE__';\n  Datamap.prototype.swzTopo = '__SWZ__';\n  Datamap.prototype.sxmTopo = '__SXM__';\n  Datamap.prototype.sycTopo = '__SYC__';\n  Datamap.prototype.syrTopo = '__SYR__';\n  Datamap.prototype.tcaTopo = '__TCA__';\n  Datamap.prototype.tcdTopo = '__TCD__';\n  Datamap.prototype.tgoTopo = '__TGO__';\n  Datamap.prototype.thaTopo = '__THA__';\n  Datamap.prototype.tjkTopo = '__TJK__';\n  Datamap.prototype.tkmTopo = '__TKM__';\n  Datamap.prototype.tlsTopo = '__TLS__';\n  Datamap.prototype.tonTopo = '__TON__';\n  Datamap.prototype.ttoTopo = '__TTO__';\n  Datamap.prototype.tunTopo = '__TUN__';\n  Datamap.prototype.turTopo = '__TUR__';\n  Datamap.prototype.tuvTopo = '__TUV__';\n  Datamap.prototype.twnTopo = '__TWN__';\n  Datamap.prototype.tzaTopo = '__TZA__';\n  Datamap.prototype.ugaTopo = '__UGA__';\n  Datamap.prototype.ukrTopo = '__UKR__';\n  Datamap.prototype.umiTopo = '__UMI__';\n  Datamap.prototype.uryTopo = '__URY__';\n  Datamap.prototype.usaTopo = {\"type\":\"Topology\",\"transform\":{\"scale\":[0.03514630243024302,0.005240860686068607],\"translate\":[-178.123152,18.948267]},\"objects\":{\"usa\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"Polygon\",\"id\":\"AL\",\"arcs\":[[0,1,2,3,4]],\"properties\":{\"name\":\"Alabama\"}},{\"type\":\"MultiPolygon\",\"id\":\"AK\",\"arcs\":[[[5]],[[6]],[[7]],[[8]],[[9]],[[10]],[[11]],[[12]],[[13]],[[14]],[[15]],[[16]],[[17]],[[18]],[[19]],[[20]],[[21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[30]],[[31]],[[32]],[[33]],[[34]],[[35]],[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]]],\"properties\":{\"name\":\"Alaska\"}},{\"type\":\"Polygon\",\"id\":\"AZ\",\"arcs\":[[44,45,46,47,48]],\"properties\":{\"name\":\"Arizona\"}},{\"type\":\"Polygon\",\"id\":\"AR\",\"arcs\":[[49,50,51,52,53,54]],\"properties\":{\"name\":\"Arkansas\"}},{\"type\":\"Polygon\",\"id\":\"CA\",\"arcs\":[[55,-47,56,57]],\"properties\":{\"name\":\"California\"}},{\"type\":\"Polygon\",\"id\":\"CO\",\"arcs\":[[58,59,60,61,62,63]],\"properties\":{\"name\":\"Colorado\"}},{\"type\":\"Polygon\",\"id\":\"CT\",\"arcs\":[[64,65,66,67]],\"properties\":{\"name\":\"Connecticut\"}},{\"type\":\"Polygon\",\"id\":\"DE\",\"arcs\":[[68,69,70,71]],\"properties\":{\"name\":\"Delaware\"}},{\"type\":\"Polygon\",\"id\":\"DC\",\"arcs\":[[72,73]],\"properties\":{\"name\":\"District of Columbia\"}},{\"type\":\"Polygon\",\"id\":\"FL\",\"arcs\":[[74,75,-2]],\"properties\":{\"name\":\"Florida\"}},{\"type\":\"Polygon\",\"id\":\"GA\",\"arcs\":[[76,77,-75,-1,78,79]],\"properties\":{\"name\":\"Georgia\"}},{\"type\":\"MultiPolygon\",\"id\":\"HI\",\"arcs\":[[[80]],[[81]],[[82]],[[83]],[[84]]],\"properties\":{\"name\":\"Hawaii\"}},{\"type\":\"Polygon\",\"id\":\"ID\",\"arcs\":[[85,86,87,88,89,90,91]],\"properties\":{\"name\":\"Idaho\"}},{\"type\":\"Polygon\",\"id\":\"IL\",\"arcs\":[[92,93,94,95,96,97]],\"properties\":{\"name\":\"Illinois\"}},{\"type\":\"Polygon\",\"id\":\"IN\",\"arcs\":[[98,99,-95,100,101]],\"properties\":{\"name\":\"Indiana\"}},{\"type\":\"Polygon\",\"id\":\"IA\",\"arcs\":[[102,-98,103,104,105,106]],\"properties\":{\"name\":\"Iowa\"}},{\"type\":\"Polygon\",\"id\":\"KS\",\"arcs\":[[107,108,-60,109]],\"properties\":{\"name\":\"Kansas\"}},{\"type\":\"Polygon\",\"id\":\"KY\",\"arcs\":[[110,111,112,113,-96,-100,114]],\"properties\":{\"name\":\"Kentucky\"}},{\"type\":\"Polygon\",\"id\":\"LA\",\"arcs\":[[115,116,117,-52]],\"properties\":{\"name\":\"Louisiana\"}},{\"type\":\"Polygon\",\"id\":\"ME\",\"arcs\":[[118,119]],\"properties\":{\"name\":\"Maine\"}},{\"type\":\"MultiPolygon\",\"id\":\"MD\",\"arcs\":[[[120]],[[-71,121,122,123,124,-74,125,126,127]]],\"properties\":{\"name\":\"Maryland\"}},{\"type\":\"Polygon\",\"id\":\"MA\",\"arcs\":[[128,129,130,131,-68,132,133,134]],\"properties\":{\"name\":\"Massachusetts\"}},{\"type\":\"MultiPolygon\",\"id\":\"MI\",\"arcs\":[[[-102,135,136]],[[137]],[[138,139]],[[140]]],\"properties\":{\"name\":\"Michigan\"}},{\"type\":\"Polygon\",\"id\":\"MN\",\"arcs\":[[-107,141,142,143,144]],\"properties\":{\"name\":\"Minnesota\"}},{\"type\":\"Polygon\",\"id\":\"MS\",\"arcs\":[[-4,145,-116,-51,146]],\"properties\":{\"name\":\"Mississippi\"}},{\"type\":\"Polygon\",\"id\":\"MO\",\"arcs\":[[-97,-114,147,-55,148,-108,149,-104]],\"properties\":{\"name\":\"Missouri\"}},{\"type\":\"Polygon\",\"id\":\"MT\",\"arcs\":[[150,151,-92,152,153]],\"properties\":{\"name\":\"Montana\"}},{\"type\":\"Polygon\",\"id\":\"NE\",\"arcs\":[[-105,-150,-110,-59,154,155]],\"properties\":{\"name\":\"Nebraska\"}},{\"type\":\"Polygon\",\"id\":\"NV\",\"arcs\":[[156,-48,-56,157,-88]],\"properties\":{\"name\":\"Nevada\"}},{\"type\":\"Polygon\",\"id\":\"NH\",\"arcs\":[[-135,158,159,-120,160]],\"properties\":{\"name\":\"New Hampshire\"}},{\"type\":\"Polygon\",\"id\":\"NJ\",\"arcs\":[[161,-69,162,163]],\"properties\":{\"name\":\"New Jersey\"}},{\"type\":\"Polygon\",\"id\":\"NM\",\"arcs\":[[164,165,166,-45,-62]],\"properties\":{\"name\":\"New Mexico\"}},{\"type\":\"Polygon\",\"id\":\"NY\",\"arcs\":[[-133,-67,167,-164,168,169,170]],\"properties\":{\"name\":\"New York\"}},{\"type\":\"Polygon\",\"id\":\"NC\",\"arcs\":[[171,172,-80,173,174]],\"properties\":{\"name\":\"North Carolina\"}},{\"type\":\"Polygon\",\"id\":\"ND\",\"arcs\":[[175,-154,176,-143]],\"properties\":{\"name\":\"North Dakota\"}},{\"type\":\"Polygon\",\"id\":\"OH\",\"arcs\":[[177,-115,-99,-137,178,179]],\"properties\":{\"name\":\"Ohio\"}},{\"type\":\"Polygon\",\"id\":\"OK\",\"arcs\":[[-149,-54,180,-165,-61,-109]],\"properties\":{\"name\":\"Oklahoma\"}},{\"type\":\"Polygon\",\"id\":\"OR\",\"arcs\":[[-89,-158,-58,181,182]],\"properties\":{\"name\":\"Oregon\"}},{\"type\":\"Polygon\",\"id\":\"PA\",\"arcs\":[[-163,-72,-128,183,-180,184,-169]],\"properties\":{\"name\":\"Pennsylvania\"}},{\"type\":\"MultiPolygon\",\"id\":\"RI\",\"arcs\":[[[185,-130]],[[186,-65,-132]]],\"properties\":{\"name\":\"Rhode Island\"}},{\"type\":\"Polygon\",\"id\":\"SC\",\"arcs\":[[187,-77,-173]],\"properties\":{\"name\":\"South Carolina\"}},{\"type\":\"Polygon\",\"id\":\"SD\",\"arcs\":[[-142,-106,-156,188,-151,-176]],\"properties\":{\"name\":\"South Dakota\"}},{\"type\":\"Polygon\",\"id\":\"TN\",\"arcs\":[[189,-174,-79,-5,-147,-50,-148,-113]],\"properties\":{\"name\":\"Tennessee\"}},{\"type\":\"Polygon\",\"id\":\"TX\",\"arcs\":[[-53,-118,190,-166,-181]],\"properties\":{\"name\":\"Texas\"}},{\"type\":\"Polygon\",\"id\":\"UT\",\"arcs\":[[191,-63,-49,-157,-87]],\"properties\":{\"name\":\"Utah\"}},{\"type\":\"Polygon\",\"id\":\"VT\",\"arcs\":[[-134,-171,192,-159]],\"properties\":{\"name\":\"Vermont\"}},{\"type\":\"MultiPolygon\",\"id\":\"VA\",\"arcs\":[[[193,-123]],[[120]],[[-126,-73,-125,194,-175,-190,-112,195]]],\"properties\":{\"name\":\"Virginia\"}},{\"type\":\"MultiPolygon\",\"id\":\"WA\",\"arcs\":[[[-183,196,-90]],[[197]],[[198]]],\"properties\":{\"name\":\"Washington\"}},{\"type\":\"Polygon\",\"id\":\"WV\",\"arcs\":[[-184,-127,-196,-111,-178]],\"properties\":{\"name\":\"West Virginia\"}},{\"type\":\"Polygon\",\"id\":\"WI\",\"arcs\":[[199,-93,-103,-145,200,-140]],\"properties\":{\"name\":\"Wisconsin\"}},{\"type\":\"Polygon\",\"id\":\"WY\",\"arcs\":[[-189,-155,-64,-192,-86,-152]],\"properties\":{\"name\":\"Wyoming\"}}]}},\"arcs\":[[[2632,3060],[5,-164],[7,-242],[4,-53],[3,-30],[-2,-19],[4,-11],[-5,-25],[0,-24],[-2,-32],[2,-57],[-2,-51],[3,-52]],[[2649,2300],[-14,-1],[-59,0],[-1,-25],[6,-37],[-1,-31],[2,-16],[-4,-28]],[[2578,2162],[-4,-6],[-7,31],[-1,47],[-2,6],[-3,-36],[-1,-34],[-7,9]],[[2553,2179],[-2,291],[6,363],[4,209],[-3,20]],[[2558,3062],[24,1],[50,-3]],[[1324,6901],[1,32],[6,-19],[-1,-32],[-8,4],[2,15]],[[1317,6960],[5,-23],[-3,-33],[-2,11],[0,45]],[[1285,7153],[6,5],[3,-8],[-1,-28],[-6,-6],[-5,17],[3,20]],[[1267,7137],[12,-7],[3,-36],[13,-41],[4,-25],[0,-21],[3,-4],[1,-27],[5,-27],[0,-25],[3,8],[2,-19],[1,-74],[-3,-17],[-7,3],[-3,38],[-2,-3],[-6,28],[-2,-10],[-5,10],[1,-28],[5,7],[3,-10],[-2,-39],[-5,4],[-9,49],[-2,25],[1,26],[-7,-2],[0,20],[5,2],[5,18],[-2,31],[-6,7],[-1,50],[-2,25],[-4,-18],[-2,28],[4,14],[-3,32],[2,8]],[[1263,6985],[5,-12],[4,15],[4,-7],[-4,-28],[-6,8],[-3,24]],[[1258,7247],[-4,19],[5,13],[15,-18],[7,1],[5,-36],[9,-29],[-1,-22],[-5,-11],[-6,5],[-5,-14],[-6,9],[-7,-9],[-1,45],[0,30],[-5,1],[-1,16]],[[1252,7162],[-4,14],[-4,32],[0,24],[3,11],[4,-11],[0,20],[12,-35],[1,-33],[-4,-5],[-3,-37],[3,-11],[-3,-43],[-5,9],[0,-27],[-3,13],[-2,54],[5,25]],[[1207,7331],[8,38],[3,-16],[7,-13],[6,-2],[0,-30],[6,-99],[0,-85],[-1,-22],[-4,13],[-10,84],[-7,25],[3,20],[-3,48],[-8,39]],[[1235,7494],[10,-15],[5,2],[0,-14],[8,-52],[-5,8],[-2,-18],[6,-27],[2,-48],[-6,-13],[-2,-16],[-10,-35],[-3,1],[-1,37],[2,22],[-1,32],[-3,40],[0,21],[-2,51],[-4,22],[-1,38],[7,-36]],[[1203,7324],[4,0],[4,-35],[-2,-24],[-6,-5],[0,38],[0,26]],[[1207,7331],[-5,7],[-3,26],[-6,18],[-5,37],[-6,17],[1,30],[4,10],[1,26],[3,-11],[8,-1],[6,17],[8,-23],[-5,-26],[2,-9],[4,28],[10,-9],[5,-21],[-3,-38],[3,-3],[3,-50],[-7,-7],[-14,41],[0,-42],[-4,-17]],[[883,7871],[-12,-48],[-1,-19],[-9,-12],[2,29],[10,30],[7,34],[3,-14]],[[870,7943],[-2,-39],[-4,-41],[-6,14],[5,47],[7,19]],[[863,9788],[3,-8],[15,-9],[8,5],[10,0],[12,-7],[7,4],[7,-15],[12,-18],[16,-4],[5,10],[11,6],[4,14],[12,2],[0,-9],[7,5],[15,-15],[9,-24],[10,-11],[2,-11],[8,-2],[8,-18],[1,-11],[5,9],[6,-7],[0,-1783],[13,-16],[2,17],[14,-24],[8,30],[18,4],[-3,-52],[4,-17],[10,-17],[2,-27],[29,-101],[4,-63],[6,17],[12,31],[7,1],[3,23],[0,34],[5,0],[1,31],[9,7],[13,26],[13,-45],[-1,-27],[3,-27],[7,-7],[10,-40],[-1,-12],[4,-22],[12,-25],[19,-110],[3,-29],[6,-29],[8,-65],[9,-55],[-3,-23],[9,-9],[-2,-33],[7,-14],[1,-38],[7,2],[14,-40],[9,-7],[5,-19],[4,-5],[1,-19],[9,-5],[3,-23],[-4,-43],[1,-36],[4,-58],[-4,-15],[-6,-53],[-10,-39],[-3,20],[-4,-6],[-3,39],[1,17],[-3,20],[7,21],[-2,7],[-7,-26],[-3,17],[-4,-10],[-12,42],[4,46],[-8,-15],[0,-23],[-6,17],[-1,22],[4,24],[-1,24],[-6,-19],[-6,42],[-3,-8],[-2,36],[5,23],[6,0],[-2,28],[3,36],[-5,-1],[-9,32],[-6,37],[-15,27],[0,77],[-4,9],[1,31],[-5,9],[-8,42],[-2,22],[-12,7],[-14,56],[-6,132],[-3,-30],[1,-27],[6,-53],[-1,-8],[3,-43],[0,-28],[-6,6],[-4,31],[-6,6],[-8,-9],[0,45],[-5,38],[-5,-12],[-17,40],[-2,-11],[10,-13],[7,-31],[3,-1],[1,-25],[4,-30],[-10,-16],[-5,10],[0,-26],[-8,20],[-2,14],[-5,0],[-13,38],[-10,33],[-1,20],[-5,30],[-14,21],[-9,21],[-14,26],[-9,24],[1,26],[2,-9],[3,17],[-3,38],[4,21],[-2,9],[-7,-40],[-14,-26],[-18,10],[-14,24],[-1,18],[-7,-4],[-7,14],[-17,12],[-9,1],[-21,-10],[-8,-7],[-10,27],[-12,12],[-3,17],[-2,28],[-8,-2],[-3,-25],[-15,34],[-2,14],[-15,-27],[-7,-32],[-3,30],[3,17],[4,-5],[14,22],[-2,17],[-6,-8],[-3,22],[-6,3],[-6,55],[-3,-13],[-8,-8],[-3,8],[-3,-18],[-11,6],[-1,-20],[-7,-5],[-3,7],[2,36],[-3,-1],[-5,-38],[7,-12],[1,-27],[4,-30],[-3,-31],[-5,10],[-2,-15],[6,-7],[3,-41],[-8,-9],[-4,9],[-7,-12],[-3,10],[-9,-2],[0,16],[-4,-10],[-3,-20],[-3,18],[-5,-25],[2,-12],[-6,-15],[-6,-2],[-3,-20],[-6,-17],[-4,6],[-5,-21],[-4,1],[-8,-43],[-9,-3],[-3,14],[-5,-23],[-11,17],[2,33],[8,11],[4,-2],[2,13],[8,25],[0,21],[-11,-28],[-9,16],[-1,12],[5,48],[8,34],[1,29],[2,5],[1,30],[-4,34],[10,12],[19,48],[4,-19],[6,-5],[9,20],[-10,26],[-4,20],[-7,-2],[-5,9],[-2,-8],[-9,-14],[-4,-26],[-9,-6],[-9,-30],[-1,-20],[-7,-11],[-2,-22],[-5,-13],[-2,-39],[-10,-25],[5,-20],[-4,-29],[-9,-5],[-1,-38],[-8,-13],[-3,15],[-4,-29],[-5,-1],[1,-21],[-11,-13],[-2,-57],[12,-3],[10,-16],[3,-19],[-4,-30],[-7,-19],[-6,-1],[0,-17],[-4,-6],[1,-21],[-4,-31],[-9,-29],[-5,0],[-5,-11],[-5,2],[-4,-11],[2,-16],[-7,-8],[-2,-23],[-5,14],[-5,-45],[-9,4],[1,-24],[-6,6],[-3,-11],[0,-32],[-6,-50],[-10,-6],[-7,-23],[-2,-13],[-5,18],[-8,-48],[-2,13],[-5,-4],[-1,-27],[-5,-10],[-6,4],[-4,-27],[8,-9],[-9,-60],[-25,-20],[-6,-54],[-2,12],[1,33],[-5,6],[-6,-13],[-1,-14],[-10,-22],[-4,-25],[-1,18],[-2,-21],[-6,14],[-10,-33],[-8,2],[1,25],[-4,24],[-3,-20],[1,-21],[-11,-64],[-3,16],[-1,-24],[-8,4],[-1,38],[-4,8],[-2,-14],[4,-16],[-2,-27],[-5,-13],[-5,29],[-5,2],[-1,-11],[5,-17],[-9,-27],[6,-7],[0,-13],[-5,9],[-7,-25],[-15,1],[-7,-16],[0,-13],[-8,-15],[-6,6],[-2,35],[6,12],[4,43],[6,1],[13,28],[10,1],[4,-27],[3,20],[-1,23],[6,10],[7,0],[8,50],[10,45],[12,40],[15,18],[6,-9],[6,12],[1,-17],[-3,-19],[4,-14],[1,23],[7,2],[2,-15],[5,-5],[0,18],[-8,15],[0,11],[5,49],[6,28],[9,27],[15,24],[10,35],[5,-13],[4,5],[-1,22],[1,21],[8,44],[11,28],[8,38],[0,21],[7,148],[11,40],[-1,31],[-27,-45],[-8,6],[-2,18],[-5,9],[-1,21],[-4,-10],[-3,-32],[5,-41],[-6,-18],[-5,7],[-9,64],[-6,33],[-4,0],[-2,-24],[-3,-4],[-4,19],[-5,4],[-2,32],[-16,-37],[-13,-26],[-1,-14],[-11,-22],[-6,20],[5,23],[-1,54],[-4,57],[7,24],[-6,49],[-5,27],[-4,39],[-6,17],[-2,-34],[-7,-8],[-12,-22],[-14,-9],[-7,2],[-7,12],[-1,30],[-5,9],[-9,42],[-8,8],[-8,46],[6,21],[1,39],[-5,-8],[0,24],[2,19],[-6,18],[0,-19],[-7,8],[-1,32],[-6,4],[-3,22],[0,27],[-5,-12],[-1,26],[7,6],[-6,30],[10,2],[0,35],[2,24],[18,77],[4,23],[3,-5],[-2,33],[7,55],[6,22],[11,9],[8,-9],[12,-33],[8,4],[11,32],[11,49],[6,6],[1,-13],[13,0],[12,10],[11,52],[0,12],[-5,48],[-1,28],[-8,31],[-3,26],[8,-7],[8,22],[0,20],[-10,39],[-8,-30],[-7,5],[-6,-17],[-8,-4],[-2,-11],[-9,-17],[-2,-28],[-5,-12],[-2,34],[-5,7],[-4,-26],[-2,12],[-10,19],[-20,-1],[-14,-21],[-6,-3],[-11,13],[-22,14],[-6,12],[-3,19],[2,26],[-8,22],[2,24],[5,12],[-2,31],[-8,0],[-6,8],[-13,6],[-7,16],[-10,16],[-1,19],[16,27],[20,43],[15,27],[8,-15],[8,-3],[2,21],[-5,3],[-1,18],[20,29],[22,22],[12,2],[7,-7],[-4,-32],[2,-22],[-3,-15],[4,-26],[8,5],[10,-5],[11,6],[4,-10],[7,-2],[7,10],[8,-11],[9,42],[5,2],[5,-8],[2,24],[-12,11],[-11,-9],[1,31],[-8,34],[-10,10],[-2,30],[7,8],[9,-31],[-1,-24],[4,-18],[10,-22],[2,23],[-11,30],[5,54],[-4,10],[-11,-12],[-11,3],[-2,10],[-6,-10],[-24,23],[0,24],[-7,54],[-6,19],[-9,17],[-19,46],[-9,18],[-8,4],[-13,31],[-12,18],[-1,6],[9,10],[4,29],[1,59],[25,-4],[31,13],[8,11],[12,29],[12,45],[3,45],[5,38],[10,33],[5,24],[13,38],[2,-10],[11,-3],[16,20],[10,21],[24,64],[9,4],[1,-10],[9,7],[9,-2],[18,9],[17,28],[17,58],[7,13],[2,-10],[26,-24],[2,-17],[-9,-22],[-4,-1],[0,-29],[14,9],[0,16],[6,14],[2,-8],[5,33],[13,-30],[-2,-23],[8,-6],[5,-14],[7,22],[13,1],[7,7],[18,-7],[10,-8],[-5,-45],[17,-12],[2,-11],[16,-20],[1,9],[12,13],[11,-1],[0,-11],[7,-1],[7,15],[11,2],[9,-6],[11,-16],[5,3],[7,-22],[4,9],[7,-7],[5,-13]],[[717,7456],[-1,-8],[-9,13],[7,49],[6,4],[4,45],[5,-40],[4,14],[8,-22],[0,-31],[-11,-4],[-5,-13],[-8,-7]],[[688,7363],[8,25],[-8,6],[0,22],[6,14],[5,-10],[0,-22],[3,15],[0,32],[5,-15],[1,21],[5,-12],[5,0],[5,11],[7,-20],[0,-55],[9,4],[-6,-37],[-11,15],[4,-24],[-3,-20],[-6,10],[0,-38],[-8,-10],[-3,-16],[-5,15],[-6,-40],[-4,-4],[-5,-18],[-2,43],[-6,-23],[-1,13],[-6,14],[0,39],[-6,15],[4,45],[11,28],[7,-2],[1,-21]],[[671,7185],[-6,-39],[-2,6],[8,33]],[[640,7055],[4,-2],[-1,-40],[-8,6],[-1,13],[6,23]],[[519,6933],[-2,-41],[-9,-33],[5,51],[2,-5],[4,28]],[[501,6947],[5,0],[0,-20],[-5,-23],[-5,15],[-3,-14],[-2,35],[2,12],[8,-5]],[[451,6875],[1,-16],[-3,-11],[-3,18],[5,9]],[[447,8527],[-4,-19],[-2,16],[6,3]],[[436,6781],[6,-7],[-1,-16],[-5,1],[0,22]],[[358,6745],[2,-22],[-5,-10],[-1,23],[4,9]],[[352,6718],[-8,-21],[-2,14],[3,19],[7,-12]],[[335,7902],[6,7],[2,-14],[5,3],[6,-12],[1,-54],[-3,-18],[-7,-11],[-2,-18],[-11,20],[-5,-1],[-10,28],[-4,0],[-6,15],[-3,25],[4,7],[10,-7],[5,20],[5,2],[3,14],[4,-6]],[[334,6690],[5,-14],[-10,-36],[1,-6],[12,26],[0,-15],[-5,-17],[-8,-12],[-1,-18],[-8,-18],[-7,-1],[-5,-18],[-9,-16],[-5,17],[9,20],[3,-3],[8,16],[-2,19],[4,20],[6,-9],[1,12],[-7,4],[-4,14],[4,23],[11,13],[2,-26],[5,25]],[[266,6527],[10,37],[1,16],[4,17],[7,9],[3,-10],[1,-25],[-12,-27],[-6,-40],[-6,-13],[-2,36]],[[238,6477],[2,-19],[-8,-1],[-1,13],[7,7]],[[227,7303],[-4,-18],[-1,18],[5,0]],[[212,6440],[2,-18],[-5,-13],[-1,19],[4,12]],[[182,8542],[22,-28],[13,24],[6,-2],[5,-14],[2,-23],[11,-12],[4,-12],[15,-5],[8,-8],[-4,-28],[-7,6],[-8,-5],[-4,-13],[-4,-28],[-5,26],[-6,18],[-6,2],[-3,20],[-15,25],[-6,1],[-11,-22],[-7,11],[-4,23],[4,44]],[[162,6381],[0,-22],[-5,-4],[1,19],[4,7]],[[128,6335],[4,-8],[10,1],[1,-7],[-13,-9],[-2,23]],[[108,6360],[0,19],[4,7],[6,-19],[-2,-17],[-4,1],[1,-20],[-5,-2],[-12,-21],[-6,6],[2,15],[7,-2],[9,33]],[[47,6279],[5,3],[0,-24],[-6,3],[-8,-28],[-4,37],[4,1],[0,29],[5,1],[0,-21],[4,-1]],[[28,6296],[3,-9],[-2,-32],[-5,-10],[0,20],[4,31]],[[0,6291],[5,-1],[4,-23],[-4,-27],[-5,51]],[[9993,6496],[6,-13],[0,-19],[-11,-12],[-8,31],[0,15],[13,-2]],[[1966,3444],[-1,-1081]],[[1965,2363],[-57,0],[-34,71],[-73,150],[3,43]],[[1804,2627],[6,8],[1,16],[-1,36],[-4,1],[-2,71],[6,27],[0,28],[-1,45],[4,34],[4,12],[4,25],[-6,27],[-4,51],[-5,31],[0,24]],[[1806,3063],[2,26],[0,36],[-3,36],[-2,112],[11,7],[3,-23],[3,1],[3,33],[0,153]],[[1823,3444],[101,2],[42,-2]],[[2515,3253],[-1,-35],[-4,-11],[-1,-29],[-5,-31],[0,-46],[-3,-34],[-3,-5]],[[2498,3062],[2,-17],[-4,-14],[-2,-33],[-3,-8],[0,-38],[-5,-10],[0,-13],[-6,-31],[2,-21],[-5,-30],[-5,-59],[5,-25],[-2,-16],[1,-39],[-2,-26]],[[2474,2682],[-69,3],[-13,0]],[[2392,2685],[0,101],[-4,8],[-5,-9],[-3,18]],[[2380,2803],[1,335],[-5,211]],[[2376,3349],[4,0],[123,-1],[2,-36],[-4,-23],[-4,-36],[18,0]],[[1654,4398],[0,-331],[0,-241],[36,-171],[35,-169],[27,-137],[20,-101],[34,-185]],[[1804,2627],[-38,-18],[-30,-16],[-4,25],[0,40],[-2,47],[-4,33],[-9,46],[-12,43],[-2,-12],[-4,8],[1,18],[-5,39],[-7,-8],[-12,28],[-2,23],[-8,28],[-9,-1],[-7,13],[-10,-6],[-5,26],[1,53],[-1,8],[1,38],[-8,28],[0,39],[-3,2],[-4,33],[-4,8],[-1,20],[-11,79],[-5,23],[-1,61],[2,-5],[2,37],[-4,33],[-5,-4],[-7,30],[-2,24],[0,23],[-3,31],[0,50],[5,0],[-2,70],[-2,-7],[-1,-35],[-5,-7],[-7,26],[-1,45],[-4,35],[-6,22],[-3,25],[-9,50],[2,14],[-4,64],[2,35],[-3,54],[-7,52],[-7,29],[-2,35],[7,83],[2,29],[-2,22],[3,57],[-2,52],[-3,13],[1,42]],[[1534,4399],[28,1],[24,1],[38,-3],[30,0]],[[2107,4208],[57,0],[0,-191]],[[2164,4017],[1,-574]],[[2165,3443],[-28,1]],[[2137,3444],[-38,-1],[-72,0],[-15,1],[-46,0]],[[1966,3444],[0,223],[-1,21],[0,162],[0,357]],[[1965,4207],[32,1],[63,-1],[47,1]],[[3025,4400],[0,-113],[-2,-18]],[[3023,4269],[-2,3],[-12,-14],[-15,4],[-7,-26],[-7,-9],[-8,-22]],[[2972,4205],[-2,22],[7,21],[-2,16],[2,144]],[[2977,4408],[12,-2],[36,-3],[0,-3]],[[2922,3980],[-2,-23]],[[2920,3957],[-3,-13],[0,-30],[5,-29],[1,-47],[6,-49],[3,-2],[1,-66]],[[2933,3721],[-19,2],[-2,241]],[[2912,3964],[5,21],[5,-5]],[[2876,3786],[-2,27]],[[2874,3813],[2,12],[4,-19],[-4,-20]],[[2649,2300],[4,-55],[39,-13],[37,-14],[1,-41],[4,1],[1,39],[-1,35],[2,15],[7,-16],[8,-7]],[[2751,2244],[1,-83],[4,-93],[8,-122],[13,-131],[-2,-9],[1,-61],[5,-68],[8,-137],[2,-42],[0,-44],[-3,-158],[-3,-3],[-3,-49],[1,-16],[-5,-36],[-2,9],[-6,-15],[-9,-8],[-2,20],[1,29],[-7,85],[-5,15],[-4,-11],[-3,47],[-1,38],[-6,43],[-2,28],[1,41],[-3,8],[1,-24],[-3,-7],[-9,104],[-4,26],[9,76],[-6,-4],[-4,-24],[-3,38],[5,104],[1,87],[-4,21],[-1,28],[-5,6],[-7,46],[-5,19],[0,28],[-4,11],[-3,31],[-11,42],[-9,-10],[0,-29],[-3,5],[-12,-35],[-12,-9],[0,21],[-3,25],[-15,57],[-10,24],[-10,6],[-8,-4],[-17,-18]],[[2703,3063],[-6,-41],[0,-20],[9,-40],[3,3],[5,-42],[1,-22],[4,-40],[7,-24],[3,-35],[8,-33],[0,-22],[5,-35],[7,-29],[2,-32],[1,-40],[3,-14],[5,-51],[0,-33],[7,-16]],[[2767,2497],[-7,-65],[-2,-34],[-3,-29],[0,-30],[-3,-14],[-1,-81]],[[2632,3060],[37,1]],[[2669,3061],[20,-1],[14,3]],[[640,0],[-7,17],[-1,16],[1,43],[-5,73],[4,24],[2,34],[-2,22],[1,23],[8,-27],[9,-20],[5,-29],[0,-26],[8,-40],[-5,-34],[-8,-15],[-7,-25],[-3,-36]],[[613,397],[3,-26],[4,11],[9,-30],[-1,-27],[-9,-14],[-2,6],[-1,33],[-5,7],[-1,19],[3,21]],[[602,432],[-3,-20],[-7,0],[2,22],[8,-2]],[[574,525],[3,-45],[-2,-26],[-6,-5],[-4,54],[4,1],[5,21]],[[531,626],[3,-2],[2,-20],[-1,-28],[-4,-18],[-9,22],[1,31],[8,15]],[[1908,4871],[0,-472]],[[1908,4399],[-31,-1],[-54,0]],[[1823,4398],[-85,1]],[[1738,4399],[0,349],[4,62],[-2,16],[-6,3],[-2,26],[6,68],[3,6],[3,29],[-1,17],[4,23],[1,34],[6,56],[-2,26],[-7,14],[-4,32]],[[1741,5160],[0,34],[-3,33],[0,16],[0,255],[0,236]],[[1738,5734],[28,0]],[[1766,5734],[0,-195],[9,-54],[1,-52],[5,-23],[6,-8],[0,-14],[11,-51],[1,-21],[8,-20],[0,-12],[8,1],[-4,-71],[-1,-45],[3,-29],[-5,-21],[2,-20],[-1,-21],[6,-20],[7,26],[3,21],[5,-19],[-1,-15],[3,-37],[5,-39],[3,-13],[0,-37],[3,-16],[6,-2],[4,-61],[3,-11],[3,18],[9,-1],[7,17],[3,-10],[7,9],[2,-11],[5,8],[7,39],[4,-33],[5,-20]],[[2489,4496],[53,-3],[28,0]],[[2570,4493],[-1,-37],[4,-43],[5,-70]],[[2578,4343],[0,-450],[-3,-35],[3,-40],[1,-34],[-4,-27],[-1,-25],[-5,-41],[-3,-3],[0,-24],[-2,-9],[-1,-45],[0,-13]],[[2563,3597],[-3,-27],[2,-34],[-11,-17],[-1,-20],[2,-25],[-3,-16],[-11,29],[-3,-2],[-4,-33],[1,-11]],[[2532,3441],[-5,2],[-6,55],[2,12],[-2,37],[0,29],[-9,41],[-3,-4],[-3,25],[-9,38],[0,31],[5,49],[-1,18],[3,23],[-4,13],[-6,9],[-3,-18],[-3,11],[-1,63],[-10,41],[-9,49],[-3,58],[-1,39],[3,27]],[[2467,4089],[0,35],[8,21],[1,29],[4,19],[0,33],[-4,27],[2,34],[11,9],[9,24],[0,29],[4,13],[1,37],[0,24],[-7,18],[-1,20],[-6,35]],[[2655,4340],[0,-228],[0,-266]],[[2655,3846],[-2,-9],[2,-52],[-5,-1],[-5,-18],[-8,9],[1,-38],[-5,-16],[-2,-24],[-5,-9],[-3,-48],[-3,-13],[-6,18],[-1,22],[-7,-24],[1,-21],[-7,-7],[-1,19],[-8,-19],[-2,-20],[-7,28],[-4,-6],[-2,13],[-3,-13],[-7,-2],[-3,-18]],[[2578,4343],[3,-12],[8,0],[9,22]],[[2598,4353],[23,0],[34,0],[0,-13]],[[2473,4685],[0,-28],[4,-19],[-3,-23],[1,-43],[2,-30],[10,-22],[2,-24]],[[2467,4089],[-3,7],[-6,38],[-3,-1],[-40,-5],[-39,-2],[-33,3]],[[2343,4129],[-3,25],[2,49],[-3,43],[0,48],[-5,17],[-1,26],[2,23],[-2,33],[-4,13],[-5,86]],[[2324,4492],[-5,41],[2,29],[1,37],[2,14],[-3,19],[1,33],[-2,16],[4,4]],[[2324,4685],[144,0],[5,0]],[[2356,4017],[3,-18],[9,-14],[-6,-56],[4,-18],[4,-45],[6,-10],[0,-412]],[[2376,3444],[-156,0],[-55,-1]],[[2164,4017],[5,0],[187,0]],[[2718,3716],[-1,-57],[4,-37],[4,-28],[2,-22],[5,-22],[4,-3]],[[2736,3547],[-11,-51],[-11,-29],[0,-14],[-4,-13],[0,-16],[-6,-8],[-1,-21],[-16,-27]],[[2687,3368],[0,-3],[-24,2],[-22,6],[-5,-2],[-32,8],[-36,-5],[-6,9],[1,-35],[-36,2],[-3,-2]],[[2524,3348],[1,24],[5,-8],[2,77]],[[2655,3846],[11,0],[5,-40],[1,-17],[9,-7],[6,-26],[5,13],[10,-14],[4,19],[4,6],[1,-32],[3,-6],[4,-26]],[[2474,2682],[3,-22],[-2,-9],[-1,-38],[5,-24],[0,-57],[-3,-44],[-7,-27],[-2,-43],[-2,4],[-1,-70],[-3,-2],[2,-37],[-2,-14],[54,0],[-3,-63],[4,-41],[1,-32],[4,-20]],[[2521,2143],[-9,-26],[0,-19],[7,-12],[3,30],[6,-30],[-1,-24],[-3,-11],[-7,10],[1,-18],[-2,-27],[5,-24],[9,-7],[3,-29],[3,-4],[-5,-32],[-5,6],[-4,33],[-10,18],[0,33],[-6,-11],[1,-27],[-3,-25],[-3,-4],[-3,28],[-7,1],[-2,-29],[-4,-9],[-5,18],[-4,2],[-3,47],[-7,21],[-2,-3],[-3,40],[-7,-5],[0,24],[-8,-23],[1,-18],[-5,-17],[-9,8],[-10,27],[-7,11],[-16,-9],[-2,-8]],[[2398,2049],[-2,19],[6,68],[-2,37],[2,20],[-1,26],[3,19],[3,50],[0,40],[-8,78],[0,41],[-7,42],[0,196]],[[3046,5029],[12,26],[-2,13],[5,30],[4,13],[-1,12],[5,18],[-1,33],[2,50],[5,17],[1,53],[22,147],[6,-7],[0,-35],[4,-13],[9,21],[6,0],[4,14],[8,-31],[4,-25],[1,-214],[-1,-51],[10,-14],[-2,-22],[3,-21],[-2,-18],[4,-30],[5,7],[5,-68],[-6,-31],[-3,12],[-3,-21],[-4,5],[0,-18],[-6,2],[-8,-40],[-2,28],[-3,2],[1,-30],[-6,-15],[-2,24],[-3,-12],[-7,0],[0,28],[-5,-6],[1,-20],[-4,-42],[1,-12],[-6,-23],[-5,9],[-3,-24],[-4,-3],[-4,-20],[-4,4],[-1,21],[-7,-34],[2,-21],[-5,-7],[0,-18],[-5,-22],[-5,-50]],[[3056,4600],[-3,14],[0,19],[-4,22],[-2,250],[-1,124]],[[2904,3626],[2,0],[-1,0],[-1,0]],[[2933,3721],[-6,-80]],[[2927,3641],[-4,-3],[-8,-12]],[[2915,3626],[-6,-8],[0,31],[-2,13],[3,13],[-4,32],[-2,-14],[-6,3],[-2,35],[2,0],[0,45],[2,18],[-2,60],[3,36],[5,6],[0,37],[-3,-5],[0,-18],[-8,-25],[-2,-21],[0,-56],[-3,-26],[1,-44],[4,-30],[-1,-23],[3,-23],[-2,-16],[-6,30],[-10,15],[-2,29],[-6,-16],[-2,23],[5,29]],[[2874,3756],[2,30]],[[2874,3813],[-4,18],[-6,10],[0,28],[-3,15],[-4,4]],[[2857,3888],[-4,53],[-4,0],[-5,18],[-3,-15],[-5,1],[-1,-21],[-8,14],[-6,-28],[-3,6],[-6,-33],[-6,-17],[1,98]],[[2807,3964],[105,0]],[[3053,4565],[1,-34],[-1,-27],[-5,-25],[0,-29],[6,-4],[4,-31],[0,-24],[3,-6],[0,-22],[8,-19],[9,18],[-2,-26],[-13,-23],[-5,-1],[-3,18],[-5,-6],[0,-13],[-5,-9]],[[3045,4302],[-3,35]],[[3042,4337],[0,6]],[[3042,4343],[-3,14],[-2,45],[-4,0],[-8,-2]],[[2977,4408],[0,7],[6,126]],[[2983,4541],[23,-3]],[[3006,4538],[34,-7],[3,18],[7,19],[3,-3]],[[2598,4353],[5,25],[4,43],[4,26],[3,36],[1,52],[0,57],[-9,111],[3,42],[-2,50],[6,51],[2,43],[-1,23],[5,9],[0,31],[8,9],[5,34],[0,-69],[3,-3],[3,35],[1,58],[2,15],[8,9],[-3,41],[5,35],[7,2],[7,-22],[7,-3],[3,-28],[6,-2],[9,-25],[3,1],[4,-41],[-3,-21],[3,-29],[2,-32],[-2,-71],[-6,-18],[-1,-37],[-7,-12],[-4,-44],[2,-17],[6,-15],[6,24],[6,49],[10,19],[5,-15],[3,-27],[3,-80],[0,-39],[3,-48],[-3,-69],[-4,-11],[-1,25],[-3,-7],[-3,-58],[-6,-21],[-2,-44],[-7,-37],[0,-16]],[[2694,4347],[-39,-7]],[[2635,5110],[1,-23],[-4,-4],[1,33],[2,-6]],[[2496,5270],[11,20],[5,23],[12,9],[8,29],[4,1],[3,20],[9,28],[4,24],[7,15],[6,-13],[-11,-59],[-2,-19],[0,-36],[5,27],[10,-4],[8,-19],[7,-52],[3,-10],[7,9],[2,-12],[7,-6],[16,44],[8,4],[10,-2],[7,15],[6,1],[1,-54],[5,-7],[6,8],[2,-12],[4,16],[8,5],[1,-67],[3,-28],[6,-8],[1,19],[5,0],[3,-20],[-3,-14],[-15,12],[-8,-8],[-8,23],[-2,-21],[1,-18],[-4,4],[-5,27],[-9,15],[-5,1],[-4,-25],[-8,-6],[-8,5],[-3,-10],[-1,-21],[-9,-18],[1,25],[-4,5],[-2,-26],[-6,-1],[-3,-11],[-5,-45],[-8,-58],[1,-5]],[[2576,4989],[-4,20],[2,27],[-7,4],[3,26],[0,34],[-5,23],[-4,24],[-12,19],[-4,-7],[-12,29],[-29,38],[-3,33],[-5,11]],[[2541,5539],[-7,-24],[-4,-3],[1,19],[18,45],[-4,-31],[-4,-6]],[[2324,4685],[0,343],[-7,22],[-5,36],[8,41],[1,22]],[[2321,5149],[-1,76],[-4,20],[-2,42],[0,51],[-1,8],[-1,123],[-5,65],[-3,36],[0,77],[1,27],[-3,60]],[[2302,5734],[59,0],[0,73],[5,-2],[4,-14],[4,-100],[3,-11],[9,-3],[1,-10],[11,-4],[1,-21],[10,5],[0,9],[7,10],[6,-4],[8,-16],[2,-19],[4,2],[4,-43],[2,18],[7,8],[1,-18],[9,-12],[0,-17],[4,-14],[8,8],[5,18],[8,12],[2,-28],[5,6],[6,-6],[6,4],[8,-24],[7,4],[0,-10],[-10,-24],[-13,-19],[-9,-20],[-12,-49],[-5,-31],[-8,-34],[-13,-46],[2,-16]],[[2450,5296],[-2,9],[-6,-16],[0,-113],[-2,-11],[-8,-16],[-6,-41],[-1,-27],[3,-2],[4,-24],[-3,-29],[0,-33],[-2,-70],[8,-34],[6,-3],[3,-21],[8,-21],[2,-25],[8,-33],[5,-7],[5,-42],[-1,-30],[2,-22]],[[2553,2179],[-3,-8],[-7,4],[-3,12],[-7,-8],[-9,-22],[-3,-14]],[[2498,3062],[53,0],[7,0]],[[2524,3348],[-2,0],[-2,0],[1,-47],[-6,-48]],[[2376,3349],[0,95]],[[2356,4017],[-7,50],[-6,62]],[[2108,5151],[0,-181],[-1,0]],[[2107,4970],[-53,1],[-90,0],[-56,0],[0,-100]],[[1766,5734],[130,-1],[58,1],[154,0]],[[2108,5734],[0,-217],[0,-366]],[[2107,4208],[0,382]],[[2107,4590],[21,0],[49,-1],[88,0],[1,-10],[15,-34],[4,19],[4,-4],[13,0],[15,-36],[2,-27],[5,-5]],[[1823,4398],[0,-954]],[[1654,4398],[37,-1],[47,2]],[[3006,4538],[-2,14],[0,28],[3,11],[-1,27],[3,81],[5,37],[2,43],[3,16],[-1,47],[10,17],[5,33],[-3,31],[4,32],[0,18]],[[3034,4973],[4,49],[6,-5],[2,12]],[[3056,4600],[-3,-35]],[[2962,4152],[-5,-13],[-2,-29],[8,-14],[0,-22],[-3,-103],[-9,-76],[-6,-22],[-5,-48],[-3,31],[-8,16],[-10,42],[-1,28],[0,4],[2,11]],[[2922,3980],[8,15],[0,15],[9,31],[2,17],[-9,39],[0,24],[-3,6],[-1,22],[5,33],[-3,20],[7,40],[2,21],[4,13]],[[2943,4276],[13,-41],[9,-28],[-3,-55]],[[2137,3444],[0,-95]],[[2137,3349],[-1,0],[0,-474],[0,-193],[0,-192],[-101,0],[-1,-18],[3,-22]],[[2037,2450],[-48,0],[0,-87],[-24,0]],[[2972,4205],[13,-15],[2,11],[10,0],[6,6],[8,31],[1,-22],[5,-10],[-11,-28],[-22,-42],[-9,-8],[-6,2],[-5,-9],[-2,31]],[[2943,4276],[-2,14],[-4,1],[-5,32],[1,29],[-4,22],[-2,-2],[-3,27],[-125,0],[0,48],[0,3]],[[2799,4450],[17,54],[3,26],[5,18],[-2,32],[-2,7],[-2,52],[17,22],[15,-1],[6,-5],[6,-21],[4,8],[12,-1],[8,14],[8,34],[5,1],[0,52],[3,31],[-7,21],[2,24],[11,32],[4,28],[14,64],[13,32],[19,-5],[23,4]],[[2981,4973],[1,-39],[-2,-36],[3,-34],[-1,-37],[-3,-39],[2,-52],[-1,-16],[4,-31],[-1,-132],[0,-16]],[[2909,3359],[4,-77],[-8,8],[-1,-10],[-10,-11],[-1,-11],[-7,-3],[0,-13],[8,9],[1,-8],[9,9],[3,-18],[5,8],[2,-46],[-2,-22],[-3,-2],[-8,-47],[-9,-2],[-2,-33],[4,-32],[4,-6],[-6,-54],[-6,7],[-9,-6],[-6,-11],[-10,-37],[-7,-48],[-4,-60],[-6,13],[-11,-12]],[[2833,2844],[-32,181],[-32,4],[1,21],[-5,33],[-3,-12],[0,20],[-35,10],[-8,-8],[-6,-17],[-10,-13]],[[2669,3061],[1,45],[5,4],[3,31],[7,29],[7,1],[7,29],[8,10],[6,43],[4,13],[1,-19],[11,37],[5,-8],[4,36],[5,9],[1,45]],[[2744,3366],[20,-5],[19,-3],[23,-1],[103,2]],[[2321,5149],[-213,2]],[[2108,5734],[194,0]],[[2777,4138],[-4,-10],[2,-21],[0,-29],[-4,-46],[-3,-70],[-11,-62],[-3,-8],[-4,12],[-3,-27],[-3,1],[-4,-36],[1,-22],[-3,-18],[-4,29],[-5,-46],[1,-29],[-3,-11],[-1,-25],[-8,-4]],[[2694,4347],[11,-26],[3,-15],[3,14],[6,-30],[4,-9],[14,25],[7,-6],[9,36],[12,34],[14,24]],[[2777,4394],[0,-256]],[[2380,2803],[-11,21],[-3,22],[-7,18],[-2,-16],[-8,1],[-1,10],[-7,-19],[-3,11],[-6,-10],[-5,-29],[-2,17],[-6,14],[-7,0],[-2,21],[-7,-42],[-2,24],[-3,-8],[-3,16],[-7,15],[-5,-25],[-2,26],[-4,3],[-2,21],[-6,8],[-3,-18],[-3,16],[-5,-2],[-6,17],[-6,-2],[-2,36],[-9,2],[-4,-6],[-6,37],[-2,-3],[0,370],[-52,0],[-34,0]],[[1534,4399],[-4,22],[-2,61],[0,43],[-4,33],[3,32],[2,51],[4,54],[2,48],[3,162],[0,22],[3,71],[1,99],[-2,54],[1,32],[12,29]],[[1553,5212],[5,-22],[4,5],[3,2],[6,-20],[3,-23],[1,-57],[15,-21],[12,30],[8,3],[9,-10],[1,-13],[16,27],[3,-9],[9,5],[7,19],[12,17],[12,4],[4,12],[58,-1]],[[2807,3964],[-30,0],[0,174]],[[2777,4394],[5,11],[17,45]],[[3045,4302],[-6,-4],[3,39]],[[3042,4343],[-4,3],[-3,-28],[-1,-40],[-11,-9]],[[2833,2844],[-5,-10],[-6,-31],[-6,-49],[-1,-40],[-5,-31],[-6,0],[-2,-23],[-6,-25],[-4,-28],[-6,-11],[-6,-29],[-1,-14],[-6,-16],[-6,-40]],[[2107,4590],[0,380]],[[2687,3368],[57,-2]],[[2398,2049],[-5,-1],[-14,-26],[-6,15],[-1,31],[-3,-22],[-3,5],[-1,-27],[3,-11],[0,-36],[-5,-37],[-9,-47],[-17,-51],[-2,9],[-5,-13],[0,12],[-7,-9],[-3,24],[-2,-5],[7,-49],[-5,-16],[-5,10],[-1,-35],[-7,-35],[-6,-66],[-4,-69],[-3,5],[-1,-25],[3,6],[-2,-50],[-2,-2],[0,-28],[3,-16],[1,-57],[3,-20],[0,-37],[3,-32],[-9,-20],[-3,25],[-7,10],[-9,-3],[-8,32],[-5,3],[-5,25],[-6,8],[-4,24],[-2,58],[-5,34],[0,30],[-2,31],[1,27],[-4,30],[-3,4],[-5,27],[-1,34],[-5,32],[-6,26],[-3,57],[-2,16],[-4,46],[-1,38],[-4,27],[-6,24],[-1,16],[-6,15],[-4,42],[-13,9],[-7,-2],[-7,15],[-1,-20],[-7,-6],[-5,-40],[-3,-64],[-2,-1],[-4,-37],[-5,-1],[-7,29],[-17,47],[-4,25],[-6,24],[-5,54],[-1,49],[-4,40],[-2,35],[-3,22],[-11,32],[-6,44],[-4,15],[-6,38],[-7,20],[-5,50],[-4,11]],[[1908,4399],[0,-192],[57,0]],[[2981,4973],[30,-2],[23,2]],[[2927,3641],[-4,-32],[-3,-12],[-3,-44],[-6,-71],[-5,-15],[-1,27],[2,58],[8,74]],[[2874,3756],[-4,-8],[-2,-28],[1,-19],[8,6],[1,-31],[10,-12],[3,-24],[8,-26],[-4,-54],[4,-41],[-4,-20],[-1,-24],[4,-15],[-4,-23],[-6,30],[-1,-10],[5,-22],[14,-5],[3,-71]],[[2736,3547],[-1,-16],[4,-32],[5,-16],[4,1],[5,25],[4,-20],[7,11],[13,36],[1,-11],[5,17],[0,34],[4,30],[5,29],[2,34],[6,36],[2,44],[5,-27],[4,-8],[3,16],[6,68],[4,-17],[13,77],[2,57],[15,-64],[3,37]],[[1553,5212],[-5,7],[-4,-12],[-6,17],[1,26],[4,14],[-6,40],[-4,103],[-2,14],[-3,73],[-6,28],[-2,56],[3,38],[6,-18],[11,-24],[8,1],[8,-9],[8,9],[3,-16],[7,1],[5,-42],[3,3],[1,-56],[2,-52],[3,6],[-3,43],[1,43],[4,44],[-3,18],[-1,31],[-3,35],[2,25],[-2,29],[-5,4],[-4,22],[1,21],[163,0]],[[1576,5602],[4,9],[0,-39],[-5,15],[1,15]],[[1568,5655],[3,25],[4,-30],[-1,-27],[-7,8],[1,24]],[[2576,4989],[-1,-23],[-6,-4],[-4,-44],[-2,-30],[3,-6],[5,20],[4,38],[6,15],[5,48],[6,10],[-1,-25],[-4,-23],[-8,-79],[-2,-44],[0,-32],[-3,-10],[-2,-43],[1,-37],[-3,-24],[-3,-59],[0,-47],[4,-42],[-1,-55]],[[2450,5296],[6,-2],[20,33],[8,17],[2,-13],[-4,-25],[9,-33],[5,-3]]]};\n  Datamap.prototype.usgTopo = '__USG__';\n  Datamap.prototype.uzbTopo = '__UZB__';\n  Datamap.prototype.vatTopo = '__VAT__';\n  Datamap.prototype.vctTopo = '__VCT__';\n  Datamap.prototype.venTopo = '__VEN__';\n  Datamap.prototype.vgbTopo = '__VGB__';\n  Datamap.prototype.virTopo = '__VIR__';\n  Datamap.prototype.vnmTopo = '__VNM__';\n  Datamap.prototype.vutTopo = '__VUT__';\n  Datamap.prototype.wlfTopo = '__WLF__';\n  Datamap.prototype.wsbTopo = '__WSB__';\n  Datamap.prototype.wsmTopo = '__WSM__';\n  Datamap.prototype.yemTopo = '__YEM__';\n  Datamap.prototype.zafTopo = '__ZAF__';\n  Datamap.prototype.zmbTopo = '__ZMB__';\n  Datamap.prototype.zweTopo = '__ZWE__';\n\n  /**************************************\n                Utilities\n  ***************************************/\n\n  // Convert lat/lng coords to X / Y coords\n  Datamap.prototype.latLngToXY = function(lat, lng) {\n     return this.projection([lng, lat]);\n  };\n\n  // Add <g> layer to root SVG\n  Datamap.prototype.addLayer = function( className, id, first ) {\n    var layer;\n    if ( first ) {\n      layer = this.svg.insert('g', ':first-child')\n    }\n    else {\n      layer = this.svg.append('g')\n    }\n    return layer.attr('id', id || '')\n      .attr('class', className || '');\n  };\n\n  Datamap.prototype.updateChoropleth = function(data, options) {\n    var svg = this.svg;\n    var that = this;\n\n    // When options.reset = true, reset all the fill colors to the defaultFill and kill all data-info\n    if ( options && options.reset === true ) {\n      svg.selectAll('.datamaps-subunit')\n        .attr('data-info', function() {\n           return \"{}\"\n        })\n        .transition().style('fill', this.options.fills.defaultFill)\n    }\n\n    for ( var subunit in data ) {\n      if ( data.hasOwnProperty(subunit) ) {\n        var color;\n        var subunitData = data[subunit]\n        if ( ! subunit ) {\n          continue;\n        }\n        else if ( typeof subunitData === \"string\" ) {\n          color = subunitData;\n        }\n        else if ( typeof subunitData.color === \"string\" ) {\n          color = subunitData.color;\n        }\n        else if ( typeof subunitData.fillColor === \"string\" ) {\n          color = subunitData.fillColor;\n        }\n        else {\n          color = this.options.fills[ subunitData.fillKey ];\n        }\n        // If it's an object, overriding the previous data\n        if ( subunitData === Object(subunitData) ) {\n          this.options.data[subunit] = defaults(subunitData, this.options.data[subunit] || {});\n          var geo = this.svg.select('.' + subunit).attr('data-info', JSON.stringify(this.options.data[subunit]));\n        }\n        svg\n          .selectAll('.' + subunit)\n          .transition()\n            .style('fill', color);\n      }\n    }\n  };\n\n  Datamap.prototype.updatePopup = function (element, d, options) {\n    var self = this;\n    element.on('mousemove', null);\n    element.on('mousemove', function() {\n      var position = d3.mouse(self.options.element);\n      d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover')\n        .style('top', ( (position[1] + 30)) + \"px\")\n        .html(function() {\n          var data = JSON.parse(element.attr('data-info'));\n          try {\n            return options.popupTemplate(d, data);\n          } catch (e) {\n            return \"\";\n          }\n        })\n        .style('left', ( position[0]) + \"px\");\n    });\n\n    d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover').style('display', 'block');\n  };\n\n  Datamap.prototype.addPlugin = function( name, pluginFn ) {\n    var self = this;\n    if ( typeof Datamap.prototype[name] === \"undefined\" ) {\n      Datamap.prototype[name] = function(data, options, callback, createNewLayer) {\n        var layer;\n        if ( typeof createNewLayer === \"undefined\" ) {\n          createNewLayer = false;\n        }\n\n        if ( typeof options === 'function' ) {\n          callback = options;\n          options = undefined;\n        }\n\n        options = defaults(options || {}, self.options[name + 'Config']);\n\n        // Add a single layer, reuse the old layer\n        if ( !createNewLayer && this.options[name + 'Layer'] ) {\n          layer = this.options[name + 'Layer'];\n          options = options || this.options[name + 'Options'];\n        }\n        else {\n          layer = this.addLayer(name);\n          this.options[name + 'Layer'] = layer;\n          this.options[name + 'Options'] = options;\n        }\n        pluginFn.apply(this, [layer, data, options]);\n        if ( callback ) {\n          callback(layer);\n        }\n      };\n    }\n  };\n\n  // Expose library\n  if (typeof exports === 'object') {\n    d3 = require('d3');\n    topojson = require('topojson');\n    module.exports = Datamap;\n  }\n  else if ( typeof define === \"function\" && define.amd ) {\n    define( \"datamaps\", [\"require\", \"d3\", \"topojson\"], function(require) {\n      d3 = require('d3');\n      topojson = require('topojson');\n\n      return Datamap;\n    });\n  }\n  else {\n    window.Datamap = window.Datamaps = Datamap;\n  }\n\n  if ( window.jQuery ) {\n    window.jQuery.fn.datamaps = function(options, callback) {\n      options = options || {};\n      options.element = this[0];\n      var datamap = new Datamap(options);\n      if ( typeof callback === \"function\" ) {\n        callback(datamap, options);\n      }\n      return this;\n    };\n  }\n})();\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n","'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\nvar $export = require('./_export');\nvar $forEach = require('./_array-methods')(0);\nvar STRICT = require('./_strict-method')([].forEach, true);\n\n$export($export.P + $export.F * !STRICT, 'Array', {\n  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])\n  forEach: function forEach(callbackfn /* , thisArg */) {\n    return $forEach(this, callbackfn, arguments[1]);\n  }\n});\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","'use strict';\nvar $export = require('./_export');\nvar $indexOf = require('./_array-includes')(false);\nvar $native = [].indexOf;\nvar NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;\n\n$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {\n  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? $native.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments[1]);\n  }\n});\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","'use strict';\nvar $export = require('./_export');\nvar $map = require('./_array-methods')(1);\n\n$export($export.P + $export.F * !require('./_strict-method')([].map, true), 'Array', {\n  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments[1]);\n  }\n});\n","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));","export var name = \"d3\";\nexport var version = \"5.7.0\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index.js\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"yarn test && rollup -c\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"rimraf\":\"2\",\"rollup\":\"0.64\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"rollup-plugin-terser\":\"1\",\"tape\":\"4\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export var slice = Array.prototype.slice;\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","export var slice = Array.prototype.slice;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport {phi, squarifyRatio} from \"./squarify\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","export var slice = Array.prototype.slice;\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default function() {}\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","export default function(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n","// TODO if quantized, use simpler Int32 hashing?\n\nvar buffer = new ArrayBuffer(16),\n    floats = new Float64Array(buffer),\n    uints = new Uint32Array(buffer);\n\nexport default function(point) {\n  floats[0] = point[0];\n  floats[1] = point[1];\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    quarterPi = pi / 4,\n    radians = pi / 180,\n    abs = Math.abs,\n    atan2 = Math.atan2,\n    cos = Math.cos,\n    sin = Math.sin;\n\nfunction halfArea(ring, closed) {\n  var i = 0,\n      n = ring.length,\n      sum = 0,\n      point = ring[closed ? i++ : n - 1],\n      lambda0, lambda1 = point[0] * radians,\n      phi1 = (point[1] * radians) / 2 + quarterPi,\n      cosPhi0, cosPhi1 = cos(phi1),\n      sinPhi0, sinPhi1 = sin(phi1);\n\n  for (; i < n; ++i) {\n    point = ring[i];\n    lambda0 = lambda1, lambda1 = point[0] * radians;\n    phi1 = (point[1] * radians) / 2 + quarterPi;\n    cosPhi0 = cosPhi1, cosPhi1 = cos(phi1);\n    sinPhi0 = sinPhi1, sinPhi1 = sin(phi1);\n\n    // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n    // See https://github.com/d3/d3-geo/blob/master/README.md#geoArea\n    var dLambda = lambda1 - lambda0,\n        sdLambda = dLambda >= 0 ? 1 : -1,\n        adLambda = sdLambda * dLambda,\n        k = sinPhi0 * sinPhi1,\n        u = cosPhi0 * cosPhi1 + k * cos(adLambda),\n        v = k * sdLambda * sin(adLambda);\n    sum += atan2(v, u);\n  }\n\n  return sum;\n}\n\nexport function sphericalRingArea(ring, interior) {\n  var sum = halfArea(ring, true);\n  if (interior) sum *= -1;\n  return (sum < 0 ? tau + sum : sum) * 2;\n}\n\nexport function sphericalTriangleArea(t) {\n  return abs(halfArea(t, false)) * 2;\n}\n"],"sourceRoot":""}